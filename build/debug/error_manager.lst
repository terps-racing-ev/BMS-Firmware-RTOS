ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"error_manager.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/error_manager.c"
  20              		.section	.text.RotateByteBits,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	RotateByteBits:
  27              	.LVL0:
  28              	.LFB303:
   1:Core/Src/error_manager.c **** /* USER CODE BEGIN Header */
   2:Core/Src/error_manager.c **** /**
   3:Core/Src/error_manager.c ****   ******************************************************************************
   4:Core/Src/error_manager.c ****   * @file           : error_manager.c
   5:Core/Src/error_manager.c ****   * @brief          : BMS Master State Manager Implementation
   6:Core/Src/error_manager.c ****   ******************************************************************************
   7:Core/Src/error_manager.c ****   * @attention
   8:Core/Src/error_manager.c ****   *
   9:Core/Src/error_manager.c ****   * The Master State Manager centralizes BMS state machine control and fault
  10:Core/Src/error_manager.c ****   * monitoring. It runs as a dedicated task that:
  11:Core/Src/error_manager.c ****   * - Monitors error/warning flags set by other tasks
  12:Core/Src/error_manager.c ****   * - Manages automatic state transitions based on fault conditions
  13:Core/Src/error_manager.c ****   * - Enforces state machine rules and valid transitions
  14:Core/Src/error_manager.c ****   * - Reports system status via CAN heartbeat
  15:Core/Src/error_manager.c ****   *
  16:Core/Src/error_manager.c ****   * Copyright (c) 2025 STMicroelectronics.
  17:Core/Src/error_manager.c ****   * All rights reserved.
  18:Core/Src/error_manager.c ****   *
  19:Core/Src/error_manager.c ****   * This software is licensed under terms that can be found in the LICENSE file
  20:Core/Src/error_manager.c ****   * in the root directory of this software component.
  21:Core/Src/error_manager.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  22:Core/Src/error_manager.c ****   *
  23:Core/Src/error_manager.c ****   ******************************************************************************
  24:Core/Src/error_manager.c ****   */
  25:Core/Src/error_manager.c **** /* USER CODE END Header */
  26:Core/Src/error_manager.c **** 
  27:Core/Src/error_manager.c **** /* Includes ------------------------------------------------------------------*/
  28:Core/Src/error_manager.c **** #include "error_manager.h"
  29:Core/Src/error_manager.c **** #include <string.h>
  30:Core/Src/error_manager.c **** 
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s 			page 2


  31:Core/Src/error_manager.c **** /* Private defines -----------------------------------------------------------*/
  32:Core/Src/error_manager.c **** #define MASTER_STATE_TASK_PERIOD_MS     100   /**< State manager runs every 100ms */
  33:Core/Src/error_manager.c **** #define FAULT_RECOVERY_DELAY_MS         5000  /**< Delay before auto-recovery attempt */
  34:Core/Src/error_manager.c **** 
  35:Core/Src/error_manager.c **** /* Critical faults that force ERROR state */
  36:Core/Src/error_manager.c **** #define CRITICAL_FAULTS (ERROR_OVER_TEMP | ERROR_UNDER_VOLTAGE | \
  37:Core/Src/error_manager.c ****                          ERROR_OVER_VOLTAGE | ERROR_SHORT_CIRCUIT | \
  38:Core/Src/error_manager.c ****                          ERROR_OVER_CURRENT_CHARGE | ERROR_OVER_CURRENT_DISCHARGE)
  39:Core/Src/error_manager.c **** 
  40:Core/Src/error_manager.c **** /* Private variables ---------------------------------------------------------*/
  41:Core/Src/error_manager.c **** static Error_Manager_t error_mgr = {0};
  42:Core/Src/error_manager.c **** static osMutexId_t error_mutex = NULL;
  43:Core/Src/error_manager.c **** static const osMutexAttr_t error_mutex_attributes = {
  44:Core/Src/error_manager.c ****     .name = "ErrorMutex"
  45:Core/Src/error_manager.c **** };
  46:Core/Src/error_manager.c **** 
  47:Core/Src/error_manager.c **** static uint32_t fault_timestamp = 0;  /**< Timestamp when first fault occurred */
  48:Core/Src/error_manager.c **** static BMS_State_t previous_state = BMS_STATE_INIT;  /**< Previous state before ERROR */
  49:Core/Src/error_manager.c **** 
  50:Core/Src/error_manager.c **** /* Private function prototypes -----------------------------------------------*/
  51:Core/Src/error_manager.c **** static void ProcessStateMachine(void);
  52:Core/Src/error_manager.c **** static void CheckFaultConditions(void);
  53:Core/Src/error_manager.c **** static void HandleStateEntry(BMS_State_t new_state);
  54:Core/Src/error_manager.c **** static void HandleStateExit(BMS_State_t old_state);
  55:Core/Src/error_manager.c **** 
  56:Core/Src/error_manager.c **** /* Function Implementations --------------------------------------------------*/
  57:Core/Src/error_manager.c **** 
  58:Core/Src/error_manager.c **** /**
  59:Core/Src/error_manager.c ****   * @brief  Initialize error manager
  60:Core/Src/error_manager.c ****   * @retval HAL_StatusTypeDef
  61:Core/Src/error_manager.c ****   */
  62:Core/Src/error_manager.c **** HAL_StatusTypeDef ErrorMgr_Init(void)
  63:Core/Src/error_manager.c **** {
  64:Core/Src/error_manager.c ****     // Initialize error manager structure
  65:Core/Src/error_manager.c ****     memset(&error_mgr, 0, sizeof(Error_Manager_t));
  66:Core/Src/error_manager.c ****     
  67:Core/Src/error_manager.c ****     // Set initial state
  68:Core/Src/error_manager.c ****     error_mgr.state = BMS_STATE_INIT;
  69:Core/Src/error_manager.c ****     error_mgr.uptime_seconds = 0;
  70:Core/Src/error_manager.c ****     error_mgr.fault_count = 0;
  71:Core/Src/error_manager.c ****     error_mgr.last_heartbeat = osKernelGetTickCount();
  72:Core/Src/error_manager.c ****     
  73:Core/Src/error_manager.c ****     // Create mutex for thread-safe access
  74:Core/Src/error_manager.c ****     error_mutex = osMutexNew(&error_mutex_attributes);
  75:Core/Src/error_manager.c ****     if (error_mutex == NULL) {
  76:Core/Src/error_manager.c ****         return HAL_ERROR;
  77:Core/Src/error_manager.c ****     }
  78:Core/Src/error_manager.c ****     
  79:Core/Src/error_manager.c ****     return HAL_OK;
  80:Core/Src/error_manager.c **** }
  81:Core/Src/error_manager.c **** 
  82:Core/Src/error_manager.c **** /**
  83:Core/Src/error_manager.c ****   * @brief  Set an error flag
  84:Core/Src/error_manager.c ****   * @param  error_flag: Error flag bit to set
  85:Core/Src/error_manager.c ****   * @retval None
  86:Core/Src/error_manager.c ****   */
  87:Core/Src/error_manager.c **** void ErrorMgr_SetError(uint32_t error_flag)
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s 			page 3


  88:Core/Src/error_manager.c **** {
  89:Core/Src/error_manager.c ****     if (osMutexAcquire(error_mutex, osWaitForever) == osOK) {
  90:Core/Src/error_manager.c ****         // Check if this is a new error
  91:Core/Src/error_manager.c ****         if (!(error_mgr.error_flags & error_flag)) {
  92:Core/Src/error_manager.c ****             error_mgr.fault_count++;
  93:Core/Src/error_manager.c ****             
  94:Core/Src/error_manager.c ****             // Record timestamp of first fault
  95:Core/Src/error_manager.c ****             if (error_mgr.error_flags == 0) {
  96:Core/Src/error_manager.c ****                 fault_timestamp = osKernelGetTickCount();
  97:Core/Src/error_manager.c ****             }
  98:Core/Src/error_manager.c ****         }
  99:Core/Src/error_manager.c ****         
 100:Core/Src/error_manager.c ****         error_mgr.error_flags |= error_flag;
 101:Core/Src/error_manager.c ****         
 102:Core/Src/error_manager.c ****         // Critical faults trigger immediate FAULT state
 103:Core/Src/error_manager.c ****         // (State machine task will handle the actual transition)
 104:Core/Src/error_manager.c ****         
 105:Core/Src/error_manager.c ****         osMutexRelease(error_mutex);
 106:Core/Src/error_manager.c ****     }
 107:Core/Src/error_manager.c **** }
 108:Core/Src/error_manager.c **** 
 109:Core/Src/error_manager.c **** /**
 110:Core/Src/error_manager.c ****   * @brief  Clear an error flag
 111:Core/Src/error_manager.c ****   * @param  error_flag: Error flag bit to clear
 112:Core/Src/error_manager.c ****   * @retval None
 113:Core/Src/error_manager.c ****   */
 114:Core/Src/error_manager.c **** void ErrorMgr_ClearError(uint32_t error_flag)
 115:Core/Src/error_manager.c **** {
 116:Core/Src/error_manager.c ****     if (osMutexAcquire(error_mutex, osWaitForever) == osOK) {
 117:Core/Src/error_manager.c ****         // Check if this error was previously set
 118:Core/Src/error_manager.c ****         if (error_mgr.error_flags & error_flag) {
 119:Core/Src/error_manager.c ****             // Count how many bits are being cleared
 120:Core/Src/error_manager.c ****             uint32_t cleared_bits = error_mgr.error_flags & error_flag;
 121:Core/Src/error_manager.c ****             uint8_t cleared_count = 0;
 122:Core/Src/error_manager.c ****             for (uint8_t bit = 0; bit < 32; bit++) {
 123:Core/Src/error_manager.c ****                 if (cleared_bits & (1 << bit)) {
 124:Core/Src/error_manager.c ****                     cleared_count++;
 125:Core/Src/error_manager.c ****                 }
 126:Core/Src/error_manager.c ****             }
 127:Core/Src/error_manager.c ****             
 128:Core/Src/error_manager.c ****             // Decrement fault count by number of errors being cleared
 129:Core/Src/error_manager.c ****             if (error_mgr.fault_count >= cleared_count) {
 130:Core/Src/error_manager.c ****                 error_mgr.fault_count -= cleared_count;
 131:Core/Src/error_manager.c ****             } else {
 132:Core/Src/error_manager.c ****                 error_mgr.fault_count = 0;  // Safety check
 133:Core/Src/error_manager.c ****             }
 134:Core/Src/error_manager.c ****         }
 135:Core/Src/error_manager.c ****         
 136:Core/Src/error_manager.c ****         error_mgr.error_flags &= ~error_flag;
 137:Core/Src/error_manager.c ****         
 138:Core/Src/error_manager.c ****         // State machine task will handle automatic recovery
 139:Core/Src/error_manager.c ****         
 140:Core/Src/error_manager.c ****         osMutexRelease(error_mutex);
 141:Core/Src/error_manager.c ****     }
 142:Core/Src/error_manager.c **** }
 143:Core/Src/error_manager.c **** 
 144:Core/Src/error_manager.c **** /**
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s 			page 4


 145:Core/Src/error_manager.c ****   * @brief  Set a warning flag
 146:Core/Src/error_manager.c ****   * @param  warning_flag: Warning flag bit to set
 147:Core/Src/error_manager.c ****   * @retval None
 148:Core/Src/error_manager.c ****   */
 149:Core/Src/error_manager.c **** void ErrorMgr_SetWarning(uint32_t warning_flag)
 150:Core/Src/error_manager.c **** {
 151:Core/Src/error_manager.c ****     if (osMutexAcquire(error_mutex, osWaitForever) == osOK) {
 152:Core/Src/error_manager.c ****         error_mgr.warning_flags |= warning_flag;
 153:Core/Src/error_manager.c ****         osMutexRelease(error_mutex);
 154:Core/Src/error_manager.c ****     }
 155:Core/Src/error_manager.c **** }
 156:Core/Src/error_manager.c **** 
 157:Core/Src/error_manager.c **** /**
 158:Core/Src/error_manager.c ****   * @brief  Clear a warning flag
 159:Core/Src/error_manager.c ****   * @param  warning_flag: Warning flag bit to clear
 160:Core/Src/error_manager.c ****   * @retval None
 161:Core/Src/error_manager.c ****   */
 162:Core/Src/error_manager.c **** void ErrorMgr_ClearWarning(uint32_t warning_flag)
 163:Core/Src/error_manager.c **** {
 164:Core/Src/error_manager.c ****     if (osMutexAcquire(error_mutex, osWaitForever) == osOK) {
 165:Core/Src/error_manager.c ****         error_mgr.warning_flags &= ~warning_flag;
 166:Core/Src/error_manager.c ****         osMutexRelease(error_mutex);
 167:Core/Src/error_manager.c ****     }
 168:Core/Src/error_manager.c **** }
 169:Core/Src/error_manager.c **** 
 170:Core/Src/error_manager.c **** /**
 171:Core/Src/error_manager.c ****   * @brief  Get current error flags
 172:Core/Src/error_manager.c ****   * @retval uint32_t: Current error flags
 173:Core/Src/error_manager.c ****   */
 174:Core/Src/error_manager.c **** uint32_t ErrorMgr_GetErrors(void)
 175:Core/Src/error_manager.c **** {
 176:Core/Src/error_manager.c ****     uint32_t errors = 0;
 177:Core/Src/error_manager.c ****     
 178:Core/Src/error_manager.c ****     if (osMutexAcquire(error_mutex, osWaitForever) == osOK) {
 179:Core/Src/error_manager.c ****         errors = error_mgr.error_flags;
 180:Core/Src/error_manager.c ****         osMutexRelease(error_mutex);
 181:Core/Src/error_manager.c ****     }
 182:Core/Src/error_manager.c ****     
 183:Core/Src/error_manager.c ****     return errors;
 184:Core/Src/error_manager.c **** }
 185:Core/Src/error_manager.c **** 
 186:Core/Src/error_manager.c **** /**
 187:Core/Src/error_manager.c ****   * @brief  Get current warning flags
 188:Core/Src/error_manager.c ****   * @retval uint32_t: Current warning flags
 189:Core/Src/error_manager.c ****   */
 190:Core/Src/error_manager.c **** uint32_t ErrorMgr_GetWarnings(void)
 191:Core/Src/error_manager.c **** {
 192:Core/Src/error_manager.c ****     uint32_t warnings = 0;
 193:Core/Src/error_manager.c ****     
 194:Core/Src/error_manager.c ****     if (osMutexAcquire(error_mutex, osWaitForever) == osOK) {
 195:Core/Src/error_manager.c ****         warnings = error_mgr.warning_flags;
 196:Core/Src/error_manager.c ****         osMutexRelease(error_mutex);
 197:Core/Src/error_manager.c ****     }
 198:Core/Src/error_manager.c ****     
 199:Core/Src/error_manager.c ****     return warnings;
 200:Core/Src/error_manager.c **** }
 201:Core/Src/error_manager.c **** 
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s 			page 5


 202:Core/Src/error_manager.c **** /**
 203:Core/Src/error_manager.c ****   * @brief  Check if any errors are active
 204:Core/Src/error_manager.c ****   * @retval bool: true if any errors active
 205:Core/Src/error_manager.c ****   */
 206:Core/Src/error_manager.c **** bool ErrorMgr_HasErrors(void)
 207:Core/Src/error_manager.c **** {
 208:Core/Src/error_manager.c ****     return (ErrorMgr_GetErrors() != 0);
 209:Core/Src/error_manager.c **** }
 210:Core/Src/error_manager.c **** 
 211:Core/Src/error_manager.c **** /**
 212:Core/Src/error_manager.c ****   * @brief  Check if any warnings are active
 213:Core/Src/error_manager.c ****   * @retval bool: true if any warnings active
 214:Core/Src/error_manager.c ****   */
 215:Core/Src/error_manager.c **** bool ErrorMgr_HasWarnings(void)
 216:Core/Src/error_manager.c **** {
 217:Core/Src/error_manager.c ****     return (ErrorMgr_GetWarnings() != 0);
 218:Core/Src/error_manager.c **** }
 219:Core/Src/error_manager.c **** 
 220:Core/Src/error_manager.c **** /**
 221:Core/Src/error_manager.c ****   * @brief  Set BMS state
 222:Core/Src/error_manager.c ****   * @param  state: New BMS state
 223:Core/Src/error_manager.c ****   * @retval None
 224:Core/Src/error_manager.c ****   * @note   Direct state changes. Use ErrorMgr_RequestStateTransition for validated transitions
 225:Core/Src/error_manager.c ****   */
 226:Core/Src/error_manager.c **** void ErrorMgr_SetState(BMS_State_t state)
 227:Core/Src/error_manager.c **** {
 228:Core/Src/error_manager.c ****     if (osMutexAcquire(error_mutex, osWaitForever) == osOK) {
 229:Core/Src/error_manager.c ****         if (error_mgr.state != state) {
 230:Core/Src/error_manager.c ****             HandleStateExit(error_mgr.state);
 231:Core/Src/error_manager.c ****             error_mgr.state = state;
 232:Core/Src/error_manager.c ****             HandleStateEntry(state);
 233:Core/Src/error_manager.c ****         }
 234:Core/Src/error_manager.c ****         osMutexRelease(error_mutex);
 235:Core/Src/error_manager.c ****     }
 236:Core/Src/error_manager.c **** }
 237:Core/Src/error_manager.c **** 
 238:Core/Src/error_manager.c **** /**
 239:Core/Src/error_manager.c ****   * @brief  Get current BMS state
 240:Core/Src/error_manager.c ****   * @retval BMS_State_t: Current BMS state
 241:Core/Src/error_manager.c ****   */
 242:Core/Src/error_manager.c **** BMS_State_t ErrorMgr_GetState(void)
 243:Core/Src/error_manager.c **** {
 244:Core/Src/error_manager.c ****     BMS_State_t state = BMS_STATE_INIT;
 245:Core/Src/error_manager.c ****     
 246:Core/Src/error_manager.c ****     if (osMutexAcquire(error_mutex, osWaitForever) == osOK) {
 247:Core/Src/error_manager.c ****         state = error_mgr.state;
 248:Core/Src/error_manager.c ****         osMutexRelease(error_mutex);
 249:Core/Src/error_manager.c ****     }
 250:Core/Src/error_manager.c ****     
 251:Core/Src/error_manager.c ****     return state;
 252:Core/Src/error_manager.c **** }
 253:Core/Src/error_manager.c **** 
 254:Core/Src/error_manager.c **** /**
 255:Core/Src/error_manager.c ****   * @brief  Rotate through active bits in a single byte
 256:Core/Src/error_manager.c ****   * @param  byte_value: The byte containing error flags
 257:Core/Src/error_manager.c ****   * @param  rotation_index: Pointer to rotation index for this byte
 258:Core/Src/error_manager.c ****   * @retval Rotated byte with only one bit set
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s 			page 6


 259:Core/Src/error_manager.c ****   */
 260:Core/Src/error_manager.c **** static uint8_t RotateByteBits(uint8_t byte_value, uint8_t *rotation_index)
 261:Core/Src/error_manager.c **** {
  29              		.loc 1 261 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
 262:Core/Src/error_manager.c ****     if (byte_value == 0) {
  33              		.loc 1 262 5 view .LVU1
  34              		.loc 1 262 8 is_stmt 0 view .LVU2
  35 0000 8446     		mov	ip, r0
  36 0002 10B1     		cbz	r0, .L17
  37              	.LBB2:
 263:Core/Src/error_manager.c ****         *rotation_index = 0;
 264:Core/Src/error_manager.c ****         return 0;
 265:Core/Src/error_manager.c ****     }
 266:Core/Src/error_manager.c ****     
 267:Core/Src/error_manager.c ****     // Count active bits in this byte
 268:Core/Src/error_manager.c ****     uint8_t active_bit_count = 0;
 269:Core/Src/error_manager.c ****     for (uint8_t bit = 0; bit < 8; bit++) {
  38              		.loc 1 269 18 view .LVU3
  39 0004 0023     		movs	r3, #0
  40              	.LBE2:
 268:Core/Src/error_manager.c ****     for (uint8_t bit = 0; bit < 8; bit++) {
  41              		.loc 1 268 13 view .LVU4
  42 0006 1846     		mov	r0, r3
  43              	.LVL1:
 268:Core/Src/error_manager.c ****     for (uint8_t bit = 0; bit < 8; bit++) {
  44              		.loc 1 268 13 view .LVU5
  45 0008 04E0     		b	.L2
  46              	.LVL2:
  47              	.L17:
 263:Core/Src/error_manager.c ****         *rotation_index = 0;
  48              		.loc 1 263 9 is_stmt 1 view .LVU6
 263:Core/Src/error_manager.c ****         *rotation_index = 0;
  49              		.loc 1 263 25 is_stmt 0 view .LVU7
  50 000a 0023     		movs	r3, #0
  51 000c 0B70     		strb	r3, [r1]
 264:Core/Src/error_manager.c ****     }
  52              		.loc 1 264 9 is_stmt 1 view .LVU8
 264:Core/Src/error_manager.c ****     }
  53              		.loc 1 264 16 is_stmt 0 view .LVU9
  54 000e 7047     		bx	lr
  55              	.LVL3:
  56              	.L4:
  57              	.LBB3:
  58              		.loc 1 269 39 is_stmt 1 discriminator 2 view .LVU10
  59 0010 0133     		adds	r3, r3, #1
  60              	.LVL4:
  61              		.loc 1 269 39 is_stmt 0 discriminator 2 view .LVU11
  62 0012 DBB2     		uxtb	r3, r3
  63              	.LVL5:
  64              	.L2:
  65              		.loc 1 269 31 is_stmt 1 discriminator 1 view .LVU12
  66 0014 072B     		cmp	r3, #7
  67 0016 07D8     		bhi	.L18
 270:Core/Src/error_manager.c ****         if (byte_value & (1 << bit)) {
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s 			page 7


  68              		.loc 1 270 9 view .LVU13
  69              		.loc 1 270 13 is_stmt 0 view .LVU14
  70 0018 4CFA03F2 		asr	r2, ip, r3
  71              		.loc 1 270 12 view .LVU15
  72 001c 12F0010F 		tst	r2, #1
  73 0020 F6D0     		beq	.L4
 271:Core/Src/error_manager.c ****             active_bit_count++;
  74              		.loc 1 271 13 is_stmt 1 view .LVU16
  75              		.loc 1 271 29 is_stmt 0 view .LVU17
  76 0022 0130     		adds	r0, r0, #1
  77              	.LVL6:
  78              		.loc 1 271 29 view .LVU18
  79 0024 C0B2     		uxtb	r0, r0
  80              	.LVL7:
  81              		.loc 1 271 29 view .LVU19
  82 0026 F3E7     		b	.L4
  83              	.LVL8:
  84              	.L18:
  85              		.loc 1 271 29 view .LVU20
  86              	.LBE3:
 272:Core/Src/error_manager.c ****         }
 273:Core/Src/error_manager.c ****     }
 274:Core/Src/error_manager.c ****     
 275:Core/Src/error_manager.c ****     // Find the Nth active bit
 276:Core/Src/error_manager.c ****     if (active_bit_count > 0) {
  87              		.loc 1 276 5 is_stmt 1 view .LVU21
  88              		.loc 1 276 8 is_stmt 0 view .LVU22
  89 0028 F0B9     		cbnz	r0, .L11
  90              	.LBB4:
  91              	.LBB5:
  92 002a 7047     		bx	lr
  93              	.LVL9:
  94              	.L8:
  95              		.cfi_def_cfa_offset 8
  96              		.cfi_offset 4, -8
  97              		.cfi_offset 14, -4
 277:Core/Src/error_manager.c ****         uint8_t current_index = 0;
 278:Core/Src/error_manager.c ****         for (uint8_t bit = 0; bit < 8; bit++) {
 279:Core/Src/error_manager.c ****             if (byte_value & (1 << bit)) {
 280:Core/Src/error_manager.c ****                 if (current_index == *rotation_index) {
 281:Core/Src/error_manager.c ****                     // Update rotation for next call
 282:Core/Src/error_manager.c ****                     *rotation_index = (*rotation_index + 1) % active_bit_count;
 283:Core/Src/error_manager.c ****                     return (1 << bit);
 284:Core/Src/error_manager.c ****                 }
 285:Core/Src/error_manager.c ****                 current_index++;
  98              		.loc 1 285 17 is_stmt 1 view .LVU23
  99              		.loc 1 285 30 is_stmt 0 view .LVU24
 100 002c 0132     		adds	r2, r2, #1
 101 002e D2B2     		uxtb	r2, r2
 102              	.L7:
 103              	.LVL10:
 278:Core/Src/error_manager.c ****             if (byte_value & (1 << bit)) {
 104              		.loc 1 278 43 is_stmt 1 discriminator 2 view .LVU25
 105 0030 0133     		adds	r3, r3, #1
 106              	.LVL11:
 278:Core/Src/error_manager.c ****             if (byte_value & (1 << bit)) {
 107              		.loc 1 278 43 is_stmt 0 discriminator 2 view .LVU26
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s 			page 8


 108 0032 DBB2     		uxtb	r3, r3
 109              	.LVL12:
 278:Core/Src/error_manager.c ****             if (byte_value & (1 << bit)) {
 110              		.loc 1 278 35 is_stmt 1 discriminator 1 view .LVU27
 111 0034 072B     		cmp	r3, #7
 112 0036 15D8     		bhi	.L19
 113              	.LVL13:
 114              	.L9:
 279:Core/Src/error_manager.c ****                 if (current_index == *rotation_index) {
 115              		.loc 1 279 13 view .LVU28
 279:Core/Src/error_manager.c ****                 if (current_index == *rotation_index) {
 116              		.loc 1 279 17 is_stmt 0 view .LVU29
 117 0038 1C46     		mov	r4, r3
 118 003a 4CFA03FE 		asr	lr, ip, r3
 279:Core/Src/error_manager.c ****                 if (current_index == *rotation_index) {
 119              		.loc 1 279 16 view .LVU30
 120 003e 1EF0010F 		tst	lr, #1
 121 0042 F5D0     		beq	.L7
 280:Core/Src/error_manager.c ****                     // Update rotation for next call
 122              		.loc 1 280 17 is_stmt 1 view .LVU31
 280:Core/Src/error_manager.c ****                     // Update rotation for next call
 123              		.loc 1 280 38 is_stmt 0 view .LVU32
 124 0044 91F800E0 		ldrb	lr, [r1]	@ zero_extendqisi2
 280:Core/Src/error_manager.c ****                     // Update rotation for next call
 125              		.loc 1 280 20 view .LVU33
 126 0048 9645     		cmp	lr, r2
 127 004a EFD1     		bne	.L8
 282:Core/Src/error_manager.c ****                     return (1 << bit);
 128              		.loc 1 282 21 is_stmt 1 view .LVU34
 282:Core/Src/error_manager.c ****                     return (1 << bit);
 129              		.loc 1 282 56 is_stmt 0 view .LVU35
 130 004c 0EF1010E 		add	lr, lr, #1
 282:Core/Src/error_manager.c ****                     return (1 << bit);
 131              		.loc 1 282 61 view .LVU36
 132 0050 9EFBF0F3 		sdiv	r3, lr, r0
 133              	.LVL14:
 282:Core/Src/error_manager.c ****                     return (1 << bit);
 134              		.loc 1 282 61 view .LVU37
 135 0054 00FB13EE 		mls	lr, r0, r3, lr
 282:Core/Src/error_manager.c ****                     return (1 << bit);
 136              		.loc 1 282 37 view .LVU38
 137 0058 81F800E0 		strb	lr, [r1]
 283:Core/Src/error_manager.c ****                 }
 138              		.loc 1 283 21 is_stmt 1 view .LVU39
 283:Core/Src/error_manager.c ****                 }
 139              		.loc 1 283 31 is_stmt 0 view .LVU40
 140 005c 0120     		movs	r0, #1
 141              	.LVL15:
 283:Core/Src/error_manager.c ****                 }
 142              		.loc 1 283 31 view .LVU41
 143 005e A040     		lsls	r0, r0, r4
 144 0060 C0B2     		uxtb	r0, r0
 145 0062 00E0     		b	.L3
 146              	.LVL16:
 147              	.L19:
 283:Core/Src/error_manager.c ****                 }
 148              		.loc 1 283 31 view .LVU42
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s 			page 9


 149              	.LBE5:
 150              	.LBE4:
 286:Core/Src/error_manager.c ****             }
 287:Core/Src/error_manager.c ****         }
 288:Core/Src/error_manager.c ****     }
 289:Core/Src/error_manager.c ****     
 290:Core/Src/error_manager.c ****     return 0;
 151              		.loc 1 290 12 view .LVU43
 152 0064 0020     		movs	r0, #0
 153              	.LVL17:
 154              	.L3:
 291:Core/Src/error_manager.c **** }
 155              		.loc 1 291 1 view .LVU44
 156 0066 10BD     		pop	{r4, pc}
 157              	.LVL18:
 158              	.L11:
 159              		.cfi_def_cfa_offset 0
 160              		.cfi_restore 4
 161              		.cfi_restore 14
 162              	.LBB8:
 163              	.LBB6:
 278:Core/Src/error_manager.c ****             if (byte_value & (1 << bit)) {
 164              		.loc 1 278 22 view .LVU45
 165 0068 0023     		movs	r3, #0
 166              	.LVL19:
 278:Core/Src/error_manager.c ****             if (byte_value & (1 << bit)) {
 167              		.loc 1 278 22 view .LVU46
 168              	.LBE6:
 277:Core/Src/error_manager.c ****         for (uint8_t bit = 0; bit < 8; bit++) {
 169              		.loc 1 277 17 view .LVU47
 170 006a 1A46     		mov	r2, r3
 171              	.LVL20:
 172              	.LBB7:
 278:Core/Src/error_manager.c ****             if (byte_value & (1 << bit)) {
 173              		.loc 1 278 35 is_stmt 1 discriminator 1 view .LVU48
 174 006c 072B     		cmp	r3, #7
 175 006e 01D8     		bhi	.L20
 176              	.LBE7:
 177              	.LBE8:
 261:Core/Src/error_manager.c ****     if (byte_value == 0) {
 178              		.loc 1 261 1 is_stmt 0 view .LVU49
 179 0070 10B5     		push	{r4, lr}
 180              		.cfi_def_cfa_offset 8
 181              		.cfi_offset 4, -8
 182              		.cfi_offset 14, -4
 183 0072 E1E7     		b	.L9
 184              	.L20:
 185              		.cfi_def_cfa_offset 0
 186              		.cfi_restore 4
 187              		.cfi_restore 14
 290:Core/Src/error_manager.c **** }
 188              		.loc 1 290 12 view .LVU50
 189 0074 0020     		movs	r0, #0
 190              	.LVL21:
 191              		.loc 1 291 1 view .LVU51
 192 0076 7047     		bx	lr
 193              		.cfi_endproc
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s 			page 10


 194              	.LFE303:
 196              		.section	.text.HandleStateExit,"ax",%progbits
 197              		.align	1
 198              		.syntax unified
 199              		.thumb
 200              		.thumb_func
 202              	HandleStateExit:
 203              	.LVL22:
 204              	.LFB309:
 292:Core/Src/error_manager.c **** 
 293:Core/Src/error_manager.c **** /**
 294:Core/Src/error_manager.c ****   * @brief  Get complete error manager structure (for heartbeat)
 295:Core/Src/error_manager.c ****   * @param  mgr: Pointer to structure to fill
 296:Core/Src/error_manager.c ****   * @retval None
 297:Core/Src/error_manager.c ****   * @note   Each error flag byte independently rotates through its active bits
 298:Core/Src/error_manager.c ****   *         to avoid ambiguous combined values in CAN analysis tools.
 299:Core/Src/error_manager.c ****   */
 300:Core/Src/error_manager.c **** void ErrorMgr_GetStatus(Error_Manager_t *mgr)
 301:Core/Src/error_manager.c **** {
 302:Core/Src/error_manager.c ****     static uint8_t byte0_rotation = 0;
 303:Core/Src/error_manager.c ****     static uint8_t byte1_rotation = 0;
 304:Core/Src/error_manager.c ****     static uint8_t byte2_rotation = 0;
 305:Core/Src/error_manager.c ****     static uint8_t byte3_rotation = 0;
 306:Core/Src/error_manager.c ****     
 307:Core/Src/error_manager.c ****     if (mgr == NULL) {
 308:Core/Src/error_manager.c ****         return;
 309:Core/Src/error_manager.c ****     }
 310:Core/Src/error_manager.c **** 
 311:Core/Src/error_manager.c ****     if (osMutexAcquire(error_mutex, osWaitForever) == osOK) {
 312:Core/Src/error_manager.c ****         // Copy base data
 313:Core/Src/error_manager.c ****         memcpy(mgr, &error_mgr, sizeof(Error_Manager_t));
 314:Core/Src/error_manager.c ****         
 315:Core/Src/error_manager.c ****         // Override state to FAULT if any faults exist
 316:Core/Src/error_manager.c ****         if (error_mgr.fault_count > 0) {
 317:Core/Src/error_manager.c ****             mgr->state = BMS_STATE_FAULT;
 318:Core/Src/error_manager.c ****         }
 319:Core/Src/error_manager.c ****         
 320:Core/Src/error_manager.c ****         // Rotate each error byte independently
 321:Core/Src/error_manager.c ****         uint8_t *error_bytes = (uint8_t *)&mgr->error_flags;
 322:Core/Src/error_manager.c ****         error_bytes[0] = RotateByteBits((uint8_t)(error_mgr.error_flags & 0xFF), &byte0_rotation);
 323:Core/Src/error_manager.c ****         error_bytes[1] = RotateByteBits((uint8_t)((error_mgr.error_flags >> 8) & 0xFF), &byte1_rota
 324:Core/Src/error_manager.c ****         error_bytes[2] = RotateByteBits((uint8_t)((error_mgr.error_flags >> 16) & 0xFF), &byte2_rot
 325:Core/Src/error_manager.c ****         error_bytes[3] = RotateByteBits((uint8_t)((error_mgr.error_flags >> 24) & 0xFF), &byte3_rot
 326:Core/Src/error_manager.c ****         
 327:Core/Src/error_manager.c ****         osMutexRelease(error_mutex);
 328:Core/Src/error_manager.c ****     }
 329:Core/Src/error_manager.c **** }/**
 330:Core/Src/error_manager.c ****   * @brief  Update system uptime (call every second)
 331:Core/Src/error_manager.c ****   * @retval None
 332:Core/Src/error_manager.c ****   */
 333:Core/Src/error_manager.c **** void ErrorMgr_UpdateUptime(void)
 334:Core/Src/error_manager.c **** {
 335:Core/Src/error_manager.c ****     if (osMutexAcquire(error_mutex, osWaitForever) == osOK) {
 336:Core/Src/error_manager.c ****         error_mgr.uptime_seconds++;
 337:Core/Src/error_manager.c ****         osMutexRelease(error_mutex);
 338:Core/Src/error_manager.c ****     }
 339:Core/Src/error_manager.c **** }
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s 			page 11


 340:Core/Src/error_manager.c **** 
 341:Core/Src/error_manager.c **** /**
 342:Core/Src/error_manager.c ****   * @brief  Check if state transition is allowed
 343:Core/Src/error_manager.c ****   * @param  from_state: Current state
 344:Core/Src/error_manager.c ****   * @param  to_state: Desired state
 345:Core/Src/error_manager.c ****   * @retval true if transition is valid, false otherwise
 346:Core/Src/error_manager.c ****   */
 347:Core/Src/error_manager.c **** bool ErrorMgr_IsValidTransition(BMS_State_t from_state, BMS_State_t to_state)
 348:Core/Src/error_manager.c **** {
 349:Core/Src/error_manager.c ****     // Same state is always valid
 350:Core/Src/error_manager.c ****     if (from_state == to_state) {
 351:Core/Src/error_manager.c ****         return true;
 352:Core/Src/error_manager.c ****     }
 353:Core/Src/error_manager.c ****     
 354:Core/Src/error_manager.c ****     // Define valid state transitions
 355:Core/Src/error_manager.c ****     switch (from_state) {
 356:Core/Src/error_manager.c ****         case BMS_STATE_INIT:
 357:Core/Src/error_manager.c ****             // From INIT, can go to IDLE or FAULT
 358:Core/Src/error_manager.c ****             return (to_state == BMS_STATE_IDLE || to_state == BMS_STATE_FAULT);
 359:Core/Src/error_manager.c ****             
 360:Core/Src/error_manager.c ****         case BMS_STATE_IDLE:
 361:Core/Src/error_manager.c ****             // From IDLE, can go to any operational state
 362:Core/Src/error_manager.c ****             return (to_state == BMS_STATE_CHARGING || 
 363:Core/Src/error_manager.c ****                     to_state == BMS_STATE_DISCHARGING ||
 364:Core/Src/error_manager.c ****                     to_state == BMS_STATE_BALANCING ||
 365:Core/Src/error_manager.c ****                     to_state == BMS_STATE_FAULT ||
 366:Core/Src/error_manager.c ****                     to_state == BMS_STATE_SHUTDOWN);
 367:Core/Src/error_manager.c ****             
 368:Core/Src/error_manager.c ****         case BMS_STATE_CHARGING:
 369:Core/Src/error_manager.c ****         case BMS_STATE_DISCHARGING:
 370:Core/Src/error_manager.c ****         case BMS_STATE_BALANCING:
 371:Core/Src/error_manager.c ****             // From operational states, can go to IDLE, FAULT, or SHUTDOWN
 372:Core/Src/error_manager.c ****             return (to_state == BMS_STATE_IDLE ||
 373:Core/Src/error_manager.c ****                     to_state == BMS_STATE_FAULT ||
 374:Core/Src/error_manager.c ****                     to_state == BMS_STATE_SHUTDOWN);
 375:Core/Src/error_manager.c ****             
 376:Core/Src/error_manager.c ****         case BMS_STATE_FAULT:
 377:Core/Src/error_manager.c ****             // From FAULT, can only go to IDLE (after fault clear) or SHUTDOWN
 378:Core/Src/error_manager.c ****             return (to_state == BMS_STATE_IDLE || to_state == BMS_STATE_SHUTDOWN);
 379:Core/Src/error_manager.c ****             
 380:Core/Src/error_manager.c ****         case BMS_STATE_SHUTDOWN:
 381:Core/Src/error_manager.c ****             // From SHUTDOWN, can only re-initialize
 382:Core/Src/error_manager.c ****             return (to_state == BMS_STATE_INIT);
 383:Core/Src/error_manager.c ****             
 384:Core/Src/error_manager.c ****         default:
 385:Core/Src/error_manager.c ****             return false;
 386:Core/Src/error_manager.c ****     }
 387:Core/Src/error_manager.c **** }
 388:Core/Src/error_manager.c **** 
 389:Core/Src/error_manager.c **** /**
 390:Core/Src/error_manager.c ****   * @brief  Request a state transition
 391:Core/Src/error_manager.c ****   * @param  new_state: Desired BMS state
 392:Core/Src/error_manager.c ****   * @param  flags: Transition flags (STATE_TRANS_* defines)
 393:Core/Src/error_manager.c ****   * @retval true if transition allowed, false otherwise
 394:Core/Src/error_manager.c ****   */
 395:Core/Src/error_manager.c **** bool ErrorMgr_RequestStateTransition(BMS_State_t new_state, uint8_t flags)
 396:Core/Src/error_manager.c **** {
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s 			page 12


 397:Core/Src/error_manager.c ****     bool transition_ok = false;
 398:Core/Src/error_manager.c ****     
 399:Core/Src/error_manager.c ****     if (osMutexAcquire(error_mutex, osWaitForever) == osOK) {
 400:Core/Src/error_manager.c ****         // Check if transition is valid
 401:Core/Src/error_manager.c ****         if (!ErrorMgr_IsValidTransition(error_mgr.state, new_state)) {
 402:Core/Src/error_manager.c ****             osMutexRelease(error_mutex);
 403:Core/Src/error_manager.c ****             return false;
 404:Core/Src/error_manager.c ****         }
 405:Core/Src/error_manager.c ****         
 406:Core/Src/error_manager.c ****         // If transitioning from FAULT state, check fault status
 407:Core/Src/error_manager.c ****         if (error_mgr.state == BMS_STATE_FAULT && new_state != BMS_STATE_SHUTDOWN) {
 408:Core/Src/error_manager.c ****             if (error_mgr.error_flags != 0 && !(flags & STATE_TRANS_FORCE)) {
 409:Core/Src/error_manager.c ****                 // Cannot leave FAULT state while faults exist unless forced
 410:Core/Src/error_manager.c ****                 osMutexRelease(error_mutex);
 411:Core/Src/error_manager.c ****                 return false;
 412:Core/Src/error_manager.c ****             }
 413:Core/Src/error_manager.c ****             
 414:Core/Src/error_manager.c ****             if (flags & STATE_TRANS_CLEAR_FAULTS) {
 415:Core/Src/error_manager.c ****                 error_mgr.error_flags = 0;
 416:Core/Src/error_manager.c ****                 error_mgr.warning_flags = 0;
 417:Core/Src/error_manager.c ****                 error_mgr.fault_count = 0;
 418:Core/Src/error_manager.c ****             }
 419:Core/Src/error_manager.c ****         }
 420:Core/Src/error_manager.c ****         
 421:Core/Src/error_manager.c ****         // Perform the transition
 422:Core/Src/error_manager.c ****         HandleStateExit(error_mgr.state);
 423:Core/Src/error_manager.c ****         previous_state = error_mgr.state;
 424:Core/Src/error_manager.c ****         error_mgr.state = new_state;
 425:Core/Src/error_manager.c ****         HandleStateEntry(new_state);
 426:Core/Src/error_manager.c ****         
 427:Core/Src/error_manager.c ****         transition_ok = true;
 428:Core/Src/error_manager.c ****         osMutexRelease(error_mutex);
 429:Core/Src/error_manager.c ****     }
 430:Core/Src/error_manager.c ****     
 431:Core/Src/error_manager.c ****     return transition_ok;
 432:Core/Src/error_manager.c **** }
 433:Core/Src/error_manager.c **** 
 434:Core/Src/error_manager.c **** /**
 435:Core/Src/error_manager.c ****   * @brief  Handle state entry actions
 436:Core/Src/error_manager.c ****   * @param  new_state: State being entered
 437:Core/Src/error_manager.c ****   * @retval None
 438:Core/Src/error_manager.c ****   */
 439:Core/Src/error_manager.c **** static void HandleStateEntry(BMS_State_t new_state)
 440:Core/Src/error_manager.c **** {
 441:Core/Src/error_manager.c ****     // Perform state-specific entry actions
 442:Core/Src/error_manager.c ****     switch (new_state) {
 443:Core/Src/error_manager.c ****         case BMS_STATE_INIT:
 444:Core/Src/error_manager.c ****             // Reset all counters
 445:Core/Src/error_manager.c ****             break;
 446:Core/Src/error_manager.c ****             
 447:Core/Src/error_manager.c ****         case BMS_STATE_IDLE:
 448:Core/Src/error_manager.c ****             // Nothing specific
 449:Core/Src/error_manager.c ****             break;
 450:Core/Src/error_manager.c ****             
 451:Core/Src/error_manager.c ****         case BMS_STATE_FAULT:
 452:Core/Src/error_manager.c ****             // Record the state we came from
 453:Core/Src/error_manager.c ****             if (error_mgr.error_flags != 0) {
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s 			page 13


 454:Core/Src/error_manager.c ****                 fault_timestamp = osKernelGetTickCount();
 455:Core/Src/error_manager.c ****             }
 456:Core/Src/error_manager.c ****             break;
 457:Core/Src/error_manager.c ****             
 458:Core/Src/error_manager.c ****         case BMS_STATE_CHARGING:
 459:Core/Src/error_manager.c ****         case BMS_STATE_DISCHARGING:
 460:Core/Src/error_manager.c ****         case BMS_STATE_BALANCING:
 461:Core/Src/error_manager.c ****         case BMS_STATE_SHUTDOWN:
 462:Core/Src/error_manager.c ****         default:
 463:Core/Src/error_manager.c ****             // No special entry actions
 464:Core/Src/error_manager.c ****             break;
 465:Core/Src/error_manager.c ****     }
 466:Core/Src/error_manager.c **** }
 467:Core/Src/error_manager.c **** 
 468:Core/Src/error_manager.c **** /**
 469:Core/Src/error_manager.c ****   * @brief  Handle state exit actions
 470:Core/Src/error_manager.c ****   * @param  old_state: State being exited
 471:Core/Src/error_manager.c ****   * @retval None
 472:Core/Src/error_manager.c ****   */
 473:Core/Src/error_manager.c **** static void HandleStateExit(BMS_State_t old_state)
 474:Core/Src/error_manager.c **** {
 205              		.loc 1 474 1 is_stmt 1 view -0
 206              		.cfi_startproc
 207              		@ args = 0, pretend = 0, frame = 0
 208              		@ frame_needed = 0, uses_anonymous_args = 0
 209              		@ link register save eliminated.
 475:Core/Src/error_manager.c ****     // Perform state-specific exit actions
 476:Core/Src/error_manager.c ****     switch (old_state) {
 210              		.loc 1 476 5 view .LVU53
 211 0000 0528     		cmp	r0, #5
 212 0002 00D0     		beq	.L23
 213              	.L21:
 477:Core/Src/error_manager.c ****         case BMS_STATE_FAULT:
 478:Core/Src/error_manager.c ****             // Clear fault timestamp when leaving fault state
 479:Core/Src/error_manager.c ****             fault_timestamp = 0;
 480:Core/Src/error_manager.c ****             break;
 481:Core/Src/error_manager.c ****             
 482:Core/Src/error_manager.c ****         case BMS_STATE_INIT:
 483:Core/Src/error_manager.c ****         case BMS_STATE_IDLE:
 484:Core/Src/error_manager.c ****         case BMS_STATE_CHARGING:
 485:Core/Src/error_manager.c ****         case BMS_STATE_DISCHARGING:
 486:Core/Src/error_manager.c ****         case BMS_STATE_BALANCING:
 487:Core/Src/error_manager.c ****         case BMS_STATE_SHUTDOWN:
 488:Core/Src/error_manager.c ****         default:
 489:Core/Src/error_manager.c ****             // No special exit actions
 490:Core/Src/error_manager.c ****             break;
 491:Core/Src/error_manager.c ****     }
 492:Core/Src/error_manager.c **** }
 214              		.loc 1 492 1 is_stmt 0 view .LVU54
 215 0004 7047     		bx	lr
 216              	.L23:
 479:Core/Src/error_manager.c ****             break;
 217              		.loc 1 479 13 is_stmt 1 view .LVU55
 479:Core/Src/error_manager.c ****             break;
 218              		.loc 1 479 29 is_stmt 0 view .LVU56
 219 0006 024B     		ldr	r3, .L24
 220 0008 0022     		movs	r2, #0
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s 			page 14


 221 000a 1A60     		str	r2, [r3]
 480:Core/Src/error_manager.c ****             
 222              		.loc 1 480 13 is_stmt 1 view .LVU57
 223              		.loc 1 492 1 is_stmt 0 view .LVU58
 224 000c FAE7     		b	.L21
 225              	.L25:
 226 000e 00BF     		.align	2
 227              	.L24:
 228 0010 00000000 		.word	fault_timestamp
 229              		.cfi_endproc
 230              	.LFE309:
 232              		.section	.text.HandleStateEntry,"ax",%progbits
 233              		.align	1
 234              		.syntax unified
 235              		.thumb
 236              		.thumb_func
 238              	HandleStateEntry:
 239              	.LVL23:
 240              	.LFB308:
 440:Core/Src/error_manager.c ****     // Perform state-specific entry actions
 241              		.loc 1 440 1 is_stmt 1 view -0
 242              		.cfi_startproc
 243              		@ args = 0, pretend = 0, frame = 0
 244              		@ frame_needed = 0, uses_anonymous_args = 0
 442:Core/Src/error_manager.c ****         case BMS_STATE_INIT:
 245              		.loc 1 442 5 view .LVU60
 246 0000 0528     		cmp	r0, #5
 247 0002 00D0     		beq	.L32
 248 0004 7047     		bx	lr
 249              	.L32:
 440:Core/Src/error_manager.c ****     // Perform state-specific entry actions
 250              		.loc 1 440 1 is_stmt 0 view .LVU61
 251 0006 08B5     		push	{r3, lr}
 252              		.cfi_def_cfa_offset 8
 253              		.cfi_offset 3, -8
 254              		.cfi_offset 14, -4
 453:Core/Src/error_manager.c ****                 fault_timestamp = osKernelGetTickCount();
 255              		.loc 1 453 13 is_stmt 1 view .LVU62
 453:Core/Src/error_manager.c ****                 fault_timestamp = osKernelGetTickCount();
 256              		.loc 1 453 26 is_stmt 0 view .LVU63
 257 0008 044B     		ldr	r3, .L34
 258 000a 1B68     		ldr	r3, [r3]
 453:Core/Src/error_manager.c ****                 fault_timestamp = osKernelGetTickCount();
 259              		.loc 1 453 16 view .LVU64
 260 000c 03B9     		cbnz	r3, .L33
 261              	.LVL24:
 262              	.L26:
 466:Core/Src/error_manager.c **** 
 263              		.loc 1 466 1 view .LVU65
 264 000e 08BD     		pop	{r3, pc}
 265              	.LVL25:
 266              	.L33:
 454:Core/Src/error_manager.c ****             }
 267              		.loc 1 454 17 is_stmt 1 view .LVU66
 454:Core/Src/error_manager.c ****             }
 268              		.loc 1 454 35 is_stmt 0 view .LVU67
 269 0010 FFF7FEFF 		bl	osKernelGetTickCount
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s 			page 15


 270              	.LVL26:
 454:Core/Src/error_manager.c ****             }
 271              		.loc 1 454 33 discriminator 1 view .LVU68
 272 0014 024B     		ldr	r3, .L34+4
 273 0016 1860     		str	r0, [r3]
 466:Core/Src/error_manager.c **** 
 274              		.loc 1 466 1 view .LVU69
 275 0018 F9E7     		b	.L26
 276              	.L35:
 277 001a 00BF     		.align	2
 278              	.L34:
 279 001c 00000000 		.word	error_mgr
 280 0020 00000000 		.word	fault_timestamp
 281              		.cfi_endproc
 282              	.LFE308:
 284              		.section	.text.CheckFaultConditions,"ax",%progbits
 285              		.align	1
 286              		.syntax unified
 287              		.thumb
 288              		.thumb_func
 290              	CheckFaultConditions:
 291              	.LFB310:
 493:Core/Src/error_manager.c **** 
 494:Core/Src/error_manager.c **** /**
 495:Core/Src/error_manager.c ****   * @brief  Check for fault conditions and manage automatic state transitions
 496:Core/Src/error_manager.c ****   * @retval None
 497:Core/Src/error_manager.c ****   */
 498:Core/Src/error_manager.c **** static void CheckFaultConditions(void)
 499:Core/Src/error_manager.c **** {
 292              		.loc 1 499 1 is_stmt 1 view -0
 293              		.cfi_startproc
 294              		@ args = 0, pretend = 0, frame = 0
 295              		@ frame_needed = 0, uses_anonymous_args = 0
 296 0000 10B5     		push	{r4, lr}
 297              		.cfi_def_cfa_offset 8
 298              		.cfi_offset 4, -8
 299              		.cfi_offset 14, -4
 500:Core/Src/error_manager.c ****     BMS_State_t current_state = error_mgr.state;
 300              		.loc 1 500 5 view .LVU71
 301              		.loc 1 500 17 is_stmt 0 view .LVU72
 302 0002 164B     		ldr	r3, .L41
 303 0004 1C7A     		ldrb	r4, [r3, #8]	@ zero_extendqisi2
 304              	.LVL27:
 501:Core/Src/error_manager.c ****     uint32_t current_errors = error_mgr.error_flags;
 305              		.loc 1 501 5 is_stmt 1 view .LVU73
 306              		.loc 1 501 14 is_stmt 0 view .LVU74
 307 0006 1B68     		ldr	r3, [r3]
 308              	.LVL28:
 502:Core/Src/error_manager.c ****     
 503:Core/Src/error_manager.c ****     // Check for critical faults
 504:Core/Src/error_manager.c ****     if (current_errors & CRITICAL_FAULTS) {
 309              		.loc 1 504 5 is_stmt 1 view .LVU75
 310              		.loc 1 504 8 is_stmt 0 view .LVU76
 311 0008 154A     		ldr	r2, .L41+4
 312 000a 1342     		tst	r3, r2
 313 000c 0ED0     		beq	.L37
 505:Core/Src/error_manager.c ****         // Critical faults force FAULT state
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s 			page 16


 506:Core/Src/error_manager.c ****         if (current_state != BMS_STATE_FAULT && current_state != BMS_STATE_SHUTDOWN) {
 314              		.loc 1 506 9 is_stmt 1 view .LVU77
 315              		.loc 1 506 46 is_stmt 0 view .LVU78
 316 000e 631F     		subs	r3, r4, #5
 317              	.LVL29:
 318              		.loc 1 506 46 view .LVU79
 319 0010 DBB2     		uxtb	r3, r3
 320              		.loc 1 506 12 view .LVU80
 321 0012 012B     		cmp	r3, #1
 322 0014 0CD9     		bls	.L36
 507:Core/Src/error_manager.c ****             HandleStateExit(current_state);
 323              		.loc 1 507 13 is_stmt 1 view .LVU81
 324 0016 2046     		mov	r0, r4
 325 0018 FFF7FEFF 		bl	HandleStateExit
 326              	.LVL30:
 508:Core/Src/error_manager.c ****             previous_state = current_state;
 327              		.loc 1 508 13 view .LVU82
 328              		.loc 1 508 28 is_stmt 0 view .LVU83
 329 001c 114B     		ldr	r3, .L41+8
 330 001e 1C70     		strb	r4, [r3]
 509:Core/Src/error_manager.c ****             error_mgr.state = BMS_STATE_FAULT;
 331              		.loc 1 509 13 is_stmt 1 view .LVU84
 332              		.loc 1 509 29 is_stmt 0 view .LVU85
 333 0020 0520     		movs	r0, #5
 334 0022 0E4B     		ldr	r3, .L41
 335 0024 1872     		strb	r0, [r3, #8]
 510:Core/Src/error_manager.c ****             HandleStateEntry(BMS_STATE_FAULT);
 336              		.loc 1 510 13 is_stmt 1 view .LVU86
 337 0026 FFF7FEFF 		bl	HandleStateEntry
 338              	.LVL31:
 339 002a 01E0     		b	.L36
 340              	.LVL32:
 341              	.L37:
 511:Core/Src/error_manager.c ****         }
 512:Core/Src/error_manager.c ****     }
 513:Core/Src/error_manager.c ****     // Check for fault recovery
 514:Core/Src/error_manager.c ****     else if (current_state == BMS_STATE_FAULT && current_errors == 0) {
 342              		.loc 1 514 10 view .LVU87
 343              		.loc 1 514 13 is_stmt 0 view .LVU88
 344 002c 052C     		cmp	r4, #5
 345 002e 00D0     		beq	.L40
 346              	.LVL33:
 347              	.L36:
 515:Core/Src/error_manager.c ****         // All faults cleared - check if recovery delay has passed
 516:Core/Src/error_manager.c ****         uint32_t current_time = osKernelGetTickCount();
 517:Core/Src/error_manager.c ****         if ((current_time - fault_timestamp) >= FAULT_RECOVERY_DELAY_MS) {
 518:Core/Src/error_manager.c ****             // Attempt automatic recovery to IDLE
 519:Core/Src/error_manager.c ****             HandleStateExit(BMS_STATE_FAULT);
 520:Core/Src/error_manager.c ****             error_mgr.state = BMS_STATE_IDLE;
 521:Core/Src/error_manager.c ****             HandleStateEntry(BMS_STATE_IDLE);
 522:Core/Src/error_manager.c ****         }
 523:Core/Src/error_manager.c ****     }
 524:Core/Src/error_manager.c **** }
 348              		.loc 1 524 1 view .LVU89
 349 0030 10BD     		pop	{r4, pc}
 350              	.LVL34:
 351              	.L40:
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s 			page 17


 514:Core/Src/error_manager.c ****         // All faults cleared - check if recovery delay has passed
 352              		.loc 1 514 47 discriminator 1 view .LVU90
 353 0032 002B     		cmp	r3, #0
 354 0034 FCD1     		bne	.L36
 355              	.LBB9:
 516:Core/Src/error_manager.c ****         if ((current_time - fault_timestamp) >= FAULT_RECOVERY_DELAY_MS) {
 356              		.loc 1 516 9 is_stmt 1 view .LVU91
 516:Core/Src/error_manager.c ****         if ((current_time - fault_timestamp) >= FAULT_RECOVERY_DELAY_MS) {
 357              		.loc 1 516 33 is_stmt 0 view .LVU92
 358 0036 FFF7FEFF 		bl	osKernelGetTickCount
 359              	.LVL35:
 517:Core/Src/error_manager.c ****             // Attempt automatic recovery to IDLE
 360              		.loc 1 517 9 is_stmt 1 view .LVU93
 517:Core/Src/error_manager.c ****             // Attempt automatic recovery to IDLE
 361              		.loc 1 517 27 is_stmt 0 view .LVU94
 362 003a 0B4B     		ldr	r3, .L41+12
 363 003c 1B68     		ldr	r3, [r3]
 364 003e C01A     		subs	r0, r0, r3
 365              	.LVL36:
 517:Core/Src/error_manager.c ****             // Attempt automatic recovery to IDLE
 366              		.loc 1 517 12 view .LVU95
 367 0040 41F28733 		movw	r3, #4999
 368 0044 9842     		cmp	r0, r3
 369 0046 F3D9     		bls	.L36
 519:Core/Src/error_manager.c ****             error_mgr.state = BMS_STATE_IDLE;
 370              		.loc 1 519 13 is_stmt 1 view .LVU96
 371 0048 0520     		movs	r0, #5
 372 004a FFF7FEFF 		bl	HandleStateExit
 373              	.LVL37:
 520:Core/Src/error_manager.c ****             HandleStateEntry(BMS_STATE_IDLE);
 374              		.loc 1 520 13 view .LVU97
 520:Core/Src/error_manager.c ****             HandleStateEntry(BMS_STATE_IDLE);
 375              		.loc 1 520 29 is_stmt 0 view .LVU98
 376 004e 0120     		movs	r0, #1
 377 0050 024B     		ldr	r3, .L41
 378 0052 1872     		strb	r0, [r3, #8]
 521:Core/Src/error_manager.c ****         }
 379              		.loc 1 521 13 is_stmt 1 view .LVU99
 380 0054 FFF7FEFF 		bl	HandleStateEntry
 381              	.LVL38:
 382              	.LBE9:
 383              		.loc 1 524 1 is_stmt 0 view .LVU100
 384 0058 EAE7     		b	.L36
 385              	.L42:
 386 005a 00BF     		.align	2
 387              	.L41:
 388 005c 00000000 		.word	error_mgr
 389 0060 01030B00 		.word	721665
 390 0064 00000000 		.word	previous_state
 391 0068 00000000 		.word	fault_timestamp
 392              		.cfi_endproc
 393              	.LFE310:
 395              		.section	.text.ProcessStateMachine,"ax",%progbits
 396              		.align	1
 397              		.syntax unified
 398              		.thumb
 399              		.thumb_func
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s 			page 18


 401              	ProcessStateMachine:
 402              	.LFB311:
 525:Core/Src/error_manager.c **** 
 526:Core/Src/error_manager.c **** /**
 527:Core/Src/error_manager.c ****   * @brief  Process the state machine logic
 528:Core/Src/error_manager.c ****   * @retval None
 529:Core/Src/error_manager.c ****   */
 530:Core/Src/error_manager.c **** static void ProcessStateMachine(void)
 531:Core/Src/error_manager.c **** {
 403              		.loc 1 531 1 is_stmt 1 view -0
 404              		.cfi_startproc
 405              		@ args = 0, pretend = 0, frame = 0
 406              		@ frame_needed = 0, uses_anonymous_args = 0
 407 0000 08B5     		push	{r3, lr}
 408              		.cfi_def_cfa_offset 8
 409              		.cfi_offset 3, -8
 410              		.cfi_offset 14, -4
 532:Core/Src/error_manager.c ****     if (osMutexAcquire(error_mutex, osWaitForever) == osOK) {
 411              		.loc 1 532 5 view .LVU102
 412              		.loc 1 532 9 is_stmt 0 view .LVU103
 413 0002 4FF0FF31 		mov	r1, #-1
 414 0006 064B     		ldr	r3, .L47
 415 0008 1868     		ldr	r0, [r3]
 416 000a FFF7FEFF 		bl	osMutexAcquire
 417              	.LVL39:
 418              		.loc 1 532 8 discriminator 1 view .LVU104
 419 000e 00B1     		cbz	r0, .L46
 420              	.L43:
 533:Core/Src/error_manager.c ****         CheckFaultConditions();
 534:Core/Src/error_manager.c ****         osMutexRelease(error_mutex);
 535:Core/Src/error_manager.c ****     }
 536:Core/Src/error_manager.c **** }
 421              		.loc 1 536 1 view .LVU105
 422 0010 08BD     		pop	{r3, pc}
 423              	.L46:
 533:Core/Src/error_manager.c ****         CheckFaultConditions();
 424              		.loc 1 533 9 is_stmt 1 view .LVU106
 425 0012 FFF7FEFF 		bl	CheckFaultConditions
 426              	.LVL40:
 534:Core/Src/error_manager.c ****     }
 427              		.loc 1 534 9 view .LVU107
 428 0016 024B     		ldr	r3, .L47
 429 0018 1868     		ldr	r0, [r3]
 430 001a FFF7FEFF 		bl	osMutexRelease
 431              	.LVL41:
 432              		.loc 1 536 1 is_stmt 0 view .LVU108
 433 001e F7E7     		b	.L43
 434              	.L48:
 435              		.align	2
 436              	.L47:
 437 0020 00000000 		.word	error_mutex
 438              		.cfi_endproc
 439              	.LFE311:
 441              		.section	.text.ErrorMgr_Init,"ax",%progbits
 442              		.align	1
 443              		.global	ErrorMgr_Init
 444              		.syntax unified
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s 			page 19


 445              		.thumb
 446              		.thumb_func
 448              	ErrorMgr_Init:
 449              	.LFB292:
  63:Core/Src/error_manager.c ****     // Initialize error manager structure
 450              		.loc 1 63 1 is_stmt 1 view -0
 451              		.cfi_startproc
 452              		@ args = 0, pretend = 0, frame = 0
 453              		@ frame_needed = 0, uses_anonymous_args = 0
 454 0000 10B5     		push	{r4, lr}
 455              		.cfi_def_cfa_offset 8
 456              		.cfi_offset 4, -8
 457              		.cfi_offset 14, -4
  65:Core/Src/error_manager.c ****     
 458              		.loc 1 65 5 view .LVU110
 459 0002 0A4C     		ldr	r4, .L53
 460 0004 0023     		movs	r3, #0
 461 0006 2360     		str	r3, [r4]
 462 0008 6360     		str	r3, [r4, #4]
 463 000a A360     		str	r3, [r4, #8]
 464 000c E360     		str	r3, [r4, #12]
 465 000e 2361     		str	r3, [r4, #16]
  68:Core/Src/error_manager.c ****     error_mgr.uptime_seconds = 0;
 466              		.loc 1 68 5 view .LVU111
  69:Core/Src/error_manager.c ****     error_mgr.fault_count = 0;
 467              		.loc 1 69 5 view .LVU112
  70:Core/Src/error_manager.c ****     error_mgr.last_heartbeat = osKernelGetTickCount();
 468              		.loc 1 70 5 view .LVU113
  71:Core/Src/error_manager.c ****     
 469              		.loc 1 71 5 view .LVU114
  71:Core/Src/error_manager.c ****     
 470              		.loc 1 71 32 is_stmt 0 view .LVU115
 471 0010 FFF7FEFF 		bl	osKernelGetTickCount
 472              	.LVL42:
  71:Core/Src/error_manager.c ****     
 473              		.loc 1 71 30 discriminator 1 view .LVU116
 474 0014 2061     		str	r0, [r4, #16]
  74:Core/Src/error_manager.c ****     if (error_mutex == NULL) {
 475              		.loc 1 74 5 is_stmt 1 view .LVU117
  74:Core/Src/error_manager.c ****     if (error_mutex == NULL) {
 476              		.loc 1 74 19 is_stmt 0 view .LVU118
 477 0016 0648     		ldr	r0, .L53+4
 478 0018 FFF7FEFF 		bl	osMutexNew
 479              	.LVL43:
  74:Core/Src/error_manager.c ****     if (error_mutex == NULL) {
 480              		.loc 1 74 17 discriminator 1 view .LVU119
 481 001c 054B     		ldr	r3, .L53+8
 482 001e 1860     		str	r0, [r3]
  75:Core/Src/error_manager.c ****         return HAL_ERROR;
 483              		.loc 1 75 5 is_stmt 1 view .LVU120
  75:Core/Src/error_manager.c ****         return HAL_ERROR;
 484              		.loc 1 75 8 is_stmt 0 view .LVU121
 485 0020 08B1     		cbz	r0, .L51
  79:Core/Src/error_manager.c **** }
 486              		.loc 1 79 12 view .LVU122
 487 0022 0020     		movs	r0, #0
 488              	.L50:
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s 			page 20


  80:Core/Src/error_manager.c **** 
 489              		.loc 1 80 1 view .LVU123
 490 0024 10BD     		pop	{r4, pc}
 491              	.L51:
  76:Core/Src/error_manager.c ****     }
 492              		.loc 1 76 16 view .LVU124
 493 0026 0120     		movs	r0, #1
 494 0028 FCE7     		b	.L50
 495              	.L54:
 496 002a 00BF     		.align	2
 497              	.L53:
 498 002c 00000000 		.word	error_mgr
 499 0030 00000000 		.word	error_mutex_attributes
 500 0034 00000000 		.word	error_mutex
 501              		.cfi_endproc
 502              	.LFE292:
 504              		.section	.text.ErrorMgr_SetError,"ax",%progbits
 505              		.align	1
 506              		.global	ErrorMgr_SetError
 507              		.syntax unified
 508              		.thumb
 509              		.thumb_func
 511              	ErrorMgr_SetError:
 512              	.LVL44:
 513              	.LFB293:
  88:Core/Src/error_manager.c ****     if (osMutexAcquire(error_mutex, osWaitForever) == osOK) {
 514              		.loc 1 88 1 is_stmt 1 view -0
 515              		.cfi_startproc
 516              		@ args = 0, pretend = 0, frame = 0
 517              		@ frame_needed = 0, uses_anonymous_args = 0
  88:Core/Src/error_manager.c ****     if (osMutexAcquire(error_mutex, osWaitForever) == osOK) {
 518              		.loc 1 88 1 is_stmt 0 view .LVU126
 519 0000 10B5     		push	{r4, lr}
 520              		.cfi_def_cfa_offset 8
 521              		.cfi_offset 4, -8
 522              		.cfi_offset 14, -4
 523 0002 0446     		mov	r4, r0
  89:Core/Src/error_manager.c ****         // Check if this is a new error
 524              		.loc 1 89 5 is_stmt 1 view .LVU127
  89:Core/Src/error_manager.c ****         // Check if this is a new error
 525              		.loc 1 89 9 is_stmt 0 view .LVU128
 526 0004 4FF0FF31 		mov	r1, #-1
 527 0008 0D4B     		ldr	r3, .L60
 528 000a 1868     		ldr	r0, [r3]
 529              	.LVL45:
  89:Core/Src/error_manager.c ****         // Check if this is a new error
 530              		.loc 1 89 9 view .LVU129
 531 000c FFF7FEFF 		bl	osMutexAcquire
 532              	.LVL46:
  89:Core/Src/error_manager.c ****         // Check if this is a new error
 533              		.loc 1 89 8 discriminator 1 view .LVU130
 534 0010 80B9     		cbnz	r0, .L55
  91:Core/Src/error_manager.c ****             error_mgr.fault_count++;
 535              		.loc 1 91 9 is_stmt 1 view .LVU131
  91:Core/Src/error_manager.c ****             error_mgr.fault_count++;
 536              		.loc 1 91 24 is_stmt 0 view .LVU132
 537 0012 0C4B     		ldr	r3, .L60+4
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s 			page 21


 538 0014 1B68     		ldr	r3, [r3]
  91:Core/Src/error_manager.c ****             error_mgr.fault_count++;
 539              		.loc 1 91 12 view .LVU133
 540 0016 2342     		tst	r3, r4
 541 0018 04D1     		bne	.L57
  92:Core/Src/error_manager.c ****             
 542              		.loc 1 92 13 is_stmt 1 view .LVU134
  92:Core/Src/error_manager.c ****             
 543              		.loc 1 92 22 is_stmt 0 view .LVU135
 544 001a 0A49     		ldr	r1, .L60+4
 545 001c 4A7A     		ldrb	r2, [r1, #9]	@ zero_extendqisi2
  92:Core/Src/error_manager.c ****             
 546              		.loc 1 92 34 view .LVU136
 547 001e 0132     		adds	r2, r2, #1
 548 0020 4A72     		strb	r2, [r1, #9]
  95:Core/Src/error_manager.c ****                 fault_timestamp = osKernelGetTickCount();
 549              		.loc 1 95 13 is_stmt 1 view .LVU137
  95:Core/Src/error_manager.c ****                 fault_timestamp = osKernelGetTickCount();
 550              		.loc 1 95 16 is_stmt 0 view .LVU138
 551 0022 43B1     		cbz	r3, .L59
 552              	.L57:
 100:Core/Src/error_manager.c ****         
 553              		.loc 1 100 9 is_stmt 1 view .LVU139
 100:Core/Src/error_manager.c ****         
 554              		.loc 1 100 18 is_stmt 0 view .LVU140
 555 0024 074A     		ldr	r2, .L60+4
 556 0026 1368     		ldr	r3, [r2]
 100:Core/Src/error_manager.c ****         
 557              		.loc 1 100 31 view .LVU141
 558 0028 2343     		orrs	r3, r3, r4
 559 002a 1360     		str	r3, [r2]
 105:Core/Src/error_manager.c ****     }
 560              		.loc 1 105 9 is_stmt 1 view .LVU142
 561 002c 044B     		ldr	r3, .L60
 562 002e 1868     		ldr	r0, [r3]
 563 0030 FFF7FEFF 		bl	osMutexRelease
 564              	.LVL47:
 565              	.L55:
 107:Core/Src/error_manager.c **** 
 566              		.loc 1 107 1 is_stmt 0 view .LVU143
 567 0034 10BD     		pop	{r4, pc}
 568              	.LVL48:
 569              	.L59:
  96:Core/Src/error_manager.c ****             }
 570              		.loc 1 96 17 is_stmt 1 view .LVU144
  96:Core/Src/error_manager.c ****             }
 571              		.loc 1 96 35 is_stmt 0 view .LVU145
 572 0036 FFF7FEFF 		bl	osKernelGetTickCount
 573              	.LVL49:
  96:Core/Src/error_manager.c ****             }
 574              		.loc 1 96 33 discriminator 1 view .LVU146
 575 003a 034B     		ldr	r3, .L60+8
 576 003c 1860     		str	r0, [r3]
 577 003e F1E7     		b	.L57
 578              	.L61:
 579              		.align	2
 580              	.L60:
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s 			page 22


 581 0040 00000000 		.word	error_mutex
 582 0044 00000000 		.word	error_mgr
 583 0048 00000000 		.word	fault_timestamp
 584              		.cfi_endproc
 585              	.LFE293:
 587              		.section	.text.ErrorMgr_ClearError,"ax",%progbits
 588              		.align	1
 589              		.global	ErrorMgr_ClearError
 590              		.syntax unified
 591              		.thumb
 592              		.thumb_func
 594              	ErrorMgr_ClearError:
 595              	.LVL50:
 596              	.LFB294:
 115:Core/Src/error_manager.c ****     if (osMutexAcquire(error_mutex, osWaitForever) == osOK) {
 597              		.loc 1 115 1 is_stmt 1 view -0
 598              		.cfi_startproc
 599              		@ args = 0, pretend = 0, frame = 0
 600              		@ frame_needed = 0, uses_anonymous_args = 0
 115:Core/Src/error_manager.c ****     if (osMutexAcquire(error_mutex, osWaitForever) == osOK) {
 601              		.loc 1 115 1 is_stmt 0 view .LVU148
 602 0000 10B5     		push	{r4, lr}
 603              		.cfi_def_cfa_offset 8
 604              		.cfi_offset 4, -8
 605              		.cfi_offset 14, -4
 606 0002 0446     		mov	r4, r0
 116:Core/Src/error_manager.c ****         // Check if this error was previously set
 607              		.loc 1 116 5 is_stmt 1 view .LVU149
 116:Core/Src/error_manager.c ****         // Check if this error was previously set
 608              		.loc 1 116 9 is_stmt 0 view .LVU150
 609 0004 4FF0FF31 		mov	r1, #-1
 610 0008 164B     		ldr	r3, .L72
 611 000a 1868     		ldr	r0, [r3]
 612              	.LVL51:
 116:Core/Src/error_manager.c ****         // Check if this error was previously set
 613              		.loc 1 116 9 view .LVU151
 614 000c FFF7FEFF 		bl	osMutexAcquire
 615              	.LVL52:
 116:Core/Src/error_manager.c ****         // Check if this error was previously set
 616              		.loc 1 116 8 discriminator 1 view .LVU152
 617 0010 60B9     		cbnz	r0, .L62
 118:Core/Src/error_manager.c ****             // Count how many bits are being cleared
 618              		.loc 1 118 9 is_stmt 1 view .LVU153
 118:Core/Src/error_manager.c ****             // Count how many bits are being cleared
 619              		.loc 1 118 22 is_stmt 0 view .LVU154
 620 0012 154B     		ldr	r3, .L72+4
 621 0014 1868     		ldr	r0, [r3]
 118:Core/Src/error_manager.c ****             // Count how many bits are being cleared
 622              		.loc 1 118 12 view .LVU155
 623 0016 10EA040C 		ands	ip, r0, r4
 624 001a 14D1     		bne	.L69
 625              	.L65:
 136:Core/Src/error_manager.c ****         
 626              		.loc 1 136 9 is_stmt 1 view .LVU156
 136:Core/Src/error_manager.c ****         
 627              		.loc 1 136 31 is_stmt 0 view .LVU157
 628 001c 20EA0400 		bic	r0, r0, r4
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s 			page 23


 629 0020 114B     		ldr	r3, .L72+4
 630 0022 1860     		str	r0, [r3]
 140:Core/Src/error_manager.c ****     }
 631              		.loc 1 140 9 is_stmt 1 view .LVU158
 632 0024 0F4B     		ldr	r3, .L72
 633 0026 1868     		ldr	r0, [r3]
 634 0028 FFF7FEFF 		bl	osMutexRelease
 635              	.LVL53:
 636              	.L62:
 142:Core/Src/error_manager.c **** 
 637              		.loc 1 142 1 is_stmt 0 view .LVU159
 638 002c 10BD     		pop	{r4, pc}
 639              	.LVL54:
 640              	.L66:
 641              	.LBB10:
 642              	.LBB11:
 122:Core/Src/error_manager.c ****                 if (cleared_bits & (1 << bit)) {
 643              		.loc 1 122 48 is_stmt 1 discriminator 2 view .LVU160
 644 002e 0133     		adds	r3, r3, #1
 645              	.LVL55:
 122:Core/Src/error_manager.c ****                 if (cleared_bits & (1 << bit)) {
 646              		.loc 1 122 48 is_stmt 0 discriminator 2 view .LVU161
 647 0030 DBB2     		uxtb	r3, r3
 648              	.LVL56:
 649              	.L64:
 122:Core/Src/error_manager.c ****                 if (cleared_bits & (1 << bit)) {
 650              		.loc 1 122 39 is_stmt 1 discriminator 1 view .LVU162
 651 0032 1F2B     		cmp	r3, #31
 652 0034 0AD8     		bhi	.L71
 123:Core/Src/error_manager.c ****                     cleared_count++;
 653              		.loc 1 123 17 view .LVU163
 123:Core/Src/error_manager.c ****                     cleared_count++;
 654              		.loc 1 123 39 is_stmt 0 view .LVU164
 655 0036 0122     		movs	r2, #1
 656 0038 9A40     		lsls	r2, r2, r3
 123:Core/Src/error_manager.c ****                     cleared_count++;
 657              		.loc 1 123 20 view .LVU165
 658 003a 1CEA020F 		tst	ip, r2
 659 003e F6D0     		beq	.L66
 124:Core/Src/error_manager.c ****                 }
 660              		.loc 1 124 21 is_stmt 1 view .LVU166
 124:Core/Src/error_manager.c ****                 }
 661              		.loc 1 124 34 is_stmt 0 view .LVU167
 662 0040 0131     		adds	r1, r1, #1
 663              	.LVL57:
 124:Core/Src/error_manager.c ****                 }
 664              		.loc 1 124 34 view .LVU168
 665 0042 C9B2     		uxtb	r1, r1
 666              	.LVL58:
 124:Core/Src/error_manager.c ****                 }
 667              		.loc 1 124 34 view .LVU169
 668 0044 F3E7     		b	.L66
 669              	.LVL59:
 670              	.L69:
 122:Core/Src/error_manager.c ****                 if (cleared_bits & (1 << bit)) {
 671              		.loc 1 122 26 view .LVU170
 672 0046 0023     		movs	r3, #0
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s 			page 24


 673              	.LBE11:
 121:Core/Src/error_manager.c ****             for (uint8_t bit = 0; bit < 32; bit++) {
 674              		.loc 1 121 21 view .LVU171
 675 0048 1946     		mov	r1, r3
 676 004a F2E7     		b	.L64
 677              	.LVL60:
 678              	.L71:
 129:Core/Src/error_manager.c ****                 error_mgr.fault_count -= cleared_count;
 679              		.loc 1 129 13 is_stmt 1 view .LVU172
 129:Core/Src/error_manager.c ****                 error_mgr.fault_count -= cleared_count;
 680              		.loc 1 129 26 is_stmt 0 view .LVU173
 681 004c 064B     		ldr	r3, .L72+4
 682              	.LVL61:
 129:Core/Src/error_manager.c ****                 error_mgr.fault_count -= cleared_count;
 683              		.loc 1 129 26 view .LVU174
 684 004e 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 129:Core/Src/error_manager.c ****                 error_mgr.fault_count -= cleared_count;
 685              		.loc 1 129 16 view .LVU175
 686 0050 8B42     		cmp	r3, r1
 687 0052 03D3     		bcc	.L68
 130:Core/Src/error_manager.c ****             } else {
 688              		.loc 1 130 17 is_stmt 1 view .LVU176
 130:Core/Src/error_manager.c ****             } else {
 689              		.loc 1 130 39 is_stmt 0 view .LVU177
 690 0054 5B1A     		subs	r3, r3, r1
 691 0056 044A     		ldr	r2, .L72+4
 692 0058 5372     		strb	r3, [r2, #9]
 693 005a DFE7     		b	.L65
 694              	.L68:
 132:Core/Src/error_manager.c ****             }
 695              		.loc 1 132 17 is_stmt 1 view .LVU178
 132:Core/Src/error_manager.c ****             }
 696              		.loc 1 132 39 is_stmt 0 view .LVU179
 697 005c 024B     		ldr	r3, .L72+4
 698 005e 0022     		movs	r2, #0
 699 0060 5A72     		strb	r2, [r3, #9]
 700 0062 DBE7     		b	.L65
 701              	.L73:
 702              		.align	2
 703              	.L72:
 704 0064 00000000 		.word	error_mutex
 705 0068 00000000 		.word	error_mgr
 706              	.LBE10:
 707              		.cfi_endproc
 708              	.LFE294:
 710              		.section	.text.ErrorMgr_SetWarning,"ax",%progbits
 711              		.align	1
 712              		.global	ErrorMgr_SetWarning
 713              		.syntax unified
 714              		.thumb
 715              		.thumb_func
 717              	ErrorMgr_SetWarning:
 718              	.LVL62:
 719              	.LFB295:
 150:Core/Src/error_manager.c ****     if (osMutexAcquire(error_mutex, osWaitForever) == osOK) {
 720              		.loc 1 150 1 is_stmt 1 view -0
 721              		.cfi_startproc
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s 			page 25


 722              		@ args = 0, pretend = 0, frame = 0
 723              		@ frame_needed = 0, uses_anonymous_args = 0
 150:Core/Src/error_manager.c ****     if (osMutexAcquire(error_mutex, osWaitForever) == osOK) {
 724              		.loc 1 150 1 is_stmt 0 view .LVU181
 725 0000 10B5     		push	{r4, lr}
 726              		.cfi_def_cfa_offset 8
 727              		.cfi_offset 4, -8
 728              		.cfi_offset 14, -4
 729 0002 0446     		mov	r4, r0
 151:Core/Src/error_manager.c ****         error_mgr.warning_flags |= warning_flag;
 730              		.loc 1 151 5 is_stmt 1 view .LVU182
 151:Core/Src/error_manager.c ****         error_mgr.warning_flags |= warning_flag;
 731              		.loc 1 151 9 is_stmt 0 view .LVU183
 732 0004 4FF0FF31 		mov	r1, #-1
 733 0008 074B     		ldr	r3, .L78
 734 000a 1868     		ldr	r0, [r3]
 735              	.LVL63:
 151:Core/Src/error_manager.c ****         error_mgr.warning_flags |= warning_flag;
 736              		.loc 1 151 9 view .LVU184
 737 000c FFF7FEFF 		bl	osMutexAcquire
 738              	.LVL64:
 151:Core/Src/error_manager.c ****         error_mgr.warning_flags |= warning_flag;
 739              		.loc 1 151 8 discriminator 1 view .LVU185
 740 0010 00B1     		cbz	r0, .L77
 741              	.L74:
 155:Core/Src/error_manager.c **** 
 742              		.loc 1 155 1 view .LVU186
 743 0012 10BD     		pop	{r4, pc}
 744              	.LVL65:
 745              	.L77:
 152:Core/Src/error_manager.c ****         osMutexRelease(error_mutex);
 746              		.loc 1 152 9 is_stmt 1 view .LVU187
 152:Core/Src/error_manager.c ****         osMutexRelease(error_mutex);
 747              		.loc 1 152 18 is_stmt 0 view .LVU188
 748 0014 054A     		ldr	r2, .L78+4
 749 0016 5368     		ldr	r3, [r2, #4]
 152:Core/Src/error_manager.c ****         osMutexRelease(error_mutex);
 750              		.loc 1 152 33 view .LVU189
 751 0018 2343     		orrs	r3, r3, r4
 752 001a 5360     		str	r3, [r2, #4]
 153:Core/Src/error_manager.c ****     }
 753              		.loc 1 153 9 is_stmt 1 view .LVU190
 754 001c 024B     		ldr	r3, .L78
 755 001e 1868     		ldr	r0, [r3]
 756 0020 FFF7FEFF 		bl	osMutexRelease
 757              	.LVL66:
 155:Core/Src/error_manager.c **** 
 758              		.loc 1 155 1 is_stmt 0 view .LVU191
 759 0024 F5E7     		b	.L74
 760              	.L79:
 761 0026 00BF     		.align	2
 762              	.L78:
 763 0028 00000000 		.word	error_mutex
 764 002c 00000000 		.word	error_mgr
 765              		.cfi_endproc
 766              	.LFE295:
 768              		.section	.text.ErrorMgr_ClearWarning,"ax",%progbits
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s 			page 26


 769              		.align	1
 770              		.global	ErrorMgr_ClearWarning
 771              		.syntax unified
 772              		.thumb
 773              		.thumb_func
 775              	ErrorMgr_ClearWarning:
 776              	.LVL67:
 777              	.LFB296:
 163:Core/Src/error_manager.c ****     if (osMutexAcquire(error_mutex, osWaitForever) == osOK) {
 778              		.loc 1 163 1 is_stmt 1 view -0
 779              		.cfi_startproc
 780              		@ args = 0, pretend = 0, frame = 0
 781              		@ frame_needed = 0, uses_anonymous_args = 0
 163:Core/Src/error_manager.c ****     if (osMutexAcquire(error_mutex, osWaitForever) == osOK) {
 782              		.loc 1 163 1 is_stmt 0 view .LVU193
 783 0000 10B5     		push	{r4, lr}
 784              		.cfi_def_cfa_offset 8
 785              		.cfi_offset 4, -8
 786              		.cfi_offset 14, -4
 787 0002 0446     		mov	r4, r0
 164:Core/Src/error_manager.c ****         error_mgr.warning_flags &= ~warning_flag;
 788              		.loc 1 164 5 is_stmt 1 view .LVU194
 164:Core/Src/error_manager.c ****         error_mgr.warning_flags &= ~warning_flag;
 789              		.loc 1 164 9 is_stmt 0 view .LVU195
 790 0004 4FF0FF31 		mov	r1, #-1
 791 0008 074B     		ldr	r3, .L84
 792 000a 1868     		ldr	r0, [r3]
 793              	.LVL68:
 164:Core/Src/error_manager.c ****         error_mgr.warning_flags &= ~warning_flag;
 794              		.loc 1 164 9 view .LVU196
 795 000c FFF7FEFF 		bl	osMutexAcquire
 796              	.LVL69:
 164:Core/Src/error_manager.c ****         error_mgr.warning_flags &= ~warning_flag;
 797              		.loc 1 164 8 discriminator 1 view .LVU197
 798 0010 00B1     		cbz	r0, .L83
 799              	.L80:
 168:Core/Src/error_manager.c **** 
 800              		.loc 1 168 1 view .LVU198
 801 0012 10BD     		pop	{r4, pc}
 802              	.LVL70:
 803              	.L83:
 165:Core/Src/error_manager.c ****         osMutexRelease(error_mutex);
 804              		.loc 1 165 9 is_stmt 1 view .LVU199
 165:Core/Src/error_manager.c ****         osMutexRelease(error_mutex);
 805              		.loc 1 165 18 is_stmt 0 view .LVU200
 806 0014 054A     		ldr	r2, .L84+4
 807 0016 5368     		ldr	r3, [r2, #4]
 165:Core/Src/error_manager.c ****         osMutexRelease(error_mutex);
 808              		.loc 1 165 33 view .LVU201
 809 0018 23EA0403 		bic	r3, r3, r4
 810 001c 5360     		str	r3, [r2, #4]
 166:Core/Src/error_manager.c ****     }
 811              		.loc 1 166 9 is_stmt 1 view .LVU202
 812 001e 024B     		ldr	r3, .L84
 813 0020 1868     		ldr	r0, [r3]
 814 0022 FFF7FEFF 		bl	osMutexRelease
 815              	.LVL71:
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s 			page 27


 168:Core/Src/error_manager.c **** 
 816              		.loc 1 168 1 is_stmt 0 view .LVU203
 817 0026 F4E7     		b	.L80
 818              	.L85:
 819              		.align	2
 820              	.L84:
 821 0028 00000000 		.word	error_mutex
 822 002c 00000000 		.word	error_mgr
 823              		.cfi_endproc
 824              	.LFE296:
 826              		.section	.text.ErrorMgr_GetErrors,"ax",%progbits
 827              		.align	1
 828              		.global	ErrorMgr_GetErrors
 829              		.syntax unified
 830              		.thumb
 831              		.thumb_func
 833              	ErrorMgr_GetErrors:
 834              	.LFB297:
 175:Core/Src/error_manager.c ****     uint32_t errors = 0;
 835              		.loc 1 175 1 is_stmt 1 view -0
 836              		.cfi_startproc
 837              		@ args = 0, pretend = 0, frame = 0
 838              		@ frame_needed = 0, uses_anonymous_args = 0
 839 0000 10B5     		push	{r4, lr}
 840              		.cfi_def_cfa_offset 8
 841              		.cfi_offset 4, -8
 842              		.cfi_offset 14, -4
 176:Core/Src/error_manager.c ****     
 843              		.loc 1 176 5 view .LVU205
 844              	.LVL72:
 178:Core/Src/error_manager.c ****         errors = error_mgr.error_flags;
 845              		.loc 1 178 5 view .LVU206
 178:Core/Src/error_manager.c ****         errors = error_mgr.error_flags;
 846              		.loc 1 178 9 is_stmt 0 view .LVU207
 847 0002 4FF0FF31 		mov	r1, #-1
 848 0006 074B     		ldr	r3, .L91
 849 0008 1868     		ldr	r0, [r3]
 850 000a FFF7FEFF 		bl	osMutexAcquire
 851              	.LVL73:
 178:Core/Src/error_manager.c ****         errors = error_mgr.error_flags;
 852              		.loc 1 178 8 discriminator 1 view .LVU208
 853 000e 10B1     		cbz	r0, .L90
 176:Core/Src/error_manager.c ****     
 854              		.loc 1 176 14 view .LVU209
 855 0010 0024     		movs	r4, #0
 183:Core/Src/error_manager.c **** }
 856              		.loc 1 183 5 is_stmt 1 view .LVU210
 857              	.LVL74:
 858              	.L86:
 184:Core/Src/error_manager.c **** 
 859              		.loc 1 184 1 is_stmt 0 view .LVU211
 860 0012 2046     		mov	r0, r4
 861 0014 10BD     		pop	{r4, pc}
 862              	.LVL75:
 863              	.L90:
 179:Core/Src/error_manager.c ****         osMutexRelease(error_mutex);
 864              		.loc 1 179 9 is_stmt 1 view .LVU212
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s 			page 28


 179:Core/Src/error_manager.c ****         osMutexRelease(error_mutex);
 865              		.loc 1 179 16 is_stmt 0 view .LVU213
 866 0016 044B     		ldr	r3, .L91+4
 867 0018 1C68     		ldr	r4, [r3]
 868              	.LVL76:
 180:Core/Src/error_manager.c ****     }
 869              		.loc 1 180 9 is_stmt 1 view .LVU214
 870 001a 024B     		ldr	r3, .L91
 871 001c 1868     		ldr	r0, [r3]
 872 001e FFF7FEFF 		bl	osMutexRelease
 873              	.LVL77:
 874 0022 F6E7     		b	.L86
 875              	.L92:
 876              		.align	2
 877              	.L91:
 878 0024 00000000 		.word	error_mutex
 879 0028 00000000 		.word	error_mgr
 880              		.cfi_endproc
 881              	.LFE297:
 883              		.section	.text.ErrorMgr_GetWarnings,"ax",%progbits
 884              		.align	1
 885              		.global	ErrorMgr_GetWarnings
 886              		.syntax unified
 887              		.thumb
 888              		.thumb_func
 890              	ErrorMgr_GetWarnings:
 891              	.LFB298:
 191:Core/Src/error_manager.c ****     uint32_t warnings = 0;
 892              		.loc 1 191 1 view -0
 893              		.cfi_startproc
 894              		@ args = 0, pretend = 0, frame = 0
 895              		@ frame_needed = 0, uses_anonymous_args = 0
 896 0000 10B5     		push	{r4, lr}
 897              		.cfi_def_cfa_offset 8
 898              		.cfi_offset 4, -8
 899              		.cfi_offset 14, -4
 192:Core/Src/error_manager.c ****     
 900              		.loc 1 192 5 view .LVU216
 901              	.LVL78:
 194:Core/Src/error_manager.c ****         warnings = error_mgr.warning_flags;
 902              		.loc 1 194 5 view .LVU217
 194:Core/Src/error_manager.c ****         warnings = error_mgr.warning_flags;
 903              		.loc 1 194 9 is_stmt 0 view .LVU218
 904 0002 4FF0FF31 		mov	r1, #-1
 905 0006 074B     		ldr	r3, .L98
 906 0008 1868     		ldr	r0, [r3]
 907 000a FFF7FEFF 		bl	osMutexAcquire
 908              	.LVL79:
 194:Core/Src/error_manager.c ****         warnings = error_mgr.warning_flags;
 909              		.loc 1 194 8 discriminator 1 view .LVU219
 910 000e 10B1     		cbz	r0, .L97
 192:Core/Src/error_manager.c ****     
 911              		.loc 1 192 14 view .LVU220
 912 0010 0024     		movs	r4, #0
 199:Core/Src/error_manager.c **** }
 913              		.loc 1 199 5 is_stmt 1 view .LVU221
 914              	.LVL80:
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s 			page 29


 915              	.L93:
 200:Core/Src/error_manager.c **** 
 916              		.loc 1 200 1 is_stmt 0 view .LVU222
 917 0012 2046     		mov	r0, r4
 918 0014 10BD     		pop	{r4, pc}
 919              	.LVL81:
 920              	.L97:
 195:Core/Src/error_manager.c ****         osMutexRelease(error_mutex);
 921              		.loc 1 195 9 is_stmt 1 view .LVU223
 195:Core/Src/error_manager.c ****         osMutexRelease(error_mutex);
 922              		.loc 1 195 18 is_stmt 0 view .LVU224
 923 0016 044B     		ldr	r3, .L98+4
 924 0018 5C68     		ldr	r4, [r3, #4]
 925              	.LVL82:
 196:Core/Src/error_manager.c ****     }
 926              		.loc 1 196 9 is_stmt 1 view .LVU225
 927 001a 024B     		ldr	r3, .L98
 928 001c 1868     		ldr	r0, [r3]
 929 001e FFF7FEFF 		bl	osMutexRelease
 930              	.LVL83:
 931 0022 F6E7     		b	.L93
 932              	.L99:
 933              		.align	2
 934              	.L98:
 935 0024 00000000 		.word	error_mutex
 936 0028 00000000 		.word	error_mgr
 937              		.cfi_endproc
 938              	.LFE298:
 940              		.section	.text.ErrorMgr_HasErrors,"ax",%progbits
 941              		.align	1
 942              		.global	ErrorMgr_HasErrors
 943              		.syntax unified
 944              		.thumb
 945              		.thumb_func
 947              	ErrorMgr_HasErrors:
 948              	.LFB299:
 207:Core/Src/error_manager.c ****     return (ErrorMgr_GetErrors() != 0);
 949              		.loc 1 207 1 view -0
 950              		.cfi_startproc
 951              		@ args = 0, pretend = 0, frame = 0
 952              		@ frame_needed = 0, uses_anonymous_args = 0
 953 0000 08B5     		push	{r3, lr}
 954              		.cfi_def_cfa_offset 8
 955              		.cfi_offset 3, -8
 956              		.cfi_offset 14, -4
 208:Core/Src/error_manager.c **** }
 957              		.loc 1 208 5 view .LVU227
 208:Core/Src/error_manager.c **** }
 958              		.loc 1 208 13 is_stmt 0 view .LVU228
 959 0002 FFF7FEFF 		bl	ErrorMgr_GetErrors
 960              	.LVL84:
 209:Core/Src/error_manager.c **** 
 961              		.loc 1 209 1 view .LVU229
 962 0006 0038     		subs	r0, r0, #0
 963 0008 18BF     		it	ne
 964 000a 0120     		movne	r0, #1
 965 000c 08BD     		pop	{r3, pc}
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s 			page 30


 966              		.cfi_endproc
 967              	.LFE299:
 969              		.section	.text.ErrorMgr_HasWarnings,"ax",%progbits
 970              		.align	1
 971              		.global	ErrorMgr_HasWarnings
 972              		.syntax unified
 973              		.thumb
 974              		.thumb_func
 976              	ErrorMgr_HasWarnings:
 977              	.LFB300:
 216:Core/Src/error_manager.c ****     return (ErrorMgr_GetWarnings() != 0);
 978              		.loc 1 216 1 is_stmt 1 view -0
 979              		.cfi_startproc
 980              		@ args = 0, pretend = 0, frame = 0
 981              		@ frame_needed = 0, uses_anonymous_args = 0
 982 0000 08B5     		push	{r3, lr}
 983              		.cfi_def_cfa_offset 8
 984              		.cfi_offset 3, -8
 985              		.cfi_offset 14, -4
 217:Core/Src/error_manager.c **** }
 986              		.loc 1 217 5 view .LVU231
 217:Core/Src/error_manager.c **** }
 987              		.loc 1 217 13 is_stmt 0 view .LVU232
 988 0002 FFF7FEFF 		bl	ErrorMgr_GetWarnings
 989              	.LVL85:
 218:Core/Src/error_manager.c **** 
 990              		.loc 1 218 1 view .LVU233
 991 0006 0038     		subs	r0, r0, #0
 992 0008 18BF     		it	ne
 993 000a 0120     		movne	r0, #1
 994 000c 08BD     		pop	{r3, pc}
 995              		.cfi_endproc
 996              	.LFE300:
 998              		.section	.text.ErrorMgr_SetState,"ax",%progbits
 999              		.align	1
 1000              		.global	ErrorMgr_SetState
 1001              		.syntax unified
 1002              		.thumb
 1003              		.thumb_func
 1005              	ErrorMgr_SetState:
 1006              	.LVL86:
 1007              	.LFB301:
 227:Core/Src/error_manager.c ****     if (osMutexAcquire(error_mutex, osWaitForever) == osOK) {
 1008              		.loc 1 227 1 is_stmt 1 view -0
 1009              		.cfi_startproc
 1010              		@ args = 0, pretend = 0, frame = 0
 1011              		@ frame_needed = 0, uses_anonymous_args = 0
 227:Core/Src/error_manager.c ****     if (osMutexAcquire(error_mutex, osWaitForever) == osOK) {
 1012              		.loc 1 227 1 is_stmt 0 view .LVU235
 1013 0000 10B5     		push	{r4, lr}
 1014              		.cfi_def_cfa_offset 8
 1015              		.cfi_offset 4, -8
 1016              		.cfi_offset 14, -4
 1017 0002 0446     		mov	r4, r0
 228:Core/Src/error_manager.c ****         if (error_mgr.state != state) {
 1018              		.loc 1 228 5 is_stmt 1 view .LVU236
 228:Core/Src/error_manager.c ****         if (error_mgr.state != state) {
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s 			page 31


 1019              		.loc 1 228 9 is_stmt 0 view .LVU237
 1020 0004 4FF0FF31 		mov	r1, #-1
 1021 0008 0A4B     		ldr	r3, .L109
 1022 000a 1868     		ldr	r0, [r3]
 1023              	.LVL87:
 228:Core/Src/error_manager.c ****         if (error_mgr.state != state) {
 1024              		.loc 1 228 9 view .LVU238
 1025 000c FFF7FEFF 		bl	osMutexAcquire
 1026              	.LVL88:
 228:Core/Src/error_manager.c ****         if (error_mgr.state != state) {
 1027              		.loc 1 228 8 discriminator 1 view .LVU239
 1028 0010 38B9     		cbnz	r0, .L104
 229:Core/Src/error_manager.c ****             HandleStateExit(error_mgr.state);
 1029              		.loc 1 229 9 is_stmt 1 view .LVU240
 229:Core/Src/error_manager.c ****             HandleStateExit(error_mgr.state);
 1030              		.loc 1 229 22 is_stmt 0 view .LVU241
 1031 0012 094B     		ldr	r3, .L109+4
 1032 0014 187A     		ldrb	r0, [r3, #8]	@ zero_extendqisi2
 229:Core/Src/error_manager.c ****             HandleStateExit(error_mgr.state);
 1033              		.loc 1 229 12 view .LVU242
 1034 0016 A042     		cmp	r0, r4
 1035 0018 04D1     		bne	.L108
 1036              	.L106:
 234:Core/Src/error_manager.c ****     }
 1037              		.loc 1 234 9 is_stmt 1 view .LVU243
 1038 001a 064B     		ldr	r3, .L109
 1039 001c 1868     		ldr	r0, [r3]
 1040 001e FFF7FEFF 		bl	osMutexRelease
 1041              	.LVL89:
 1042              	.L104:
 236:Core/Src/error_manager.c **** 
 1043              		.loc 1 236 1 is_stmt 0 view .LVU244
 1044 0022 10BD     		pop	{r4, pc}
 1045              	.LVL90:
 1046              	.L108:
 230:Core/Src/error_manager.c ****             error_mgr.state = state;
 1047              		.loc 1 230 13 is_stmt 1 view .LVU245
 1048 0024 FFF7FEFF 		bl	HandleStateExit
 1049              	.LVL91:
 231:Core/Src/error_manager.c ****             HandleStateEntry(state);
 1050              		.loc 1 231 13 view .LVU246
 231:Core/Src/error_manager.c ****             HandleStateEntry(state);
 1051              		.loc 1 231 29 is_stmt 0 view .LVU247
 1052 0028 034B     		ldr	r3, .L109+4
 1053 002a 1C72     		strb	r4, [r3, #8]
 232:Core/Src/error_manager.c ****         }
 1054              		.loc 1 232 13 is_stmt 1 view .LVU248
 1055 002c 2046     		mov	r0, r4
 1056 002e FFF7FEFF 		bl	HandleStateEntry
 1057              	.LVL92:
 1058 0032 F2E7     		b	.L106
 1059              	.L110:
 1060              		.align	2
 1061              	.L109:
 1062 0034 00000000 		.word	error_mutex
 1063 0038 00000000 		.word	error_mgr
 1064              		.cfi_endproc
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s 			page 32


 1065              	.LFE301:
 1067              		.section	.text.ErrorMgr_GetState,"ax",%progbits
 1068              		.align	1
 1069              		.global	ErrorMgr_GetState
 1070              		.syntax unified
 1071              		.thumb
 1072              		.thumb_func
 1074              	ErrorMgr_GetState:
 1075              	.LFB302:
 243:Core/Src/error_manager.c ****     BMS_State_t state = BMS_STATE_INIT;
 1076              		.loc 1 243 1 view -0
 1077              		.cfi_startproc
 1078              		@ args = 0, pretend = 0, frame = 0
 1079              		@ frame_needed = 0, uses_anonymous_args = 0
 1080 0000 10B5     		push	{r4, lr}
 1081              		.cfi_def_cfa_offset 8
 1082              		.cfi_offset 4, -8
 1083              		.cfi_offset 14, -4
 244:Core/Src/error_manager.c ****     
 1084              		.loc 1 244 5 view .LVU250
 1085              	.LVL93:
 246:Core/Src/error_manager.c ****         state = error_mgr.state;
 1086              		.loc 1 246 5 view .LVU251
 246:Core/Src/error_manager.c ****         state = error_mgr.state;
 1087              		.loc 1 246 9 is_stmt 0 view .LVU252
 1088 0002 4FF0FF31 		mov	r1, #-1
 1089 0006 074B     		ldr	r3, .L116
 1090 0008 1868     		ldr	r0, [r3]
 1091 000a FFF7FEFF 		bl	osMutexAcquire
 1092              	.LVL94:
 246:Core/Src/error_manager.c ****         state = error_mgr.state;
 1093              		.loc 1 246 8 discriminator 1 view .LVU253
 1094 000e 10B1     		cbz	r0, .L115
 244:Core/Src/error_manager.c ****     
 1095              		.loc 1 244 17 view .LVU254
 1096 0010 0024     		movs	r4, #0
 1097              	.LVL95:
 1098              	.L112:
 251:Core/Src/error_manager.c **** }
 1099              		.loc 1 251 5 is_stmt 1 view .LVU255
 252:Core/Src/error_manager.c **** 
 1100              		.loc 1 252 1 is_stmt 0 view .LVU256
 1101 0012 2046     		mov	r0, r4
 1102 0014 10BD     		pop	{r4, pc}
 1103              	.LVL96:
 1104              	.L115:
 247:Core/Src/error_manager.c ****         osMutexRelease(error_mutex);
 1105              		.loc 1 247 9 is_stmt 1 view .LVU257
 247:Core/Src/error_manager.c ****         osMutexRelease(error_mutex);
 1106              		.loc 1 247 15 is_stmt 0 view .LVU258
 1107 0016 044B     		ldr	r3, .L116+4
 1108 0018 1C7A     		ldrb	r4, [r3, #8]	@ zero_extendqisi2
 1109              	.LVL97:
 248:Core/Src/error_manager.c ****     }
 1110              		.loc 1 248 9 is_stmt 1 view .LVU259
 1111 001a 024B     		ldr	r3, .L116
 1112 001c 1868     		ldr	r0, [r3]
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s 			page 33


 1113 001e FFF7FEFF 		bl	osMutexRelease
 1114              	.LVL98:
 1115 0022 F6E7     		b	.L112
 1116              	.L117:
 1117              		.align	2
 1118              	.L116:
 1119 0024 00000000 		.word	error_mutex
 1120 0028 00000000 		.word	error_mgr
 1121              		.cfi_endproc
 1122              	.LFE302:
 1124              		.section	.text.ErrorMgr_GetStatus,"ax",%progbits
 1125              		.align	1
 1126              		.global	ErrorMgr_GetStatus
 1127              		.syntax unified
 1128              		.thumb
 1129              		.thumb_func
 1131              	ErrorMgr_GetStatus:
 1132              	.LVL99:
 1133              	.LFB304:
 301:Core/Src/error_manager.c ****     static uint8_t byte0_rotation = 0;
 1134              		.loc 1 301 1 view -0
 1135              		.cfi_startproc
 1136              		@ args = 0, pretend = 0, frame = 0
 1137              		@ frame_needed = 0, uses_anonymous_args = 0
 302:Core/Src/error_manager.c ****     static uint8_t byte1_rotation = 0;
 1138              		.loc 1 302 5 view .LVU261
 303:Core/Src/error_manager.c ****     static uint8_t byte2_rotation = 0;
 1139              		.loc 1 303 5 view .LVU262
 304:Core/Src/error_manager.c ****     static uint8_t byte3_rotation = 0;
 1140              		.loc 1 304 5 view .LVU263
 305:Core/Src/error_manager.c ****     
 1141              		.loc 1 305 5 view .LVU264
 307:Core/Src/error_manager.c ****         return;
 1142              		.loc 1 307 5 view .LVU265
 307:Core/Src/error_manager.c ****         return;
 1143              		.loc 1 307 8 is_stmt 0 view .LVU266
 1144 0000 0028     		cmp	r0, #0
 1145 0002 32D0     		beq	.L122
 301:Core/Src/error_manager.c ****     static uint8_t byte0_rotation = 0;
 1146              		.loc 1 301 1 view .LVU267
 1147 0004 38B5     		push	{r3, r4, r5, lr}
 1148              		.cfi_def_cfa_offset 16
 1149              		.cfi_offset 3, -16
 1150              		.cfi_offset 4, -12
 1151              		.cfi_offset 5, -8
 1152              		.cfi_offset 14, -4
 1153 0006 0446     		mov	r4, r0
 311:Core/Src/error_manager.c ****         // Copy base data
 1154              		.loc 1 311 5 is_stmt 1 view .LVU268
 311:Core/Src/error_manager.c ****         // Copy base data
 1155              		.loc 1 311 9 is_stmt 0 view .LVU269
 1156 0008 4FF0FF31 		mov	r1, #-1
 1157 000c 174B     		ldr	r3, .L126
 1158 000e 1868     		ldr	r0, [r3]
 1159              	.LVL100:
 311:Core/Src/error_manager.c ****         // Copy base data
 1160              		.loc 1 311 9 view .LVU270
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s 			page 34


 1161 0010 FFF7FEFF 		bl	osMutexAcquire
 1162              	.LVL101:
 311:Core/Src/error_manager.c ****         // Copy base data
 1163              		.loc 1 311 8 discriminator 1 view .LVU271
 1164 0014 00B1     		cbz	r0, .L125
 1165              	.L118:
 329:Core/Src/error_manager.c ****   * @brief  Update system uptime (call every second)
 1166              		.loc 1 329 1 view .LVU272
 1167 0016 38BD     		pop	{r3, r4, r5, pc}
 1168              	.LVL102:
 1169              	.L125:
 1170              	.LBB12:
 313:Core/Src/error_manager.c ****         
 1171              		.loc 1 313 9 is_stmt 1 view .LVU273
 1172 0018 154D     		ldr	r5, .L126+4
 1173 001a AC46     		mov	ip, r5
 1174 001c BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 1175 0020 2060     		str	r0, [r4]	@ unaligned
 1176 0022 6160     		str	r1, [r4, #4]	@ unaligned
 1177 0024 A260     		str	r2, [r4, #8]	@ unaligned
 1178 0026 E360     		str	r3, [r4, #12]	@ unaligned
 1179 0028 DCF80000 		ldr	r0, [ip]
 1180 002c 2061     		str	r0, [r4, #16]	@ unaligned
 316:Core/Src/error_manager.c ****             mgr->state = BMS_STATE_FAULT;
 1181              		.loc 1 316 9 view .LVU274
 316:Core/Src/error_manager.c ****             mgr->state = BMS_STATE_FAULT;
 1182              		.loc 1 316 22 is_stmt 0 view .LVU275
 1183 002e 6B7A     		ldrb	r3, [r5, #9]	@ zero_extendqisi2
 316:Core/Src/error_manager.c ****             mgr->state = BMS_STATE_FAULT;
 1184              		.loc 1 316 12 view .LVU276
 1185 0030 0BB1     		cbz	r3, .L120
 317:Core/Src/error_manager.c ****         }
 1186              		.loc 1 317 13 is_stmt 1 view .LVU277
 317:Core/Src/error_manager.c ****         }
 1187              		.loc 1 317 24 is_stmt 0 view .LVU278
 1188 0032 0523     		movs	r3, #5
 1189 0034 2372     		strb	r3, [r4, #8]
 1190              	.L120:
 321:Core/Src/error_manager.c ****         error_bytes[0] = RotateByteBits((uint8_t)(error_mgr.error_flags & 0xFF), &byte0_rotation);
 1191              		.loc 1 321 9 is_stmt 1 view .LVU279
 1192              	.LVL103:
 322:Core/Src/error_manager.c ****         error_bytes[1] = RotateByteBits((uint8_t)((error_mgr.error_flags >> 8) & 0xFF), &byte1_rota
 1193              		.loc 1 322 9 view .LVU280
 322:Core/Src/error_manager.c ****         error_bytes[1] = RotateByteBits((uint8_t)((error_mgr.error_flags >> 8) & 0xFF), &byte1_rota
 1194              		.loc 1 322 60 is_stmt 0 view .LVU281
 1195 0036 0E4D     		ldr	r5, .L126+4
 322:Core/Src/error_manager.c ****         error_bytes[1] = RotateByteBits((uint8_t)((error_mgr.error_flags >> 8) & 0xFF), &byte1_rota
 1196              		.loc 1 322 26 view .LVU282
 1197 0038 0E49     		ldr	r1, .L126+8
 1198 003a 2878     		ldrb	r0, [r5]	@ zero_extendqisi2
 1199 003c FFF7FEFF 		bl	RotateByteBits
 1200              	.LVL104:
 322:Core/Src/error_manager.c ****         error_bytes[1] = RotateByteBits((uint8_t)((error_mgr.error_flags >> 8) & 0xFF), &byte1_rota
 1201              		.loc 1 322 24 discriminator 1 view .LVU283
 1202 0040 2070     		strb	r0, [r4]
 323:Core/Src/error_manager.c ****         error_bytes[2] = RotateByteBits((uint8_t)((error_mgr.error_flags >> 16) & 0xFF), &byte2_rot
 1203              		.loc 1 323 9 is_stmt 1 view .LVU284
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s 			page 35


 323:Core/Src/error_manager.c ****         error_bytes[2] = RotateByteBits((uint8_t)((error_mgr.error_flags >> 16) & 0xFF), &byte2_rot
 1204              		.loc 1 323 26 is_stmt 0 view .LVU285
 1205 0042 0D49     		ldr	r1, .L126+12
 1206 0044 6878     		ldrb	r0, [r5, #1]	@ zero_extendqisi2
 1207 0046 FFF7FEFF 		bl	RotateByteBits
 1208              	.LVL105:
 323:Core/Src/error_manager.c ****         error_bytes[2] = RotateByteBits((uint8_t)((error_mgr.error_flags >> 16) & 0xFF), &byte2_rot
 1209              		.loc 1 323 24 discriminator 1 view .LVU286
 1210 004a 6070     		strb	r0, [r4, #1]
 324:Core/Src/error_manager.c ****         error_bytes[3] = RotateByteBits((uint8_t)((error_mgr.error_flags >> 24) & 0xFF), &byte3_rot
 1211              		.loc 1 324 9 is_stmt 1 view .LVU287
 324:Core/Src/error_manager.c ****         error_bytes[3] = RotateByteBits((uint8_t)((error_mgr.error_flags >> 24) & 0xFF), &byte3_rot
 1212              		.loc 1 324 26 is_stmt 0 view .LVU288
 1213 004c 0B49     		ldr	r1, .L126+16
 1214 004e A878     		ldrb	r0, [r5, #2]	@ zero_extendqisi2
 1215 0050 FFF7FEFF 		bl	RotateByteBits
 1216              	.LVL106:
 324:Core/Src/error_manager.c ****         error_bytes[3] = RotateByteBits((uint8_t)((error_mgr.error_flags >> 24) & 0xFF), &byte3_rot
 1217              		.loc 1 324 24 discriminator 1 view .LVU289
 1218 0054 A070     		strb	r0, [r4, #2]
 325:Core/Src/error_manager.c ****         
 1219              		.loc 1 325 9 is_stmt 1 view .LVU290
 325:Core/Src/error_manager.c ****         
 1220              		.loc 1 325 26 is_stmt 0 view .LVU291
 1221 0056 0A49     		ldr	r1, .L126+20
 1222 0058 E878     		ldrb	r0, [r5, #3]	@ zero_extendqisi2
 1223 005a FFF7FEFF 		bl	RotateByteBits
 1224              	.LVL107:
 325:Core/Src/error_manager.c ****         
 1225              		.loc 1 325 24 discriminator 1 view .LVU292
 1226 005e E070     		strb	r0, [r4, #3]
 327:Core/Src/error_manager.c ****     }
 1227              		.loc 1 327 9 is_stmt 1 view .LVU293
 1228 0060 024B     		ldr	r3, .L126
 1229 0062 1868     		ldr	r0, [r3]
 1230 0064 FFF7FEFF 		bl	osMutexRelease
 1231              	.LVL108:
 1232 0068 D5E7     		b	.L118
 1233              	.LVL109:
 1234              	.L122:
 1235              		.cfi_def_cfa_offset 0
 1236              		.cfi_restore 3
 1237              		.cfi_restore 4
 1238              		.cfi_restore 5
 1239              		.cfi_restore 14
 327:Core/Src/error_manager.c ****     }
 1240              		.loc 1 327 9 is_stmt 0 view .LVU294
 1241 006a 7047     		bx	lr
 1242              	.L127:
 1243              		.align	2
 1244              	.L126:
 1245 006c 00000000 		.word	error_mutex
 1246 0070 00000000 		.word	error_mgr
 1247 0074 00000000 		.word	byte0_rotation.3
 1248 0078 00000000 		.word	byte1_rotation.2
 1249 007c 00000000 		.word	byte2_rotation.1
 1250 0080 00000000 		.word	byte3_rotation.0
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s 			page 36


 1251              	.LBE12:
 1252              		.cfi_endproc
 1253              	.LFE304:
 1255              		.section	.text.ErrorMgr_UpdateUptime,"ax",%progbits
 1256              		.align	1
 1257              		.global	ErrorMgr_UpdateUptime
 1258              		.syntax unified
 1259              		.thumb
 1260              		.thumb_func
 1262              	ErrorMgr_UpdateUptime:
 1263              	.LFB305:
 334:Core/Src/error_manager.c ****     if (osMutexAcquire(error_mutex, osWaitForever) == osOK) {
 1264              		.loc 1 334 1 is_stmt 1 view -0
 1265              		.cfi_startproc
 1266              		@ args = 0, pretend = 0, frame = 0
 1267              		@ frame_needed = 0, uses_anonymous_args = 0
 1268 0000 08B5     		push	{r3, lr}
 1269              		.cfi_def_cfa_offset 8
 1270              		.cfi_offset 3, -8
 1271              		.cfi_offset 14, -4
 335:Core/Src/error_manager.c ****         error_mgr.uptime_seconds++;
 1272              		.loc 1 335 5 view .LVU296
 335:Core/Src/error_manager.c ****         error_mgr.uptime_seconds++;
 1273              		.loc 1 335 9 is_stmt 0 view .LVU297
 1274 0002 4FF0FF31 		mov	r1, #-1
 1275 0006 074B     		ldr	r3, .L132
 1276 0008 1868     		ldr	r0, [r3]
 1277 000a FFF7FEFF 		bl	osMutexAcquire
 1278              	.LVL110:
 335:Core/Src/error_manager.c ****         error_mgr.uptime_seconds++;
 1279              		.loc 1 335 8 discriminator 1 view .LVU298
 1280 000e 00B1     		cbz	r0, .L131
 1281              	.L128:
 339:Core/Src/error_manager.c **** 
 1282              		.loc 1 339 1 view .LVU299
 1283 0010 08BD     		pop	{r3, pc}
 1284              	.L131:
 336:Core/Src/error_manager.c ****         osMutexRelease(error_mutex);
 1285              		.loc 1 336 9 is_stmt 1 view .LVU300
 336:Core/Src/error_manager.c ****         osMutexRelease(error_mutex);
 1286              		.loc 1 336 18 is_stmt 0 view .LVU301
 1287 0012 054A     		ldr	r2, .L132+4
 1288 0014 D368     		ldr	r3, [r2, #12]
 336:Core/Src/error_manager.c ****         osMutexRelease(error_mutex);
 1289              		.loc 1 336 33 view .LVU302
 1290 0016 0133     		adds	r3, r3, #1
 1291 0018 D360     		str	r3, [r2, #12]
 337:Core/Src/error_manager.c ****     }
 1292              		.loc 1 337 9 is_stmt 1 view .LVU303
 1293 001a 024B     		ldr	r3, .L132
 1294 001c 1868     		ldr	r0, [r3]
 1295 001e FFF7FEFF 		bl	osMutexRelease
 1296              	.LVL111:
 339:Core/Src/error_manager.c **** 
 1297              		.loc 1 339 1 is_stmt 0 view .LVU304
 1298 0022 F5E7     		b	.L128
 1299              	.L133:
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s 			page 37


 1300              		.align	2
 1301              	.L132:
 1302 0024 00000000 		.word	error_mutex
 1303 0028 00000000 		.word	error_mgr
 1304              		.cfi_endproc
 1305              	.LFE305:
 1307              		.section	.text.ErrorMgr_IsValidTransition,"ax",%progbits
 1308              		.align	1
 1309              		.global	ErrorMgr_IsValidTransition
 1310              		.syntax unified
 1311              		.thumb
 1312              		.thumb_func
 1314              	ErrorMgr_IsValidTransition:
 1315              	.LVL112:
 1316              	.LFB306:
 348:Core/Src/error_manager.c ****     // Same state is always valid
 1317              		.loc 1 348 1 is_stmt 1 view -0
 1318              		.cfi_startproc
 1319              		@ args = 0, pretend = 0, frame = 0
 1320              		@ frame_needed = 0, uses_anonymous_args = 0
 1321              		@ link register save eliminated.
 350:Core/Src/error_manager.c ****         return true;
 1322              		.loc 1 350 5 view .LVU306
 350:Core/Src/error_manager.c ****         return true;
 1323              		.loc 1 350 8 is_stmt 0 view .LVU307
 1324 0000 8842     		cmp	r0, r1
 1325 0002 35D0     		beq	.L145
 355:Core/Src/error_manager.c ****         case BMS_STATE_INIT:
 1326              		.loc 1 355 5 is_stmt 1 view .LVU308
 1327 0004 0628     		cmp	r0, #6
 1328 0006 35D8     		bhi	.L146
 1329 0008 DFE800F0 		tbb	[pc, r0]
 1330              	.L137:
 1331 000c 04       		.byte	(.L141-.L137)/2
 1332 000d 0F       		.byte	(.L140-.L137)/2
 1333 000e 16       		.byte	(.L139-.L137)/2
 1334 000f 16       		.byte	(.L139-.L137)/2
 1335 0010 16       		.byte	(.L139-.L137)/2
 1336 0011 23       		.byte	(.L138-.L137)/2
 1337 0012 2E       		.byte	(.L136-.L137)/2
 1338 0013 00       		.p2align 1
 1339              	.L141:
 358:Core/Src/error_manager.c ****             
 1340              		.loc 1 358 13 view .LVU309
 358:Core/Src/error_manager.c ****             
 1341              		.loc 1 358 48 is_stmt 0 view .LVU310
 1342 0014 0129     		cmp	r1, #1
 1343 0016 06D0     		beq	.L147
 358:Core/Src/error_manager.c ****             
 1344              		.loc 1 358 48 discriminator 2 view .LVU311
 1345 0018 0529     		cmp	r1, #5
 1346 001a 02D0     		beq	.L154
 358:Core/Src/error_manager.c ****             
 1347              		.loc 1 358 48 discriminator 4 view .LVU312
 1348 001c 0021     		movs	r1, #0
 1349              	.LVL113:
 1350              	.L142:
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s 			page 38


 358:Core/Src/error_manager.c ****             
 1351              		.loc 1 358 48 discriminator 6 view .LVU313
 1352 001e 0846     		mov	r0, r1
 1353              	.LVL114:
 358:Core/Src/error_manager.c ****             
 1354              		.loc 1 358 48 view .LVU314
 1355 0020 7047     		bx	lr
 1356              	.LVL115:
 1357              	.L154:
 358:Core/Src/error_manager.c ****             
 1358              		.loc 1 358 48 discriminator 3 view .LVU315
 1359 0022 0121     		movs	r1, #1
 1360              	.LVL116:
 358:Core/Src/error_manager.c ****             
 1361              		.loc 1 358 48 discriminator 3 view .LVU316
 1362 0024 FBE7     		b	.L142
 1363              	.LVL117:
 1364              	.L147:
 358:Core/Src/error_manager.c ****             
 1365              		.loc 1 358 48 discriminator 3 view .LVU317
 1366 0026 0121     		movs	r1, #1
 1367              	.LVL118:
 358:Core/Src/error_manager.c ****             
 1368              		.loc 1 358 48 discriminator 3 view .LVU318
 1369 0028 F9E7     		b	.L142
 1370              	.LVL119:
 1371              	.L140:
 362:Core/Src/error_manager.c ****                     to_state == BMS_STATE_DISCHARGING ||
 1372              		.loc 1 362 13 is_stmt 1 view .LVU319
 365:Core/Src/error_manager.c ****                     to_state == BMS_STATE_SHUTDOWN);
 1373              		.loc 1 365 49 is_stmt 0 view .LVU320
 1374 002a 0239     		subs	r1, r1, #2
 1375              	.LVL120:
 365:Core/Src/error_manager.c ****                     to_state == BMS_STATE_SHUTDOWN);
 1376              		.loc 1 365 49 view .LVU321
 1377 002c C9B2     		uxtb	r1, r1
 1378 002e 0429     		cmp	r1, #4
 1379 0030 8CBF     		ite	hi
 1380 0032 0020     		movhi	r0, #0
 1381              	.LVL121:
 365:Core/Src/error_manager.c ****                     to_state == BMS_STATE_SHUTDOWN);
 1382              		.loc 1 365 49 view .LVU322
 1383 0034 0120     		movls	r0, #1
 1384 0036 7047     		bx	lr
 1385              	.LVL122:
 1386              	.L139:
 372:Core/Src/error_manager.c ****                     to_state == BMS_STATE_FAULT ||
 1387              		.loc 1 372 13 is_stmt 1 view .LVU323
 1388 0038 0529     		cmp	r1, #5
 1389 003a 05D0     		beq	.L149
 1390 003c 0629     		cmp	r1, #6
 1391 003e 05D0     		beq	.L150
 1392 0040 0129     		cmp	r1, #1
 1393 0042 04D0     		beq	.L143
 355:Core/Src/error_manager.c ****         case BMS_STATE_INIT:
 1394              		.loc 1 355 5 is_stmt 0 view .LVU324
 1395 0044 0021     		movs	r1, #0
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s 			page 39


 1396              	.LVL123:
 355:Core/Src/error_manager.c ****         case BMS_STATE_INIT:
 1397              		.loc 1 355 5 view .LVU325
 1398 0046 02E0     		b	.L143
 1399              	.LVL124:
 1400              	.L149:
 355:Core/Src/error_manager.c ****         case BMS_STATE_INIT:
 1401              		.loc 1 355 5 view .LVU326
 1402 0048 0121     		movs	r1, #1
 1403              	.LVL125:
 355:Core/Src/error_manager.c ****         case BMS_STATE_INIT:
 1404              		.loc 1 355 5 view .LVU327
 1405 004a 00E0     		b	.L143
 1406              	.LVL126:
 1407              	.L150:
 355:Core/Src/error_manager.c ****         case BMS_STATE_INIT:
 1408              		.loc 1 355 5 view .LVU328
 1409 004c 0121     		movs	r1, #1
 1410              	.LVL127:
 1411              	.L143:
 373:Core/Src/error_manager.c ****                     to_state == BMS_STATE_SHUTDOWN);
 1412              		.loc 1 373 49 discriminator 5 view .LVU329
 1413 004e 0846     		mov	r0, r1
 1414              	.LVL128:
 373:Core/Src/error_manager.c ****                     to_state == BMS_STATE_SHUTDOWN);
 1415              		.loc 1 373 49 view .LVU330
 1416 0050 7047     		bx	lr
 1417              	.LVL129:
 1418              	.L138:
 378:Core/Src/error_manager.c ****             
 1419              		.loc 1 378 13 is_stmt 1 view .LVU331
 378:Core/Src/error_manager.c ****             
 1420              		.loc 1 378 48 is_stmt 0 view .LVU332
 1421 0052 0129     		cmp	r1, #1
 1422 0054 06D0     		beq	.L152
 378:Core/Src/error_manager.c ****             
 1423              		.loc 1 378 48 discriminator 2 view .LVU333
 1424 0056 0629     		cmp	r1, #6
 1425 0058 02D0     		beq	.L155
 378:Core/Src/error_manager.c ****             
 1426              		.loc 1 378 48 discriminator 4 view .LVU334
 1427 005a 0021     		movs	r1, #0
 1428              	.LVL130:
 1429              	.L144:
 378:Core/Src/error_manager.c ****             
 1430              		.loc 1 378 48 discriminator 6 view .LVU335
 1431 005c 0846     		mov	r0, r1
 1432              	.LVL131:
 378:Core/Src/error_manager.c ****             
 1433              		.loc 1 378 48 view .LVU336
 1434 005e 7047     		bx	lr
 1435              	.LVL132:
 1436              	.L155:
 378:Core/Src/error_manager.c ****             
 1437              		.loc 1 378 48 discriminator 3 view .LVU337
 1438 0060 0121     		movs	r1, #1
 1439              	.LVL133:
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s 			page 40


 378:Core/Src/error_manager.c ****             
 1440              		.loc 1 378 48 discriminator 3 view .LVU338
 1441 0062 FBE7     		b	.L144
 1442              	.LVL134:
 1443              	.L152:
 378:Core/Src/error_manager.c ****             
 1444              		.loc 1 378 48 discriminator 3 view .LVU339
 1445 0064 0121     		movs	r1, #1
 1446              	.LVL135:
 378:Core/Src/error_manager.c ****             
 1447              		.loc 1 378 48 discriminator 3 view .LVU340
 1448 0066 F9E7     		b	.L144
 1449              	.LVL136:
 1450              	.L136:
 382:Core/Src/error_manager.c ****             
 1451              		.loc 1 382 13 is_stmt 1 view .LVU341
 382:Core/Src/error_manager.c ****             
 1452              		.loc 1 382 30 is_stmt 0 view .LVU342
 1453 0068 B1FA81F0 		clz	r0, r1
 1454              	.LVL137:
 382:Core/Src/error_manager.c ****             
 1455              		.loc 1 382 30 view .LVU343
 1456 006c 4009     		lsrs	r0, r0, #5
 1457 006e 7047     		bx	lr
 1458              	.LVL138:
 1459              	.L145:
 351:Core/Src/error_manager.c ****     }
 1460              		.loc 1 351 16 view .LVU344
 1461 0070 0120     		movs	r0, #1
 1462              	.LVL139:
 351:Core/Src/error_manager.c ****     }
 1463              		.loc 1 351 16 view .LVU345
 1464 0072 7047     		bx	lr
 1465              	.LVL140:
 1466              	.L146:
 355:Core/Src/error_manager.c ****         case BMS_STATE_INIT:
 1467              		.loc 1 355 5 view .LVU346
 1468 0074 0020     		movs	r0, #0
 1469              	.LVL141:
 387:Core/Src/error_manager.c **** 
 1470              		.loc 1 387 1 view .LVU347
 1471 0076 7047     		bx	lr
 1472              		.cfi_endproc
 1473              	.LFE306:
 1475              		.section	.text.ErrorMgr_RequestStateTransition,"ax",%progbits
 1476              		.align	1
 1477              		.global	ErrorMgr_RequestStateTransition
 1478              		.syntax unified
 1479              		.thumb
 1480              		.thumb_func
 1482              	ErrorMgr_RequestStateTransition:
 1483              	.LVL142:
 1484              	.LFB307:
 396:Core/Src/error_manager.c ****     bool transition_ok = false;
 1485              		.loc 1 396 1 is_stmt 1 view -0
 1486              		.cfi_startproc
 1487              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s 			page 41


 1488              		@ frame_needed = 0, uses_anonymous_args = 0
 396:Core/Src/error_manager.c ****     bool transition_ok = false;
 1489              		.loc 1 396 1 is_stmt 0 view .LVU349
 1490 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1491              		.cfi_def_cfa_offset 24
 1492              		.cfi_offset 3, -24
 1493              		.cfi_offset 4, -20
 1494              		.cfi_offset 5, -16
 1495              		.cfi_offset 6, -12
 1496              		.cfi_offset 7, -8
 1497              		.cfi_offset 14, -4
 1498 0002 0446     		mov	r4, r0
 1499 0004 0D46     		mov	r5, r1
 397:Core/Src/error_manager.c ****     
 1500              		.loc 1 397 5 is_stmt 1 view .LVU350
 1501              	.LVL143:
 399:Core/Src/error_manager.c ****         // Check if transition is valid
 1502              		.loc 1 399 5 view .LVU351
 399:Core/Src/error_manager.c ****         // Check if transition is valid
 1503              		.loc 1 399 9 is_stmt 0 view .LVU352
 1504 0006 4FF0FF31 		mov	r1, #-1
 1505              	.LVL144:
 399:Core/Src/error_manager.c ****         // Check if transition is valid
 1506              		.loc 1 399 9 view .LVU353
 1507 000a 1F4B     		ldr	r3, .L165
 1508 000c 1868     		ldr	r0, [r3]
 1509              	.LVL145:
 399:Core/Src/error_manager.c ****         // Check if transition is valid
 1510              		.loc 1 399 9 view .LVU354
 1511 000e FFF7FEFF 		bl	osMutexAcquire
 1512              	.LVL146:
 399:Core/Src/error_manager.c ****         // Check if transition is valid
 1513              		.loc 1 399 8 discriminator 1 view .LVU355
 1514 0012 0028     		cmp	r0, #0
 1515 0014 34D1     		bne	.L161
 401:Core/Src/error_manager.c ****             osMutexRelease(error_mutex);
 1516              		.loc 1 401 9 is_stmt 1 view .LVU356
 401:Core/Src/error_manager.c ****             osMutexRelease(error_mutex);
 1517              		.loc 1 401 14 is_stmt 0 view .LVU357
 1518 0016 1D4B     		ldr	r3, .L165+4
 1519 0018 1F7A     		ldrb	r7, [r3, #8]	@ zero_extendqisi2
 1520 001a 2146     		mov	r1, r4
 1521 001c 3846     		mov	r0, r7
 1522 001e FFF7FEFF 		bl	ErrorMgr_IsValidTransition
 1523              	.LVL147:
 401:Core/Src/error_manager.c ****             osMutexRelease(error_mutex);
 1524              		.loc 1 401 12 discriminator 1 view .LVU358
 1525 0022 0646     		mov	r6, r0
 1526 0024 08B3     		cbz	r0, .L163
 407:Core/Src/error_manager.c ****             if (error_mgr.error_flags != 0 && !(flags & STATE_TRANS_FORCE)) {
 1527              		.loc 1 407 9 is_stmt 1 view .LVU359
 407:Core/Src/error_manager.c ****             if (error_mgr.error_flags != 0 && !(flags & STATE_TRANS_FORCE)) {
 1528              		.loc 1 407 12 is_stmt 0 view .LVU360
 1529 0026 052F     		cmp	r7, #5
 1530 0028 0FD1     		bne	.L159
 407:Core/Src/error_manager.c ****             if (error_mgr.error_flags != 0 && !(flags & STATE_TRANS_FORCE)) {
 1531              		.loc 1 407 48 discriminator 1 view .LVU361
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s 			page 42


 1532 002a 062C     		cmp	r4, #6
 1533 002c 0DD0     		beq	.L159
 408:Core/Src/error_manager.c ****                 // Cannot leave FAULT state while faults exist unless forced
 1534              		.loc 1 408 13 is_stmt 1 view .LVU362
 408:Core/Src/error_manager.c ****                 // Cannot leave FAULT state while faults exist unless forced
 1535              		.loc 1 408 26 is_stmt 0 view .LVU363
 1536 002e 174B     		ldr	r3, .L165+4
 1537 0030 1B68     		ldr	r3, [r3]
 408:Core/Src/error_manager.c ****                 // Cannot leave FAULT state while faults exist unless forced
 1538              		.loc 1 408 16 view .LVU364
 1539 0032 13B1     		cbz	r3, .L160
 408:Core/Src/error_manager.c ****                 // Cannot leave FAULT state while faults exist unless forced
 1540              		.loc 1 408 44 discriminator 1 view .LVU365
 1541 0034 15F0020F 		tst	r5, #2
 1542 0038 1CD0     		beq	.L164
 1543              	.L160:
 414:Core/Src/error_manager.c ****                 error_mgr.error_flags = 0;
 1544              		.loc 1 414 13 is_stmt 1 view .LVU366
 414:Core/Src/error_manager.c ****                 error_mgr.error_flags = 0;
 1545              		.loc 1 414 16 is_stmt 0 view .LVU367
 1546 003a 15F0010F 		tst	r5, #1
 1547 003e 04D0     		beq	.L159
 415:Core/Src/error_manager.c ****                 error_mgr.warning_flags = 0;
 1548              		.loc 1 415 17 is_stmt 1 view .LVU368
 415:Core/Src/error_manager.c ****                 error_mgr.warning_flags = 0;
 1549              		.loc 1 415 39 is_stmt 0 view .LVU369
 1550 0040 124B     		ldr	r3, .L165+4
 1551 0042 0022     		movs	r2, #0
 1552 0044 1A60     		str	r2, [r3]
 416:Core/Src/error_manager.c ****                 error_mgr.fault_count = 0;
 1553              		.loc 1 416 17 is_stmt 1 view .LVU370
 416:Core/Src/error_manager.c ****                 error_mgr.fault_count = 0;
 1554              		.loc 1 416 41 is_stmt 0 view .LVU371
 1555 0046 5A60     		str	r2, [r3, #4]
 417:Core/Src/error_manager.c ****             }
 1556              		.loc 1 417 17 is_stmt 1 view .LVU372
 417:Core/Src/error_manager.c ****             }
 1557              		.loc 1 417 39 is_stmt 0 view .LVU373
 1558 0048 5A72     		strb	r2, [r3, #9]
 1559              	.L159:
 422:Core/Src/error_manager.c ****         previous_state = error_mgr.state;
 1560              		.loc 1 422 9 is_stmt 1 view .LVU374
 1561 004a 3846     		mov	r0, r7
 1562 004c FFF7FEFF 		bl	HandleStateExit
 1563              	.LVL148:
 423:Core/Src/error_manager.c ****         error_mgr.state = new_state;
 1564              		.loc 1 423 9 view .LVU375
 423:Core/Src/error_manager.c ****         error_mgr.state = new_state;
 1565              		.loc 1 423 35 is_stmt 0 view .LVU376
 1566 0050 0E4B     		ldr	r3, .L165+4
 1567 0052 197A     		ldrb	r1, [r3, #8]	@ zero_extendqisi2
 423:Core/Src/error_manager.c ****         error_mgr.state = new_state;
 1568              		.loc 1 423 24 view .LVU377
 1569 0054 0E4A     		ldr	r2, .L165+8
 1570 0056 1170     		strb	r1, [r2]
 424:Core/Src/error_manager.c ****         HandleStateEntry(new_state);
 1571              		.loc 1 424 9 is_stmt 1 view .LVU378
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s 			page 43


 424:Core/Src/error_manager.c ****         HandleStateEntry(new_state);
 1572              		.loc 1 424 25 is_stmt 0 view .LVU379
 1573 0058 1C72     		strb	r4, [r3, #8]
 425:Core/Src/error_manager.c ****         
 1574              		.loc 1 425 9 is_stmt 1 view .LVU380
 1575 005a 2046     		mov	r0, r4
 1576 005c FFF7FEFF 		bl	HandleStateEntry
 1577              	.LVL149:
 427:Core/Src/error_manager.c ****         osMutexRelease(error_mutex);
 1578              		.loc 1 427 9 view .LVU381
 428:Core/Src/error_manager.c ****     }
 1579              		.loc 1 428 9 view .LVU382
 1580 0060 094B     		ldr	r3, .L165
 1581 0062 1868     		ldr	r0, [r3]
 1582 0064 FFF7FEFF 		bl	osMutexRelease
 1583              	.LVL150:
 1584 0068 0BE0     		b	.L157
 1585              	.LVL151:
 1586              	.L163:
 402:Core/Src/error_manager.c ****             return false;
 1587              		.loc 1 402 13 view .LVU383
 1588 006a 074B     		ldr	r3, .L165
 1589 006c 1868     		ldr	r0, [r3]
 1590 006e FFF7FEFF 		bl	osMutexRelease
 1591              	.LVL152:
 403:Core/Src/error_manager.c ****         }
 1592              		.loc 1 403 13 view .LVU384
 403:Core/Src/error_manager.c ****         }
 1593              		.loc 1 403 20 is_stmt 0 view .LVU385
 1594 0072 06E0     		b	.L157
 1595              	.L164:
 410:Core/Src/error_manager.c ****                 return false;
 1596              		.loc 1 410 17 is_stmt 1 view .LVU386
 1597 0074 044B     		ldr	r3, .L165
 1598 0076 1868     		ldr	r0, [r3]
 1599 0078 FFF7FEFF 		bl	osMutexRelease
 1600              	.LVL153:
 411:Core/Src/error_manager.c ****             }
 1601              		.loc 1 411 17 view .LVU387
 411:Core/Src/error_manager.c ****             }
 1602              		.loc 1 411 24 is_stmt 0 view .LVU388
 1603 007c 0026     		movs	r6, #0
 1604 007e 00E0     		b	.L157
 1605              	.L161:
 397:Core/Src/error_manager.c ****     
 1606              		.loc 1 397 10 view .LVU389
 1607 0080 0026     		movs	r6, #0
 1608              	.LVL154:
 1609              	.L157:
 432:Core/Src/error_manager.c **** 
 1610              		.loc 1 432 1 view .LVU390
 1611 0082 3046     		mov	r0, r6
 1612 0084 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1613              	.LVL155:
 1614              	.L166:
 432:Core/Src/error_manager.c **** 
 1615              		.loc 1 432 1 view .LVU391
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s 			page 44


 1616 0086 00BF     		.align	2
 1617              	.L165:
 1618 0088 00000000 		.word	error_mutex
 1619 008c 00000000 		.word	error_mgr
 1620 0090 00000000 		.word	previous_state
 1621              		.cfi_endproc
 1622              	.LFE307:
 1624              		.section	.text.MasterStateManagerTask,"ax",%progbits
 1625              		.align	1
 1626              		.global	MasterStateManagerTask
 1627              		.syntax unified
 1628              		.thumb
 1629              		.thumb_func
 1631              	MasterStateManagerTask:
 1632              	.LFB312:
 537:Core/Src/error_manager.c **** 
 538:Core/Src/error_manager.c **** /**
 539:Core/Src/error_manager.c ****   * @brief  Master state manager task - monitors faults and manages state machine
 540:Core/Src/error_manager.c ****   * @param  argument: Not used
 541:Core/Src/error_manager.c ****   * @retval None
 542:Core/Src/error_manager.c ****   */
 543:Core/Src/error_manager.c **** void MasterStateManagerTask(void *argument)
 544:Core/Src/error_manager.c **** {
 1633              		.loc 1 544 1 is_stmt 1 view -0
 1634              		.cfi_startproc
 1635              		@ Volatile: function does not return.
 1636              		@ args = 0, pretend = 0, frame = 0
 1637              		@ frame_needed = 0, uses_anonymous_args = 0
 1638              	.LVL156:
 1639              		.loc 1 544 1 is_stmt 0 view .LVU393
 1640 0000 08B5     		push	{r3, lr}
 1641              		.cfi_def_cfa_offset 8
 1642              		.cfi_offset 3, -8
 1643              		.cfi_offset 14, -4
 1644              	.LVL157:
 1645              	.L168:
 545:Core/Src/error_manager.c ****     /* Infinite loop */
 546:Core/Src/error_manager.c ****     for(;;)
 1646              		.loc 1 546 5 is_stmt 1 view .LVU394
 547:Core/Src/error_manager.c ****     {
 548:Core/Src/error_manager.c ****         // Process the state machine
 549:Core/Src/error_manager.c ****         ProcessStateMachine();
 1647              		.loc 1 549 9 view .LVU395
 1648 0002 FFF7FEFF 		bl	ProcessStateMachine
 1649              	.LVL158:
 550:Core/Src/error_manager.c ****         
 551:Core/Src/error_manager.c ****         // Run at configured period
 552:Core/Src/error_manager.c ****         osDelay(MASTER_STATE_TASK_PERIOD_MS);
 1650              		.loc 1 552 9 discriminator 1 view .LVU396
 1651 0006 6420     		movs	r0, #100
 1652 0008 FFF7FEFF 		bl	osDelay
 1653              	.LVL159:
 546:Core/Src/error_manager.c ****     {
 1654              		.loc 1 546 5 view .LVU397
 1655 000c F9E7     		b	.L168
 1656              		.cfi_endproc
 1657              	.LFE312:
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s 			page 45


 1659              		.section	.bss.byte3_rotation.0,"aw",%nobits
 1662              	byte3_rotation.0:
 1663 0000 00       		.space	1
 1664              		.section	.bss.byte2_rotation.1,"aw",%nobits
 1667              	byte2_rotation.1:
 1668 0000 00       		.space	1
 1669              		.section	.bss.byte1_rotation.2,"aw",%nobits
 1672              	byte1_rotation.2:
 1673 0000 00       		.space	1
 1674              		.section	.bss.byte0_rotation.3,"aw",%nobits
 1677              	byte0_rotation.3:
 1678 0000 00       		.space	1
 1679              		.section	.bss.previous_state,"aw",%nobits
 1682              	previous_state:
 1683 0000 00       		.space	1
 1684              		.section	.bss.fault_timestamp,"aw",%nobits
 1685              		.align	2
 1688              	fault_timestamp:
 1689 0000 00000000 		.space	4
 1690              		.section	.rodata.str1.4,"aMS",%progbits,1
 1691              		.align	2
 1692              	.LC0:
 1693 0000 4572726F 		.ascii	"ErrorMutex\000"
 1693      724D7574 
 1693      657800
 1694              		.section	.rodata.error_mutex_attributes,"a"
 1695              		.align	2
 1698              	error_mutex_attributes:
 1699 0000 00000000 		.word	.LC0
 1700 0004 00000000 		.space	12
 1700      00000000 
 1700      00000000 
 1701              		.section	.bss.error_mutex,"aw",%nobits
 1702              		.align	2
 1705              	error_mutex:
 1706 0000 00000000 		.space	4
 1707              		.section	.bss.error_mgr,"aw",%nobits
 1708              		.align	2
 1711              	error_mgr:
 1712 0000 00000000 		.space	20
 1712      00000000 
 1712      00000000 
 1712      00000000 
 1712      00000000 
 1713              		.text
 1714              	.Letext0:
 1715              		.file 2 "C:/Users/Ali/AppData/Roaming/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tool
 1716              		.file 3 "C:/Users/Ali/AppData/Roaming/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tool
 1717              		.file 4 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 1718              		.file 5 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h"
 1719              		.file 6 "Core/Inc/error_manager.h"
 1720              		.file 7 "C:/Users/Ali/AppData/Roaming/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tool
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s 			page 46


DEFINED SYMBOLS
                            *ABS*:00000000 error_manager.c
C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s:21     .text.RotateByteBits:00000000 $t
C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s:26     .text.RotateByteBits:00000000 RotateByteBits
C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s:197    .text.HandleStateExit:00000000 $t
C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s:202    .text.HandleStateExit:00000000 HandleStateExit
C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s:228    .text.HandleStateExit:00000010 $d
C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s:1688   .bss.fault_timestamp:00000000 fault_timestamp
C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s:233    .text.HandleStateEntry:00000000 $t
C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s:238    .text.HandleStateEntry:00000000 HandleStateEntry
C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s:279    .text.HandleStateEntry:0000001c $d
C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s:1711   .bss.error_mgr:00000000 error_mgr
C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s:285    .text.CheckFaultConditions:00000000 $t
C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s:290    .text.CheckFaultConditions:00000000 CheckFaultConditions
C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s:388    .text.CheckFaultConditions:0000005c $d
C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s:1682   .bss.previous_state:00000000 previous_state
C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s:396    .text.ProcessStateMachine:00000000 $t
C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s:401    .text.ProcessStateMachine:00000000 ProcessStateMachine
C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s:437    .text.ProcessStateMachine:00000020 $d
C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s:1705   .bss.error_mutex:00000000 error_mutex
C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s:442    .text.ErrorMgr_Init:00000000 $t
C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s:448    .text.ErrorMgr_Init:00000000 ErrorMgr_Init
C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s:498    .text.ErrorMgr_Init:0000002c $d
C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s:1698   .rodata.error_mutex_attributes:00000000 error_mutex_attributes
C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s:505    .text.ErrorMgr_SetError:00000000 $t
C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s:511    .text.ErrorMgr_SetError:00000000 ErrorMgr_SetError
C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s:581    .text.ErrorMgr_SetError:00000040 $d
C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s:588    .text.ErrorMgr_ClearError:00000000 $t
C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s:594    .text.ErrorMgr_ClearError:00000000 ErrorMgr_ClearError
C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s:704    .text.ErrorMgr_ClearError:00000064 $d
C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s:711    .text.ErrorMgr_SetWarning:00000000 $t
C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s:717    .text.ErrorMgr_SetWarning:00000000 ErrorMgr_SetWarning
C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s:763    .text.ErrorMgr_SetWarning:00000028 $d
C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s:769    .text.ErrorMgr_ClearWarning:00000000 $t
C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s:775    .text.ErrorMgr_ClearWarning:00000000 ErrorMgr_ClearWarning
C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s:821    .text.ErrorMgr_ClearWarning:00000028 $d
C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s:827    .text.ErrorMgr_GetErrors:00000000 $t
C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s:833    .text.ErrorMgr_GetErrors:00000000 ErrorMgr_GetErrors
C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s:878    .text.ErrorMgr_GetErrors:00000024 $d
C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s:884    .text.ErrorMgr_GetWarnings:00000000 $t
C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s:890    .text.ErrorMgr_GetWarnings:00000000 ErrorMgr_GetWarnings
C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s:935    .text.ErrorMgr_GetWarnings:00000024 $d
C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s:941    .text.ErrorMgr_HasErrors:00000000 $t
C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s:947    .text.ErrorMgr_HasErrors:00000000 ErrorMgr_HasErrors
C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s:970    .text.ErrorMgr_HasWarnings:00000000 $t
C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s:976    .text.ErrorMgr_HasWarnings:00000000 ErrorMgr_HasWarnings
C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s:999    .text.ErrorMgr_SetState:00000000 $t
C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s:1005   .text.ErrorMgr_SetState:00000000 ErrorMgr_SetState
C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s:1062   .text.ErrorMgr_SetState:00000034 $d
C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s:1068   .text.ErrorMgr_GetState:00000000 $t
C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s:1074   .text.ErrorMgr_GetState:00000000 ErrorMgr_GetState
C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s:1119   .text.ErrorMgr_GetState:00000024 $d
C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s:1125   .text.ErrorMgr_GetStatus:00000000 $t
C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s:1131   .text.ErrorMgr_GetStatus:00000000 ErrorMgr_GetStatus
C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s:1245   .text.ErrorMgr_GetStatus:0000006c $d
C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s:1677   .bss.byte0_rotation.3:00000000 byte0_rotation.3
C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s:1672   .bss.byte1_rotation.2:00000000 byte1_rotation.2
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s 			page 47


C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s:1667   .bss.byte2_rotation.1:00000000 byte2_rotation.1
C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s:1662   .bss.byte3_rotation.0:00000000 byte3_rotation.0
C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s:1256   .text.ErrorMgr_UpdateUptime:00000000 $t
C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s:1262   .text.ErrorMgr_UpdateUptime:00000000 ErrorMgr_UpdateUptime
C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s:1302   .text.ErrorMgr_UpdateUptime:00000024 $d
C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s:1308   .text.ErrorMgr_IsValidTransition:00000000 $t
C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s:1314   .text.ErrorMgr_IsValidTransition:00000000 ErrorMgr_IsValidTransition
C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s:1331   .text.ErrorMgr_IsValidTransition:0000000c $d
C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s:1476   .text.ErrorMgr_RequestStateTransition:00000000 $t
C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s:1482   .text.ErrorMgr_RequestStateTransition:00000000 ErrorMgr_RequestStateTransition
C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s:1618   .text.ErrorMgr_RequestStateTransition:00000088 $d
C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s:1625   .text.MasterStateManagerTask:00000000 $t
C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s:1631   .text.MasterStateManagerTask:00000000 MasterStateManagerTask
C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s:1663   .bss.byte3_rotation.0:00000000 $d
C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s:1668   .bss.byte2_rotation.1:00000000 $d
C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s:1673   .bss.byte1_rotation.2:00000000 $d
C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s:1678   .bss.byte0_rotation.3:00000000 $d
C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s:1683   .bss.previous_state:00000000 $d
C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s:1685   .bss.fault_timestamp:00000000 $d
C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s:1691   .rodata.str1.4:00000000 $d
C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s:1695   .rodata.error_mutex_attributes:00000000 $d
C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s:1702   .bss.error_mutex:00000000 $d
C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s:1708   .bss.error_mgr:00000000 $d
C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s:1338   .text.ErrorMgr_IsValidTransition:00000013 $d
C:\Users\Ali\AppData\Local\Temp\ccMfBvbz.s:1338   .text.ErrorMgr_IsValidTransition:00000014 $t

UNDEFINED SYMBOLS
osKernelGetTickCount
osMutexAcquire
osMutexRelease
osMutexNew
osDelay
