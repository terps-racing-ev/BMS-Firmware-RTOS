ARM GAS  C:\Users\Ali\AppData\Local\Temp\cc845hNo.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32l4xx_it.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/stm32l4xx_it.c"
  20              		.section	.text.NMI_Handler,"ax",%progbits
  21              		.align	1
  22              		.global	NMI_Handler
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	NMI_Handler:
  28              	.LFB288:
   1:Core/Src/stm32l4xx_it.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32l4xx_it.c **** /**
   3:Core/Src/stm32l4xx_it.c ****   ******************************************************************************
   4:Core/Src/stm32l4xx_it.c ****   * @file    stm32l4xx_it.c
   5:Core/Src/stm32l4xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Core/Src/stm32l4xx_it.c ****   ******************************************************************************
   7:Core/Src/stm32l4xx_it.c ****   * @attention
   8:Core/Src/stm32l4xx_it.c ****   *
   9:Core/Src/stm32l4xx_it.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/stm32l4xx_it.c ****   * All rights reserved.
  11:Core/Src/stm32l4xx_it.c ****   *
  12:Core/Src/stm32l4xx_it.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/stm32l4xx_it.c ****   * in the root directory of this software component.
  14:Core/Src/stm32l4xx_it.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/stm32l4xx_it.c ****   *
  16:Core/Src/stm32l4xx_it.c ****   ******************************************************************************
  17:Core/Src/stm32l4xx_it.c ****   */
  18:Core/Src/stm32l4xx_it.c **** /* USER CODE END Header */
  19:Core/Src/stm32l4xx_it.c **** 
  20:Core/Src/stm32l4xx_it.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/stm32l4xx_it.c **** #include "main.h"
  22:Core/Src/stm32l4xx_it.c **** #include "stm32l4xx_it.h"
  23:Core/Src/stm32l4xx_it.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/stm32l4xx_it.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/stm32l4xx_it.c **** /* USER CODE END Includes */
  26:Core/Src/stm32l4xx_it.c **** 
  27:Core/Src/stm32l4xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/stm32l4xx_it.c **** /* USER CODE BEGIN TD */
  29:Core/Src/stm32l4xx_it.c **** 
  30:Core/Src/stm32l4xx_it.c **** /* USER CODE END TD */
ARM GAS  C:\Users\Ali\AppData\Local\Temp\cc845hNo.s 			page 2


  31:Core/Src/stm32l4xx_it.c **** 
  32:Core/Src/stm32l4xx_it.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/stm32l4xx_it.c **** /* USER CODE BEGIN PD */
  34:Core/Src/stm32l4xx_it.c **** 
  35:Core/Src/stm32l4xx_it.c **** /* USER CODE END PD */
  36:Core/Src/stm32l4xx_it.c **** 
  37:Core/Src/stm32l4xx_it.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/stm32l4xx_it.c **** /* USER CODE BEGIN PM */
  39:Core/Src/stm32l4xx_it.c **** 
  40:Core/Src/stm32l4xx_it.c **** /* USER CODE END PM */
  41:Core/Src/stm32l4xx_it.c **** 
  42:Core/Src/stm32l4xx_it.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/stm32l4xx_it.c **** /* USER CODE BEGIN PV */
  44:Core/Src/stm32l4xx_it.c **** 
  45:Core/Src/stm32l4xx_it.c **** /* USER CODE END PV */
  46:Core/Src/stm32l4xx_it.c **** 
  47:Core/Src/stm32l4xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  48:Core/Src/stm32l4xx_it.c **** /* USER CODE BEGIN PFP */
  49:Core/Src/stm32l4xx_it.c **** 
  50:Core/Src/stm32l4xx_it.c **** /* USER CODE END PFP */
  51:Core/Src/stm32l4xx_it.c **** 
  52:Core/Src/stm32l4xx_it.c **** /* Private user code ---------------------------------------------------------*/
  53:Core/Src/stm32l4xx_it.c **** /* USER CODE BEGIN 0 */
  54:Core/Src/stm32l4xx_it.c **** 
  55:Core/Src/stm32l4xx_it.c **** /* USER CODE END 0 */
  56:Core/Src/stm32l4xx_it.c **** 
  57:Core/Src/stm32l4xx_it.c **** /* External variables --------------------------------------------------------*/
  58:Core/Src/stm32l4xx_it.c **** extern TIM_HandleTypeDef htim6;
  59:Core/Src/stm32l4xx_it.c **** extern CAN_HandleTypeDef hcan1;
  60:Core/Src/stm32l4xx_it.c **** 
  61:Core/Src/stm32l4xx_it.c **** /* USER CODE BEGIN EV */
  62:Core/Src/stm32l4xx_it.c **** 
  63:Core/Src/stm32l4xx_it.c **** /* USER CODE END EV */
  64:Core/Src/stm32l4xx_it.c **** 
  65:Core/Src/stm32l4xx_it.c **** /******************************************************************************/
  66:Core/Src/stm32l4xx_it.c **** /*           Cortex-M4 Processor Interruption and Exception Handlers          */
  67:Core/Src/stm32l4xx_it.c **** /******************************************************************************/
  68:Core/Src/stm32l4xx_it.c **** /**
  69:Core/Src/stm32l4xx_it.c ****   * @brief This function handles Non maskable interrupt.
  70:Core/Src/stm32l4xx_it.c ****   */
  71:Core/Src/stm32l4xx_it.c **** void NMI_Handler(void)
  72:Core/Src/stm32l4xx_it.c **** {
  29              		.loc 1 72 1 view -0
  30              		.cfi_startproc
  31              		@ Volatile: function does not return.
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              	.L2:
  73:Core/Src/stm32l4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  74:Core/Src/stm32l4xx_it.c **** 
  75:Core/Src/stm32l4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  76:Core/Src/stm32l4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  77:Core/Src/stm32l4xx_it.c ****    while (1)
  36              		.loc 1 77 4 view .LVU1
  78:Core/Src/stm32l4xx_it.c ****   {
  79:Core/Src/stm32l4xx_it.c ****   }
ARM GAS  C:\Users\Ali\AppData\Local\Temp\cc845hNo.s 			page 3


  37              		.loc 1 79 3 view .LVU2
  77:Core/Src/stm32l4xx_it.c ****   {
  38              		.loc 1 77 10 view .LVU3
  39 0000 FEE7     		b	.L2
  40              		.cfi_endproc
  41              	.LFE288:
  43              		.section	.text.HardFault_Handler,"ax",%progbits
  44              		.align	1
  45              		.global	HardFault_Handler
  46              		.syntax unified
  47              		.thumb
  48              		.thumb_func
  50              	HardFault_Handler:
  51              	.LFB289:
  80:Core/Src/stm32l4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  81:Core/Src/stm32l4xx_it.c **** }
  82:Core/Src/stm32l4xx_it.c **** 
  83:Core/Src/stm32l4xx_it.c **** /**
  84:Core/Src/stm32l4xx_it.c ****   * @brief This function handles Hard fault interrupt.
  85:Core/Src/stm32l4xx_it.c ****   */
  86:Core/Src/stm32l4xx_it.c **** void HardFault_Handler(void)
  87:Core/Src/stm32l4xx_it.c **** {
  52              		.loc 1 87 1 view -0
  53              		.cfi_startproc
  54              		@ Volatile: function does not return.
  55              		@ args = 0, pretend = 0, frame = 0
  56              		@ frame_needed = 0, uses_anonymous_args = 0
  57              		@ link register save eliminated.
  58              	.L4:
  88:Core/Src/stm32l4xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  89:Core/Src/stm32l4xx_it.c **** 
  90:Core/Src/stm32l4xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  91:Core/Src/stm32l4xx_it.c ****   while (1)
  59              		.loc 1 91 3 view .LVU5
  92:Core/Src/stm32l4xx_it.c ****   {
  93:Core/Src/stm32l4xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  94:Core/Src/stm32l4xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  95:Core/Src/stm32l4xx_it.c ****   }
  60              		.loc 1 95 3 view .LVU6
  91:Core/Src/stm32l4xx_it.c ****   {
  61              		.loc 1 91 9 view .LVU7
  62 0000 FEE7     		b	.L4
  63              		.cfi_endproc
  64              	.LFE289:
  66              		.section	.text.MemManage_Handler,"ax",%progbits
  67              		.align	1
  68              		.global	MemManage_Handler
  69              		.syntax unified
  70              		.thumb
  71              		.thumb_func
  73              	MemManage_Handler:
  74              	.LFB290:
  96:Core/Src/stm32l4xx_it.c **** }
  97:Core/Src/stm32l4xx_it.c **** 
  98:Core/Src/stm32l4xx_it.c **** /**
  99:Core/Src/stm32l4xx_it.c ****   * @brief This function handles Memory management fault.
 100:Core/Src/stm32l4xx_it.c ****   */
ARM GAS  C:\Users\Ali\AppData\Local\Temp\cc845hNo.s 			page 4


 101:Core/Src/stm32l4xx_it.c **** void MemManage_Handler(void)
 102:Core/Src/stm32l4xx_it.c **** {
  75              		.loc 1 102 1 view -0
  76              		.cfi_startproc
  77              		@ Volatile: function does not return.
  78              		@ args = 0, pretend = 0, frame = 0
  79              		@ frame_needed = 0, uses_anonymous_args = 0
  80              		@ link register save eliminated.
  81              	.L6:
 103:Core/Src/stm32l4xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 104:Core/Src/stm32l4xx_it.c **** 
 105:Core/Src/stm32l4xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 106:Core/Src/stm32l4xx_it.c ****   while (1)
  82              		.loc 1 106 3 view .LVU9
 107:Core/Src/stm32l4xx_it.c ****   {
 108:Core/Src/stm32l4xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 109:Core/Src/stm32l4xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 110:Core/Src/stm32l4xx_it.c ****   }
  83              		.loc 1 110 3 view .LVU10
 106:Core/Src/stm32l4xx_it.c ****   {
  84              		.loc 1 106 9 view .LVU11
  85 0000 FEE7     		b	.L6
  86              		.cfi_endproc
  87              	.LFE290:
  89              		.section	.text.BusFault_Handler,"ax",%progbits
  90              		.align	1
  91              		.global	BusFault_Handler
  92              		.syntax unified
  93              		.thumb
  94              		.thumb_func
  96              	BusFault_Handler:
  97              	.LFB291:
 111:Core/Src/stm32l4xx_it.c **** }
 112:Core/Src/stm32l4xx_it.c **** 
 113:Core/Src/stm32l4xx_it.c **** /**
 114:Core/Src/stm32l4xx_it.c ****   * @brief This function handles Prefetch fault, memory access fault.
 115:Core/Src/stm32l4xx_it.c ****   */
 116:Core/Src/stm32l4xx_it.c **** void BusFault_Handler(void)
 117:Core/Src/stm32l4xx_it.c **** {
  98              		.loc 1 117 1 view -0
  99              		.cfi_startproc
 100              		@ Volatile: function does not return.
 101              		@ args = 0, pretend = 0, frame = 0
 102              		@ frame_needed = 0, uses_anonymous_args = 0
 103              		@ link register save eliminated.
 104              	.L8:
 118:Core/Src/stm32l4xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 119:Core/Src/stm32l4xx_it.c **** 
 120:Core/Src/stm32l4xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 121:Core/Src/stm32l4xx_it.c ****   while (1)
 105              		.loc 1 121 3 view .LVU13
 122:Core/Src/stm32l4xx_it.c ****   {
 123:Core/Src/stm32l4xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 124:Core/Src/stm32l4xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 125:Core/Src/stm32l4xx_it.c ****   }
 106              		.loc 1 125 3 view .LVU14
 121:Core/Src/stm32l4xx_it.c ****   {
ARM GAS  C:\Users\Ali\AppData\Local\Temp\cc845hNo.s 			page 5


 107              		.loc 1 121 9 view .LVU15
 108 0000 FEE7     		b	.L8
 109              		.cfi_endproc
 110              	.LFE291:
 112              		.section	.text.UsageFault_Handler,"ax",%progbits
 113              		.align	1
 114              		.global	UsageFault_Handler
 115              		.syntax unified
 116              		.thumb
 117              		.thumb_func
 119              	UsageFault_Handler:
 120              	.LFB292:
 126:Core/Src/stm32l4xx_it.c **** }
 127:Core/Src/stm32l4xx_it.c **** 
 128:Core/Src/stm32l4xx_it.c **** /**
 129:Core/Src/stm32l4xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 130:Core/Src/stm32l4xx_it.c ****   */
 131:Core/Src/stm32l4xx_it.c **** void UsageFault_Handler(void)
 132:Core/Src/stm32l4xx_it.c **** {
 121              		.loc 1 132 1 view -0
 122              		.cfi_startproc
 123              		@ Volatile: function does not return.
 124              		@ args = 0, pretend = 0, frame = 0
 125              		@ frame_needed = 0, uses_anonymous_args = 0
 126              		@ link register save eliminated.
 127              	.L10:
 133:Core/Src/stm32l4xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 134:Core/Src/stm32l4xx_it.c **** 
 135:Core/Src/stm32l4xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 136:Core/Src/stm32l4xx_it.c ****   while (1)
 128              		.loc 1 136 3 view .LVU17
 137:Core/Src/stm32l4xx_it.c ****   {
 138:Core/Src/stm32l4xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 139:Core/Src/stm32l4xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 140:Core/Src/stm32l4xx_it.c ****   }
 129              		.loc 1 140 3 view .LVU18
 136:Core/Src/stm32l4xx_it.c ****   {
 130              		.loc 1 136 9 view .LVU19
 131 0000 FEE7     		b	.L10
 132              		.cfi_endproc
 133              	.LFE292:
 135              		.section	.text.DebugMon_Handler,"ax",%progbits
 136              		.align	1
 137              		.global	DebugMon_Handler
 138              		.syntax unified
 139              		.thumb
 140              		.thumb_func
 142              	DebugMon_Handler:
 143              	.LFB293:
 141:Core/Src/stm32l4xx_it.c **** }
 142:Core/Src/stm32l4xx_it.c **** 
 143:Core/Src/stm32l4xx_it.c **** /**
 144:Core/Src/stm32l4xx_it.c ****   * @brief This function handles Debug monitor.
 145:Core/Src/stm32l4xx_it.c ****   */
 146:Core/Src/stm32l4xx_it.c **** void DebugMon_Handler(void)
 147:Core/Src/stm32l4xx_it.c **** {
 144              		.loc 1 147 1 view -0
ARM GAS  C:\Users\Ali\AppData\Local\Temp\cc845hNo.s 			page 6


 145              		.cfi_startproc
 146              		@ args = 0, pretend = 0, frame = 0
 147              		@ frame_needed = 0, uses_anonymous_args = 0
 148              		@ link register save eliminated.
 148:Core/Src/stm32l4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 149:Core/Src/stm32l4xx_it.c **** 
 150:Core/Src/stm32l4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 151:Core/Src/stm32l4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 152:Core/Src/stm32l4xx_it.c **** 
 153:Core/Src/stm32l4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 154:Core/Src/stm32l4xx_it.c **** }
 149              		.loc 1 154 1 view .LVU21
 150 0000 7047     		bx	lr
 151              		.cfi_endproc
 152              	.LFE293:
 154              		.section	.text.CAN1_RX0_IRQHandler,"ax",%progbits
 155              		.align	1
 156              		.global	CAN1_RX0_IRQHandler
 157              		.syntax unified
 158              		.thumb
 159              		.thumb_func
 161              	CAN1_RX0_IRQHandler:
 162              	.LFB294:
 155:Core/Src/stm32l4xx_it.c **** 
 156:Core/Src/stm32l4xx_it.c **** /******************************************************************************/
 157:Core/Src/stm32l4xx_it.c **** /* STM32L4xx Peripheral Interrupt Handlers                                    */
 158:Core/Src/stm32l4xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 159:Core/Src/stm32l4xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 160:Core/Src/stm32l4xx_it.c **** /* please refer to the startup file (startup_stm32l4xx.s).                    */
 161:Core/Src/stm32l4xx_it.c **** /******************************************************************************/
 162:Core/Src/stm32l4xx_it.c **** 
 163:Core/Src/stm32l4xx_it.c **** /**
 164:Core/Src/stm32l4xx_it.c ****   * @brief This function handles CAN1 RX0 interrupt.
 165:Core/Src/stm32l4xx_it.c ****   */
 166:Core/Src/stm32l4xx_it.c **** void CAN1_RX0_IRQHandler(void)
 167:Core/Src/stm32l4xx_it.c **** {
 163              		.loc 1 167 1 view -0
 164              		.cfi_startproc
 165              		@ args = 0, pretend = 0, frame = 0
 166              		@ frame_needed = 0, uses_anonymous_args = 0
 167 0000 08B5     		push	{r3, lr}
 168              		.cfi_def_cfa_offset 8
 169              		.cfi_offset 3, -8
 170              		.cfi_offset 14, -4
 168:Core/Src/stm32l4xx_it.c ****   /* USER CODE BEGIN CAN1_RX0_IRQn 0 */
 169:Core/Src/stm32l4xx_it.c **** 
 170:Core/Src/stm32l4xx_it.c ****   /* USER CODE END CAN1_RX0_IRQn 0 */
 171:Core/Src/stm32l4xx_it.c ****   HAL_CAN_IRQHandler(&hcan1);
 171              		.loc 1 171 3 view .LVU23
 172 0002 0248     		ldr	r0, .L14
 173 0004 FFF7FEFF 		bl	HAL_CAN_IRQHandler
 174              	.LVL0:
 172:Core/Src/stm32l4xx_it.c ****   /* USER CODE BEGIN CAN1_RX0_IRQn 1 */
 173:Core/Src/stm32l4xx_it.c **** 
 174:Core/Src/stm32l4xx_it.c ****   /* USER CODE END CAN1_RX0_IRQn 1 */
 175:Core/Src/stm32l4xx_it.c **** }
 175              		.loc 1 175 1 is_stmt 0 view .LVU24
ARM GAS  C:\Users\Ali\AppData\Local\Temp\cc845hNo.s 			page 7


 176 0008 08BD     		pop	{r3, pc}
 177              	.L15:
 178 000a 00BF     		.align	2
 179              	.L14:
 180 000c 00000000 		.word	hcan1
 181              		.cfi_endproc
 182              	.LFE294:
 184              		.section	.text.CAN1_RX1_IRQHandler,"ax",%progbits
 185              		.align	1
 186              		.global	CAN1_RX1_IRQHandler
 187              		.syntax unified
 188              		.thumb
 189              		.thumb_func
 191              	CAN1_RX1_IRQHandler:
 192              	.LFB295:
 176:Core/Src/stm32l4xx_it.c **** 
 177:Core/Src/stm32l4xx_it.c **** /**
 178:Core/Src/stm32l4xx_it.c ****   * @brief This function handles CAN1 RX1 interrupt.
 179:Core/Src/stm32l4xx_it.c ****   */
 180:Core/Src/stm32l4xx_it.c **** void CAN1_RX1_IRQHandler(void)
 181:Core/Src/stm32l4xx_it.c **** {
 193              		.loc 1 181 1 is_stmt 1 view -0
 194              		.cfi_startproc
 195              		@ args = 0, pretend = 0, frame = 0
 196              		@ frame_needed = 0, uses_anonymous_args = 0
 197 0000 08B5     		push	{r3, lr}
 198              		.cfi_def_cfa_offset 8
 199              		.cfi_offset 3, -8
 200              		.cfi_offset 14, -4
 182:Core/Src/stm32l4xx_it.c ****   /* USER CODE BEGIN CAN1_RX1_IRQn 0 */
 183:Core/Src/stm32l4xx_it.c **** 
 184:Core/Src/stm32l4xx_it.c ****   /* USER CODE END CAN1_RX1_IRQn 0 */
 185:Core/Src/stm32l4xx_it.c ****   HAL_CAN_IRQHandler(&hcan1);
 201              		.loc 1 185 3 view .LVU26
 202 0002 0248     		ldr	r0, .L18
 203 0004 FFF7FEFF 		bl	HAL_CAN_IRQHandler
 204              	.LVL1:
 186:Core/Src/stm32l4xx_it.c ****   /* USER CODE BEGIN CAN1_RX1_IRQn 1 */
 187:Core/Src/stm32l4xx_it.c **** 
 188:Core/Src/stm32l4xx_it.c ****   /* USER CODE END CAN1_RX1_IRQn 1 */
 189:Core/Src/stm32l4xx_it.c **** }
 205              		.loc 1 189 1 is_stmt 0 view .LVU27
 206 0008 08BD     		pop	{r3, pc}
 207              	.L19:
 208 000a 00BF     		.align	2
 209              	.L18:
 210 000c 00000000 		.word	hcan1
 211              		.cfi_endproc
 212              	.LFE295:
 214              		.section	.text.CAN1_TX_IRQHandler,"ax",%progbits
 215              		.align	1
 216              		.global	CAN1_TX_IRQHandler
 217              		.syntax unified
 218              		.thumb
 219              		.thumb_func
 221              	CAN1_TX_IRQHandler:
 222              	.LFB296:
ARM GAS  C:\Users\Ali\AppData\Local\Temp\cc845hNo.s 			page 8


 190:Core/Src/stm32l4xx_it.c **** 
 191:Core/Src/stm32l4xx_it.c **** /**
 192:Core/Src/stm32l4xx_it.c ****   * @brief This function handles CAN1 TX interrupt.
 193:Core/Src/stm32l4xx_it.c ****   */
 194:Core/Src/stm32l4xx_it.c **** void CAN1_TX_IRQHandler(void)
 195:Core/Src/stm32l4xx_it.c **** {
 223              		.loc 1 195 1 is_stmt 1 view -0
 224              		.cfi_startproc
 225              		@ args = 0, pretend = 0, frame = 0
 226              		@ frame_needed = 0, uses_anonymous_args = 0
 227 0000 08B5     		push	{r3, lr}
 228              		.cfi_def_cfa_offset 8
 229              		.cfi_offset 3, -8
 230              		.cfi_offset 14, -4
 196:Core/Src/stm32l4xx_it.c ****   /* USER CODE BEGIN CAN1_TX_IRQn 0 */
 197:Core/Src/stm32l4xx_it.c **** 
 198:Core/Src/stm32l4xx_it.c ****   /* USER CODE END CAN1_TX_IRQn 0 */
 199:Core/Src/stm32l4xx_it.c ****   HAL_CAN_IRQHandler(&hcan1);
 231              		.loc 1 199 3 view .LVU29
 232 0002 0248     		ldr	r0, .L22
 233 0004 FFF7FEFF 		bl	HAL_CAN_IRQHandler
 234              	.LVL2:
 200:Core/Src/stm32l4xx_it.c ****   /* USER CODE BEGIN CAN1_TX_IRQn 1 */
 201:Core/Src/stm32l4xx_it.c **** 
 202:Core/Src/stm32l4xx_it.c ****   /* USER CODE END CAN1_TX_IRQn 1 */
 203:Core/Src/stm32l4xx_it.c **** }
 235              		.loc 1 203 1 is_stmt 0 view .LVU30
 236 0008 08BD     		pop	{r3, pc}
 237              	.L23:
 238 000a 00BF     		.align	2
 239              	.L22:
 240 000c 00000000 		.word	hcan1
 241              		.cfi_endproc
 242              	.LFE296:
 244              		.section	.text.CAN1_SCE_IRQHandler,"ax",%progbits
 245              		.align	1
 246              		.global	CAN1_SCE_IRQHandler
 247              		.syntax unified
 248              		.thumb
 249              		.thumb_func
 251              	CAN1_SCE_IRQHandler:
 252              	.LFB297:
 204:Core/Src/stm32l4xx_it.c **** 
 205:Core/Src/stm32l4xx_it.c **** /**
 206:Core/Src/stm32l4xx_it.c ****   * @brief This function handles CAN1 SCE interrupt.
 207:Core/Src/stm32l4xx_it.c ****   */
 208:Core/Src/stm32l4xx_it.c **** void CAN1_SCE_IRQHandler(void)
 209:Core/Src/stm32l4xx_it.c **** {
 253              		.loc 1 209 1 is_stmt 1 view -0
 254              		.cfi_startproc
 255              		@ args = 0, pretend = 0, frame = 0
 256              		@ frame_needed = 0, uses_anonymous_args = 0
 257 0000 08B5     		push	{r3, lr}
 258              		.cfi_def_cfa_offset 8
 259              		.cfi_offset 3, -8
 260              		.cfi_offset 14, -4
 210:Core/Src/stm32l4xx_it.c ****   /* USER CODE BEGIN CAN1_SCE_IRQn 0 */
ARM GAS  C:\Users\Ali\AppData\Local\Temp\cc845hNo.s 			page 9


 211:Core/Src/stm32l4xx_it.c **** 
 212:Core/Src/stm32l4xx_it.c ****   /* USER CODE END CAN1_SCE_IRQn 0 */
 213:Core/Src/stm32l4xx_it.c ****   HAL_CAN_IRQHandler(&hcan1);
 261              		.loc 1 213 3 view .LVU32
 262 0002 0248     		ldr	r0, .L26
 263 0004 FFF7FEFF 		bl	HAL_CAN_IRQHandler
 264              	.LVL3:
 214:Core/Src/stm32l4xx_it.c ****   /* USER CODE BEGIN CAN1_SCE_IRQn 1 */
 215:Core/Src/stm32l4xx_it.c **** 
 216:Core/Src/stm32l4xx_it.c ****   /* USER CODE END CAN1_SCE_IRQn 1 */
 217:Core/Src/stm32l4xx_it.c **** }
 265              		.loc 1 217 1 is_stmt 0 view .LVU33
 266 0008 08BD     		pop	{r3, pc}
 267              	.L27:
 268 000a 00BF     		.align	2
 269              	.L26:
 270 000c 00000000 		.word	hcan1
 271              		.cfi_endproc
 272              	.LFE297:
 274              		.section	.text.TIM6_DAC_IRQHandler,"ax",%progbits
 275              		.align	1
 276              		.global	TIM6_DAC_IRQHandler
 277              		.syntax unified
 278              		.thumb
 279              		.thumb_func
 281              	TIM6_DAC_IRQHandler:
 282              	.LFB298:
 218:Core/Src/stm32l4xx_it.c **** 
 219:Core/Src/stm32l4xx_it.c **** /**
 220:Core/Src/stm32l4xx_it.c ****   * @brief This function handles TIM6 global interrupt, DAC channel1 and channel2 underrun error in
 221:Core/Src/stm32l4xx_it.c ****   */
 222:Core/Src/stm32l4xx_it.c **** void TIM6_DAC_IRQHandler(void)
 223:Core/Src/stm32l4xx_it.c **** {
 283              		.loc 1 223 1 is_stmt 1 view -0
 284              		.cfi_startproc
 285              		@ args = 0, pretend = 0, frame = 0
 286              		@ frame_needed = 0, uses_anonymous_args = 0
 287 0000 08B5     		push	{r3, lr}
 288              		.cfi_def_cfa_offset 8
 289              		.cfi_offset 3, -8
 290              		.cfi_offset 14, -4
 224:Core/Src/stm32l4xx_it.c ****   /* USER CODE BEGIN TIM6_DAC_IRQn 0 */
 225:Core/Src/stm32l4xx_it.c **** 
 226:Core/Src/stm32l4xx_it.c ****   /* USER CODE END TIM6_DAC_IRQn 0 */
 227:Core/Src/stm32l4xx_it.c ****   HAL_TIM_IRQHandler(&htim6);
 291              		.loc 1 227 3 view .LVU35
 292 0002 0248     		ldr	r0, .L30
 293 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 294              	.LVL4:
 228:Core/Src/stm32l4xx_it.c ****   /* USER CODE BEGIN TIM6_DAC_IRQn 1 */
 229:Core/Src/stm32l4xx_it.c **** 
 230:Core/Src/stm32l4xx_it.c ****   /* USER CODE END TIM6_DAC_IRQn 1 */
 231:Core/Src/stm32l4xx_it.c **** }
 295              		.loc 1 231 1 is_stmt 0 view .LVU36
 296 0008 08BD     		pop	{r3, pc}
 297              	.L31:
 298 000a 00BF     		.align	2
ARM GAS  C:\Users\Ali\AppData\Local\Temp\cc845hNo.s 			page 10


 299              	.L30:
 300 000c 00000000 		.word	htim6
 301              		.cfi_endproc
 302              	.LFE298:
 304              		.text
 305              	.Letext0:
 306              		.file 2 "C:/Users/Ali/AppData/Roaming/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tool
 307              		.file 3 "C:/Users/Ali/AppData/Roaming/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tool
 308              		.file 4 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l432xx.h"
 309              		.file 5 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l4xx.h"
 310              		.file 6 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 311              		.file 7 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 312              		.file 8 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_can.h"
 313              		.file 9 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_tim.h"
ARM GAS  C:\Users\Ali\AppData\Local\Temp\cc845hNo.s 			page 11


DEFINED SYMBOLS
                            *ABS*:00000000 stm32l4xx_it.c
C:\Users\Ali\AppData\Local\Temp\cc845hNo.s:21     .text.NMI_Handler:00000000 $t
C:\Users\Ali\AppData\Local\Temp\cc845hNo.s:27     .text.NMI_Handler:00000000 NMI_Handler
C:\Users\Ali\AppData\Local\Temp\cc845hNo.s:44     .text.HardFault_Handler:00000000 $t
C:\Users\Ali\AppData\Local\Temp\cc845hNo.s:50     .text.HardFault_Handler:00000000 HardFault_Handler
C:\Users\Ali\AppData\Local\Temp\cc845hNo.s:67     .text.MemManage_Handler:00000000 $t
C:\Users\Ali\AppData\Local\Temp\cc845hNo.s:73     .text.MemManage_Handler:00000000 MemManage_Handler
C:\Users\Ali\AppData\Local\Temp\cc845hNo.s:90     .text.BusFault_Handler:00000000 $t
C:\Users\Ali\AppData\Local\Temp\cc845hNo.s:96     .text.BusFault_Handler:00000000 BusFault_Handler
C:\Users\Ali\AppData\Local\Temp\cc845hNo.s:113    .text.UsageFault_Handler:00000000 $t
C:\Users\Ali\AppData\Local\Temp\cc845hNo.s:119    .text.UsageFault_Handler:00000000 UsageFault_Handler
C:\Users\Ali\AppData\Local\Temp\cc845hNo.s:136    .text.DebugMon_Handler:00000000 $t
C:\Users\Ali\AppData\Local\Temp\cc845hNo.s:142    .text.DebugMon_Handler:00000000 DebugMon_Handler
C:\Users\Ali\AppData\Local\Temp\cc845hNo.s:155    .text.CAN1_RX0_IRQHandler:00000000 $t
C:\Users\Ali\AppData\Local\Temp\cc845hNo.s:161    .text.CAN1_RX0_IRQHandler:00000000 CAN1_RX0_IRQHandler
C:\Users\Ali\AppData\Local\Temp\cc845hNo.s:180    .text.CAN1_RX0_IRQHandler:0000000c $d
C:\Users\Ali\AppData\Local\Temp\cc845hNo.s:185    .text.CAN1_RX1_IRQHandler:00000000 $t
C:\Users\Ali\AppData\Local\Temp\cc845hNo.s:191    .text.CAN1_RX1_IRQHandler:00000000 CAN1_RX1_IRQHandler
C:\Users\Ali\AppData\Local\Temp\cc845hNo.s:210    .text.CAN1_RX1_IRQHandler:0000000c $d
C:\Users\Ali\AppData\Local\Temp\cc845hNo.s:215    .text.CAN1_TX_IRQHandler:00000000 $t
C:\Users\Ali\AppData\Local\Temp\cc845hNo.s:221    .text.CAN1_TX_IRQHandler:00000000 CAN1_TX_IRQHandler
C:\Users\Ali\AppData\Local\Temp\cc845hNo.s:240    .text.CAN1_TX_IRQHandler:0000000c $d
C:\Users\Ali\AppData\Local\Temp\cc845hNo.s:245    .text.CAN1_SCE_IRQHandler:00000000 $t
C:\Users\Ali\AppData\Local\Temp\cc845hNo.s:251    .text.CAN1_SCE_IRQHandler:00000000 CAN1_SCE_IRQHandler
C:\Users\Ali\AppData\Local\Temp\cc845hNo.s:270    .text.CAN1_SCE_IRQHandler:0000000c $d
C:\Users\Ali\AppData\Local\Temp\cc845hNo.s:275    .text.TIM6_DAC_IRQHandler:00000000 $t
C:\Users\Ali\AppData\Local\Temp\cc845hNo.s:281    .text.TIM6_DAC_IRQHandler:00000000 TIM6_DAC_IRQHandler
C:\Users\Ali\AppData\Local\Temp\cc845hNo.s:300    .text.TIM6_DAC_IRQHandler:0000000c $d

UNDEFINED SYMBOLS
HAL_CAN_IRQHandler
hcan1
HAL_TIM_IRQHandler
htim6
