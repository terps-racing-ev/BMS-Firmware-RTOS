ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32l4xx_hal_can.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c"
  20              		.section	.text.HAL_CAN_MspInit,"ax",%progbits
  21              		.align	1
  22              		.weak	HAL_CAN_MspInit
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	HAL_CAN_MspInit:
  28              	.LVL0:
  29              	.LFB290:
   1:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /**
   2:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   ******************************************************************************
   3:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @file    stm32l4xx_hal_can.c
   4:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @author  MCD Application Team
   5:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @brief   CAN HAL module driver.
   6:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *          functionalities of the Controller Area Network (CAN) peripheral:
   8:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *           + Configuration functions
  10:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *           + Control functions
  11:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *           + Interrupts management
  12:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *           + Callbacks functions
  13:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *           + Peripheral State and Error functions
  14:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *
  15:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   ******************************************************************************
  16:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @attention
  17:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *
  18:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * Copyright (c) 2017 STMicroelectronics.
  19:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * All rights reserved.
  20:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *
  21:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * This software is licensed under terms that can be found in the LICENSE file
  22:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * in the root directory of this software component.
  23:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  24:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *
  25:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   ******************************************************************************
  26:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   @verbatim
  27:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   ==============================================================================
  28:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****                         ##### How to use this driver #####
  29:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   ==============================================================================
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 2


  30:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     [..]
  31:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (#) Initialize the CAN low level resources by implementing the
  32:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           HAL_CAN_MspInit():
  33:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****          (++) Enable the CAN interface clock using __HAL_RCC_CANx_CLK_ENABLE()
  34:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****          (++) Configure CAN pins
  35:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****              (+++) Enable the clock for the CAN GPIOs
  36:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****              (+++) Configure CAN pins as alternate function
  37:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****          (++) In case of using interrupts (e.g. HAL_CAN_ActivateNotification())
  38:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****              (+++) Configure the CAN interrupt priority using
  39:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****                    HAL_NVIC_SetPriority()
  40:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****              (+++) Enable the CAN IRQ handler using HAL_NVIC_EnableIRQ()
  41:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****              (+++) In CAN IRQ handler, call HAL_CAN_IRQHandler()
  42:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
  43:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (#) Initialize the CAN peripheral using HAL_CAN_Init() function. This
  44:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           function resorts to HAL_CAN_MspInit() for low-level initialization.
  45:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
  46:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (#) Configure the reception filters using the following configuration
  47:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           functions:
  48:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             (++) HAL_CAN_ConfigFilter()
  49:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
  50:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (#) Start the CAN module using HAL_CAN_Start() function. At this level
  51:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           the node is active on the bus: it receive messages, and can send
  52:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           messages.
  53:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
  54:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (#) To manage messages transmission, the following Tx control functions
  55:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           can be used:
  56:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             (++) HAL_CAN_AddTxMessage() to request transmission of a new
  57:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****                  message.
  58:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             (++) HAL_CAN_AbortTxRequest() to abort transmission of a pending
  59:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****                  message.
  60:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             (++) HAL_CAN_GetTxMailboxesFreeLevel() to get the number of free Tx
  61:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****                  mailboxes.
  62:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             (++) HAL_CAN_IsTxMessagePending() to check if a message is pending
  63:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****                  in a Tx mailbox.
  64:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             (++) HAL_CAN_GetTxTimestamp() to get the timestamp of Tx message
  65:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****                  sent, if time triggered communication mode is enabled.
  66:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
  67:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (#) When a message is received into the CAN Rx FIFOs, it can be retrieved
  68:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           using the HAL_CAN_GetRxMessage() function. The function
  69:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           HAL_CAN_GetRxFifoFillLevel() allows to know how many Rx message are
  70:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           stored in the Rx Fifo.
  71:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
  72:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (#) Calling the HAL_CAN_Stop() function stops the CAN module.
  73:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
  74:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (#) The deinitialization is achieved with HAL_CAN_DeInit() function.
  75:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
  76:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
  77:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       *** Polling mode operation ***
  78:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       ==============================
  79:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     [..]
  80:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (#) Reception:
  81:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             (++) Monitor reception of message using HAL_CAN_GetRxFifoFillLevel()
  82:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****                  until at least one message is received.
  83:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             (++) Then get the message using HAL_CAN_GetRxMessage().
  84:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
  85:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (#) Transmission:
  86:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             (++) Monitor the Tx mailboxes availability until at least one Tx
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 3


  87:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****                  mailbox is free, using HAL_CAN_GetTxMailboxesFreeLevel().
  88:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             (++) Then request transmission of a message using
  89:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****                  HAL_CAN_AddTxMessage().
  90:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
  91:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
  92:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       *** Interrupt mode operation ***
  93:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       ================================
  94:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     [..]
  95:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (#) Notifications are activated using HAL_CAN_ActivateNotification()
  96:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           function. Then, the process can be controlled through the
  97:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           available user callbacks: HAL_CAN_xxxCallback(), using same APIs
  98:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           HAL_CAN_GetRxMessage() and HAL_CAN_AddTxMessage().
  99:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 100:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (#) Notifications can be deactivated using
 101:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           HAL_CAN_DeactivateNotification() function.
 102:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 103:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (#) Special care should be taken for CAN_IT_RX_FIFO0_MSG_PENDING and
 104:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           CAN_IT_RX_FIFO1_MSG_PENDING notifications. These notifications trig
 105:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           the callbacks HAL_CAN_RxFIFO0MsgPendingCallback() and
 106:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           HAL_CAN_RxFIFO1MsgPendingCallback(). User has two possible options
 107:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           here.
 108:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             (++) Directly get the Rx message in the callback, using
 109:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****                  HAL_CAN_GetRxMessage().
 110:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             (++) Or deactivate the notification in the callback without
 111:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****                  getting the Rx message. The Rx message can then be got later
 112:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****                  using HAL_CAN_GetRxMessage(). Once the Rx message have been
 113:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****                  read, the notification can be activated again.
 114:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 115:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 116:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       *** Sleep mode ***
 117:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       ==================
 118:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     [..]
 119:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (#) The CAN peripheral can be put in sleep mode (low power), using
 120:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           HAL_CAN_RequestSleep(). The sleep mode will be entered as soon as the
 121:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           current CAN activity (transmission or reception of a CAN frame) will
 122:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           be completed.
 123:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 124:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (#) A notification can be activated to be informed when the sleep mode
 125:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           will be entered.
 126:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 127:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (#) It can be checked if the sleep mode is entered using
 128:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           HAL_CAN_IsSleepActive().
 129:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           Note that the CAN state (accessible from the API HAL_CAN_GetState())
 130:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           is HAL_CAN_STATE_SLEEP_PENDING as soon as the sleep mode request is
 131:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           submitted (the sleep mode is not yet entered), and become
 132:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           HAL_CAN_STATE_SLEEP_ACTIVE when the sleep mode is effective.
 133:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 134:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (#) The wake-up from sleep mode can be triggered by two ways:
 135:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             (++) Using HAL_CAN_WakeUp(). When returning from this function,
 136:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****                  the sleep mode is exited (if return status is HAL_OK).
 137:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             (++) When a start of Rx CAN frame is detected by the CAN peripheral,
 138:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****                  if automatic wake up mode is enabled.
 139:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 140:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *** Callback registration ***
 141:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   =============================================
 142:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 143:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   The compilation define  USE_HAL_CAN_REGISTER_CALLBACKS when set to 1
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 4


 144:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   allows the user to configure dynamically the driver callbacks.
 145:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   Use Function HAL_CAN_RegisterCallback() to register an interrupt callback.
 146:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 147:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   Function HAL_CAN_RegisterCallback() allows to register following callbacks:
 148:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     (+) TxMailbox0CompleteCallback   : Tx Mailbox 0 Complete Callback.
 149:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     (+) TxMailbox1CompleteCallback   : Tx Mailbox 1 Complete Callback.
 150:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     (+) TxMailbox2CompleteCallback   : Tx Mailbox 2 Complete Callback.
 151:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     (+) TxMailbox0AbortCallback      : Tx Mailbox 0 Abort Callback.
 152:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     (+) TxMailbox1AbortCallback      : Tx Mailbox 1 Abort Callback.
 153:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     (+) TxMailbox2AbortCallback      : Tx Mailbox 2 Abort Callback.
 154:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     (+) RxFifo0MsgPendingCallback    : Rx Fifo 0 Message Pending Callback.
 155:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     (+) RxFifo0FullCallback          : Rx Fifo 0 Full Callback.
 156:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     (+) RxFifo1MsgPendingCallback    : Rx Fifo 1 Message Pending Callback.
 157:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     (+) RxFifo1FullCallback          : Rx Fifo 1 Full Callback.
 158:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     (+) SleepCallback                : Sleep Callback.
 159:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     (+) WakeUpFromRxMsgCallback      : Wake Up From Rx Message Callback.
 160:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     (+) ErrorCallback                : Error Callback.
 161:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     (+) MspInitCallback              : CAN MspInit.
 162:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     (+) MspDeInitCallback            : CAN MspDeInit.
 163:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   This function takes as parameters the HAL peripheral handle, the Callback ID
 164:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   and a pointer to the user callback function.
 165:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 166:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   Use function HAL_CAN_UnRegisterCallback() to reset a callback to the default
 167:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   weak function.
 168:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   HAL_CAN_UnRegisterCallback takes as parameters the HAL peripheral handle,
 169:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   and the Callback ID.
 170:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   This function allows to reset following callbacks:
 171:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     (+) TxMailbox0CompleteCallback   : Tx Mailbox 0 Complete Callback.
 172:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     (+) TxMailbox1CompleteCallback   : Tx Mailbox 1 Complete Callback.
 173:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     (+) TxMailbox2CompleteCallback   : Tx Mailbox 2 Complete Callback.
 174:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     (+) TxMailbox0AbortCallback      : Tx Mailbox 0 Abort Callback.
 175:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     (+) TxMailbox1AbortCallback      : Tx Mailbox 1 Abort Callback.
 176:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     (+) TxMailbox2AbortCallback      : Tx Mailbox 2 Abort Callback.
 177:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     (+) RxFifo0MsgPendingCallback    : Rx Fifo 0 Message Pending Callback.
 178:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     (+) RxFifo0FullCallback          : Rx Fifo 0 Full Callback.
 179:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     (+) RxFifo1MsgPendingCallback    : Rx Fifo 1 Message Pending Callback.
 180:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     (+) RxFifo1FullCallback          : Rx Fifo 1 Full Callback.
 181:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     (+) SleepCallback                : Sleep Callback.
 182:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     (+) WakeUpFromRxMsgCallback      : Wake Up From Rx Message Callback.
 183:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     (+) ErrorCallback                : Error Callback.
 184:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     (+) MspInitCallback              : CAN MspInit.
 185:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     (+) MspDeInitCallback            : CAN MspDeInit.
 186:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 187:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   By default, after the HAL_CAN_Init() and when the state is HAL_CAN_STATE_RESET,
 188:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   all callbacks are set to the corresponding weak functions:
 189:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   example HAL_CAN_ErrorCallback().
 190:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   Exception done for MspInit and MspDeInit functions that are
 191:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   reset to the legacy weak function in the HAL_CAN_Init()/ HAL_CAN_DeInit() only when
 192:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   these callbacks are null (not registered beforehand).
 193:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   if not, MspInit or MspDeInit are not null, the HAL_CAN_Init()/ HAL_CAN_DeInit()
 194:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   keep and use the user MspInit/MspDeInit callbacks (registered beforehand)
 195:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 196:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   Callbacks can be registered/unregistered in HAL_CAN_STATE_READY state only.
 197:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   Exception done MspInit/MspDeInit that can be registered/unregistered
 198:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   in HAL_CAN_STATE_READY or HAL_CAN_STATE_RESET state,
 199:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   thus registered (user) MspInit/DeInit callbacks can be used during the Init/DeInit.
 200:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   In that case first register the MspInit/MspDeInit user callbacks
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 5


 201:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   using HAL_CAN_RegisterCallback() before calling HAL_CAN_DeInit()
 202:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   or HAL_CAN_Init() function.
 203:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 204:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   When The compilation define USE_HAL_CAN_REGISTER_CALLBACKS is set to 0 or
 205:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   not defined, the callback registration feature is not available and all callbacks
 206:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   are set to the corresponding weak functions.
 207:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 208:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   @endverbatim
 209:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   ******************************************************************************
 210:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
 211:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 212:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /* Includes ------------------------------------------------------------------*/
 213:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #include "stm32l4xx_hal.h"
 214:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 215:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /** @addtogroup STM32L4xx_HAL_Driver
 216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @{
 217:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
 218:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 219:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #if defined(CAN1)
 220:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 221:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /** @defgroup CAN CAN
 222:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @brief CAN driver modules
 223:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @{
 224:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
 225:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 226:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #ifdef HAL_CAN_MODULE_ENABLED
 227:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 228:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #ifdef HAL_CAN_LEGACY_MODULE_ENABLED
 229:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #error "The CAN driver cannot be used with its legacy, Please enable only one CAN module at once"
 230:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #endif /* HAL_CAN_LEGACY_MODULE_ENABLED */
 231:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 232:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /* Private typedef -----------------------------------------------------------*/
 233:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /* Private define ------------------------------------------------------------*/
 234:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /** @defgroup CAN_Private_Constants CAN Private Constants
 235:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @{
 236:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
 237:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #define CAN_TIMEOUT_VALUE 10U
 238:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #define CAN_WAKEUP_TIMEOUT_COUNTER 1000000U
 239:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /**
 240:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @}
 241:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
 242:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /* Private macro -------------------------------------------------------------*/
 243:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /* Private variables ---------------------------------------------------------*/
 244:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /* Private function prototypes -----------------------------------------------*/
 245:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /* Exported functions --------------------------------------------------------*/
 246:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 247:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /** @defgroup CAN_Exported_Functions CAN Exported Functions
 248:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @{
 249:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
 250:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 251:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /** @defgroup CAN_Exported_Functions_Group1 Initialization and de-initialization functions
 252:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @brief    Initialization and Configuration functions
 253:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *
 254:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** @verbatim
 255:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   ==============================================================================
 256:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****               ##### Initialization and de-initialization functions #####
 257:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   ==============================================================================
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 6


 258:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     [..]  This section provides functions allowing to:
 259:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (+) HAL_CAN_Init                       : Initialize and configure the CAN.
 260:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (+) HAL_CAN_DeInit                     : De-initialize the CAN.
 261:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (+) HAL_CAN_MspInit                    : Initialize the CAN MSP.
 262:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (+) HAL_CAN_MspDeInit                  : DeInitialize the CAN MSP.
 263:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 264:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** @endverbatim
 265:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @{
 266:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
 267:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 268:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /**
 269:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @brief  Initializes the CAN peripheral according to the specified
 270:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         parameters in the CAN_InitStruct.
 271:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
 272:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         the configuration information for the specified CAN.
 273:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @retval HAL status
 274:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
 275:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_Init(CAN_HandleTypeDef *hcan)
 276:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** {
 277:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   uint32_t tickstart;
 278:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 279:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Check CAN handle */
 280:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   if (hcan == NULL)
 281:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 282:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     return HAL_ERROR;
 283:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 284:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 285:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Check the parameters */
 286:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   assert_param(IS_CAN_ALL_INSTANCE(hcan->Instance));
 287:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.TimeTriggeredMode));
 288:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.AutoBusOff));
 289:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.AutoWakeUp));
 290:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.AutoRetransmission));
 291:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.ReceiveFifoLocked));
 292:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.TransmitFifoPriority));
 293:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   assert_param(IS_CAN_MODE(hcan->Init.Mode));
 294:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   assert_param(IS_CAN_SJW(hcan->Init.SyncJumpWidth));
 295:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   assert_param(IS_CAN_BS1(hcan->Init.TimeSeg1));
 296:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   assert_param(IS_CAN_BS2(hcan->Init.TimeSeg2));
 297:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   assert_param(IS_CAN_PRESCALER(hcan->Init.Prescaler));
 298:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 299:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
 300:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   if (hcan->State == HAL_CAN_STATE_RESET)
 301:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 302:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Reset callbacks to legacy functions */
 303:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     hcan->RxFifo0MsgPendingCallback  =  HAL_CAN_RxFifo0MsgPendingCallback;  /* Legacy weak RxFifo0M
 304:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     hcan->RxFifo0FullCallback        =  HAL_CAN_RxFifo0FullCallback;        /* Legacy weak RxFifo0F
 305:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     hcan->RxFifo1MsgPendingCallback  =  HAL_CAN_RxFifo1MsgPendingCallback;  /* Legacy weak RxFifo1M
 306:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     hcan->RxFifo1FullCallback        =  HAL_CAN_RxFifo1FullCallback;        /* Legacy weak RxFifo1F
 307:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     hcan->TxMailbox0CompleteCallback =  HAL_CAN_TxMailbox0CompleteCallback; /* Legacy weak TxMailbo
 308:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     hcan->TxMailbox1CompleteCallback =  HAL_CAN_TxMailbox1CompleteCallback; /* Legacy weak TxMailbo
 309:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     hcan->TxMailbox2CompleteCallback =  HAL_CAN_TxMailbox2CompleteCallback; /* Legacy weak TxMailbo
 310:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     hcan->TxMailbox0AbortCallback    =  HAL_CAN_TxMailbox0AbortCallback;    /* Legacy weak TxMailbo
 311:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     hcan->TxMailbox1AbortCallback    =  HAL_CAN_TxMailbox1AbortCallback;    /* Legacy weak TxMailbo
 312:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     hcan->TxMailbox2AbortCallback    =  HAL_CAN_TxMailbox2AbortCallback;    /* Legacy weak TxMailbo
 313:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     hcan->SleepCallback              =  HAL_CAN_SleepCallback;              /* Legacy weak SleepCal
 314:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     hcan->WakeUpFromRxMsgCallback    =  HAL_CAN_WakeUpFromRxMsgCallback;    /* Legacy weak WakeUpFr
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 7


 315:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     hcan->ErrorCallback              =  HAL_CAN_ErrorCallback;              /* Legacy weak ErrorCal
 316:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 317:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     if (hcan->MspInitCallback == NULL)
 318:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 319:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       hcan->MspInitCallback = HAL_CAN_MspInit; /* Legacy weak MspInit */
 320:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 321:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 322:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Init the low level hardware: CLOCK, NVIC */
 323:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     hcan->MspInitCallback(hcan);
 324:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 325:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 326:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #else
 327:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   if (hcan->State == HAL_CAN_STATE_RESET)
 328:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 329:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Init the low level hardware: CLOCK, NVIC */
 330:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     HAL_CAN_MspInit(hcan);
 331:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 332:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 333:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 334:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Request initialisation */
 335:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   SET_BIT(hcan->Instance->MCR, CAN_MCR_INRQ);
 336:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 337:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Get tick */
 338:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   tickstart = HAL_GetTick();
 339:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 340:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Wait initialisation acknowledge */
 341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   while ((hcan->Instance->MSR & CAN_MSR_INAK) == 0U)
 342:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 343:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     if ((HAL_GetTick() - tickstart) > CAN_TIMEOUT_VALUE)
 344:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 345:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Update error code */
 346:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       hcan->ErrorCode |= HAL_CAN_ERROR_TIMEOUT;
 347:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 348:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Change CAN state */
 349:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       hcan->State = HAL_CAN_STATE_ERROR;
 350:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 351:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       return HAL_ERROR;
 352:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 353:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 354:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 355:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Exit from sleep mode */
 356:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_SLEEP);
 357:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 358:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Get tick */
 359:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   tickstart = HAL_GetTick();
 360:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 361:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Check Sleep mode leave acknowledge */
 362:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   while ((hcan->Instance->MSR & CAN_MSR_SLAK) != 0U)
 363:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 364:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     if ((HAL_GetTick() - tickstart) > CAN_TIMEOUT_VALUE)
 365:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 366:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Update error code */
 367:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       hcan->ErrorCode |= HAL_CAN_ERROR_TIMEOUT;
 368:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 369:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Change CAN state */
 370:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       hcan->State = HAL_CAN_STATE_ERROR;
 371:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 8


 372:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       return HAL_ERROR;
 373:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 374:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 375:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 376:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Set the time triggered communication mode */
 377:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   if (hcan->Init.TimeTriggeredMode == ENABLE)
 378:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 379:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     SET_BIT(hcan->Instance->MCR, CAN_MCR_TTCM);
 380:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 381:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   else
 382:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 383:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_TTCM);
 384:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 385:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 386:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Set the automatic bus-off management */
 387:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   if (hcan->Init.AutoBusOff == ENABLE)
 388:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 389:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     SET_BIT(hcan->Instance->MCR, CAN_MCR_ABOM);
 390:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 391:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   else
 392:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 393:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_ABOM);
 394:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 395:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 396:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Set the automatic wake-up mode */
 397:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   if (hcan->Init.AutoWakeUp == ENABLE)
 398:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 399:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     SET_BIT(hcan->Instance->MCR, CAN_MCR_AWUM);
 400:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 401:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   else
 402:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 403:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_AWUM);
 404:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 405:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 406:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Set the automatic retransmission */
 407:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   if (hcan->Init.AutoRetransmission == ENABLE)
 408:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 409:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_NART);
 410:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 411:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   else
 412:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 413:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     SET_BIT(hcan->Instance->MCR, CAN_MCR_NART);
 414:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 415:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 416:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Set the receive FIFO locked mode */
 417:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   if (hcan->Init.ReceiveFifoLocked == ENABLE)
 418:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 419:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     SET_BIT(hcan->Instance->MCR, CAN_MCR_RFLM);
 420:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 421:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   else
 422:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 423:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_RFLM);
 424:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 425:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 426:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Set the transmit FIFO priority */
 427:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   if (hcan->Init.TransmitFifoPriority == ENABLE)
 428:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 9


 429:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     SET_BIT(hcan->Instance->MCR, CAN_MCR_TXFP);
 430:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   else
 432:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 433:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_TXFP);
 434:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 435:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 436:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Set the bit timing register */
 437:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   WRITE_REG(hcan->Instance->BTR, (uint32_t)(hcan->Init.Mode           |
 438:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****                                             hcan->Init.SyncJumpWidth  |
 439:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****                                             hcan->Init.TimeSeg1       |
 440:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****                                             hcan->Init.TimeSeg2       |
 441:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****                                             (hcan->Init.Prescaler - 1U)));
 442:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 443:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Initialize the error code */
 444:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   hcan->ErrorCode = HAL_CAN_ERROR_NONE;
 445:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 446:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Initialize the CAN state */
 447:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   hcan->State = HAL_CAN_STATE_READY;
 448:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 449:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Return function status */
 450:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   return HAL_OK;
 451:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** }
 452:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 453:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /**
 454:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @brief  Deinitializes the CAN peripheral registers to their default
 455:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         reset values.
 456:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
 457:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         the configuration information for the specified CAN.
 458:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @retval HAL status
 459:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
 460:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_DeInit(CAN_HandleTypeDef *hcan)
 461:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** {
 462:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Check CAN handle */
 463:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   if (hcan == NULL)
 464:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 465:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     return HAL_ERROR;
 466:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 467:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 468:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Check the parameters */
 469:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   assert_param(IS_CAN_ALL_INSTANCE(hcan->Instance));
 470:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 471:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Stop the CAN module */
 472:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   (void)HAL_CAN_Stop(hcan);
 473:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 474:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
 475:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   if (hcan->MspDeInitCallback == NULL)
 476:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 477:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     hcan->MspDeInitCallback = HAL_CAN_MspDeInit; /* Legacy weak MspDeInit */
 478:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 479:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 480:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* DeInit the low level hardware: CLOCK, NVIC */
 481:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   hcan->MspDeInitCallback(hcan);
 482:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 483:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #else
 484:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* DeInit the low level hardware: CLOCK, NVIC */
 485:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   HAL_CAN_MspDeInit(hcan);
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 10


 486:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 487:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 488:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Reset the CAN peripheral */
 489:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   SET_BIT(hcan->Instance->MCR, CAN_MCR_RESET);
 490:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 491:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Reset the CAN ErrorCode */
 492:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   hcan->ErrorCode = HAL_CAN_ERROR_NONE;
 493:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 494:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Change CAN state */
 495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   hcan->State = HAL_CAN_STATE_RESET;
 496:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 497:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Return function status */
 498:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   return HAL_OK;
 499:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** }
 500:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 501:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /**
 502:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @brief  Initializes the CAN MSP.
 503:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
 504:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         the configuration information for the specified CAN.
 505:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @retval None
 506:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
 507:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** __weak void HAL_CAN_MspInit(CAN_HandleTypeDef *hcan)
 508:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** {
  30              		.loc 1 508 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
 509:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
 510:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   UNUSED(hcan);
  35              		.loc 1 510 3 view .LVU1
 511:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 512:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 513:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             the HAL_CAN_MspInit could be implemented in the user file
 514:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****    */
 515:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** }
  36              		.loc 1 515 1 is_stmt 0 view .LVU2
  37 0000 7047     		bx	lr
  38              		.cfi_endproc
  39              	.LFE290:
  41              		.section	.text.HAL_CAN_Init,"ax",%progbits
  42              		.align	1
  43              		.global	HAL_CAN_Init
  44              		.syntax unified
  45              		.thumb
  46              		.thumb_func
  48              	HAL_CAN_Init:
  49              	.LVL1:
  50              	.LFB288:
 276:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   uint32_t tickstart;
  51              		.loc 1 276 1 is_stmt 1 view -0
  52              		.cfi_startproc
  53              		@ args = 0, pretend = 0, frame = 0
  54              		@ frame_needed = 0, uses_anonymous_args = 0
 277:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
  55              		.loc 1 277 3 view .LVU4
 280:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 11


  56              		.loc 1 280 3 view .LVU5
 280:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
  57              		.loc 1 280 6 is_stmt 0 view .LVU6
  58 0000 0028     		cmp	r0, #0
  59 0002 00F0A180 		beq	.L21
 276:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   uint32_t tickstart;
  60              		.loc 1 276 1 view .LVU7
  61 0006 38B5     		push	{r3, r4, r5, lr}
  62              		.cfi_def_cfa_offset 16
  63              		.cfi_offset 3, -16
  64              		.cfi_offset 4, -12
  65              		.cfi_offset 5, -8
  66              		.cfi_offset 14, -4
  67 0008 0446     		mov	r4, r0
 286:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.TimeTriggeredMode));
  68              		.loc 1 286 3 is_stmt 1 view .LVU8
 287:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.AutoBusOff));
  69              		.loc 1 287 3 view .LVU9
 288:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.AutoWakeUp));
  70              		.loc 1 288 3 view .LVU10
 289:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.AutoRetransmission));
  71              		.loc 1 289 3 view .LVU11
 290:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.ReceiveFifoLocked));
  72              		.loc 1 290 3 view .LVU12
 291:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.TransmitFifoPriority));
  73              		.loc 1 291 3 view .LVU13
 292:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   assert_param(IS_CAN_MODE(hcan->Init.Mode));
  74              		.loc 1 292 3 view .LVU14
 293:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   assert_param(IS_CAN_SJW(hcan->Init.SyncJumpWidth));
  75              		.loc 1 293 3 view .LVU15
 294:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   assert_param(IS_CAN_BS1(hcan->Init.TimeSeg1));
  76              		.loc 1 294 3 view .LVU16
 295:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   assert_param(IS_CAN_BS2(hcan->Init.TimeSeg2));
  77              		.loc 1 295 3 view .LVU17
 296:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   assert_param(IS_CAN_PRESCALER(hcan->Init.Prescaler));
  78              		.loc 1 296 3 view .LVU18
 297:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
  79              		.loc 1 297 3 view .LVU19
 327:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
  80              		.loc 1 327 3 view .LVU20
 327:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
  81              		.loc 1 327 11 is_stmt 0 view .LVU21
  82 000a 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 327:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
  83              		.loc 1 327 6 view .LVU22
  84 000e D3B1     		cbz	r3, .L26
  85              	.LVL2:
  86              	.L4:
 335:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
  87              		.loc 1 335 3 is_stmt 1 view .LVU23
  88 0010 2268     		ldr	r2, [r4]
  89 0012 1368     		ldr	r3, [r2]
  90 0014 43F00103 		orr	r3, r3, #1
  91 0018 1360     		str	r3, [r2]
 338:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
  92              		.loc 1 338 3 view .LVU24
 338:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 12


  93              		.loc 1 338 15 is_stmt 0 view .LVU25
  94 001a FFF7FEFF 		bl	HAL_GetTick
  95              	.LVL3:
  96 001e 0546     		mov	r5, r0
  97              	.LVL4:
 341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
  98              		.loc 1 341 3 is_stmt 1 view .LVU26
  99              	.L5:
 341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 100              		.loc 1 341 47 view .LVU27
 341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 101              		.loc 1 341 15 is_stmt 0 view .LVU28
 102 0020 2368     		ldr	r3, [r4]
 341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 103              		.loc 1 341 25 view .LVU29
 104 0022 5A68     		ldr	r2, [r3, #4]
 341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 105              		.loc 1 341 47 view .LVU30
 106 0024 12F0010F 		tst	r2, #1
 107 0028 10D1     		bne	.L27
 343:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 108              		.loc 1 343 5 is_stmt 1 view .LVU31
 343:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 109              		.loc 1 343 10 is_stmt 0 view .LVU32
 110 002a FFF7FEFF 		bl	HAL_GetTick
 111              	.LVL5:
 343:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 112              		.loc 1 343 24 discriminator 1 view .LVU33
 113 002e 401B     		subs	r0, r0, r5
 343:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 114              		.loc 1 343 8 discriminator 1 view .LVU34
 115 0030 0A28     		cmp	r0, #10
 116 0032 F5D9     		bls	.L5
 346:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 117              		.loc 1 346 7 is_stmt 1 view .LVU35
 346:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 118              		.loc 1 346 11 is_stmt 0 view .LVU36
 119 0034 636A     		ldr	r3, [r4, #36]
 346:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 120              		.loc 1 346 23 view .LVU37
 121 0036 43F40033 		orr	r3, r3, #131072
 122 003a 6362     		str	r3, [r4, #36]
 349:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 123              		.loc 1 349 7 is_stmt 1 view .LVU38
 349:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 124              		.loc 1 349 19 is_stmt 0 view .LVU39
 125 003c 0523     		movs	r3, #5
 126 003e 84F82030 		strb	r3, [r4, #32]
 351:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 127              		.loc 1 351 7 is_stmt 1 view .LVU40
 351:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 128              		.loc 1 351 14 is_stmt 0 view .LVU41
 129 0042 0120     		movs	r0, #1
 130              	.L3:
 451:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 131              		.loc 1 451 1 view .LVU42
 132 0044 38BD     		pop	{r3, r4, r5, pc}
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 13


 133              	.LVL6:
 134              	.L26:
 330:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 135              		.loc 1 330 5 is_stmt 1 view .LVU43
 136 0046 FFF7FEFF 		bl	HAL_CAN_MspInit
 137              	.LVL7:
 330:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 138              		.loc 1 330 5 is_stmt 0 view .LVU44
 139 004a E1E7     		b	.L4
 140              	.LVL8:
 141              	.L27:
 356:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 142              		.loc 1 356 3 is_stmt 1 view .LVU45
 143 004c 1A68     		ldr	r2, [r3]
 144 004e 22F00202 		bic	r2, r2, #2
 145 0052 1A60     		str	r2, [r3]
 359:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 146              		.loc 1 359 3 view .LVU46
 359:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 147              		.loc 1 359 15 is_stmt 0 view .LVU47
 148 0054 FFF7FEFF 		bl	HAL_GetTick
 149              	.LVL9:
 150 0058 0546     		mov	r5, r0
 151              	.LVL10:
 362:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 152              		.loc 1 362 3 is_stmt 1 view .LVU48
 153              	.L7:
 362:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 154              		.loc 1 362 47 view .LVU49
 362:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 155              		.loc 1 362 15 is_stmt 0 view .LVU50
 156 005a 2368     		ldr	r3, [r4]
 362:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 157              		.loc 1 362 25 view .LVU51
 158 005c 5A68     		ldr	r2, [r3, #4]
 362:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 159              		.loc 1 362 47 view .LVU52
 160 005e 12F0020F 		tst	r2, #2
 161 0062 0DD0     		beq	.L28
 364:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 162              		.loc 1 364 5 is_stmt 1 view .LVU53
 364:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 163              		.loc 1 364 10 is_stmt 0 view .LVU54
 164 0064 FFF7FEFF 		bl	HAL_GetTick
 165              	.LVL11:
 364:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 166              		.loc 1 364 24 discriminator 1 view .LVU55
 167 0068 401B     		subs	r0, r0, r5
 364:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 168              		.loc 1 364 8 discriminator 1 view .LVU56
 169 006a 0A28     		cmp	r0, #10
 170 006c F5D9     		bls	.L7
 367:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 171              		.loc 1 367 7 is_stmt 1 view .LVU57
 367:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 172              		.loc 1 367 11 is_stmt 0 view .LVU58
 173 006e 636A     		ldr	r3, [r4, #36]
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 14


 367:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 174              		.loc 1 367 23 view .LVU59
 175 0070 43F40033 		orr	r3, r3, #131072
 176 0074 6362     		str	r3, [r4, #36]
 370:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 177              		.loc 1 370 7 is_stmt 1 view .LVU60
 370:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 178              		.loc 1 370 19 is_stmt 0 view .LVU61
 179 0076 0523     		movs	r3, #5
 180 0078 84F82030 		strb	r3, [r4, #32]
 372:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 181              		.loc 1 372 7 is_stmt 1 view .LVU62
 372:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 182              		.loc 1 372 14 is_stmt 0 view .LVU63
 183 007c 0120     		movs	r0, #1
 184 007e E1E7     		b	.L3
 185              	.L28:
 377:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 186              		.loc 1 377 3 is_stmt 1 view .LVU64
 377:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 187              		.loc 1 377 17 is_stmt 0 view .LVU65
 188 0080 227E     		ldrb	r2, [r4, #24]	@ zero_extendqisi2
 377:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 189              		.loc 1 377 6 view .LVU66
 190 0082 012A     		cmp	r2, #1
 191 0084 3DD0     		beq	.L29
 383:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 192              		.loc 1 383 5 is_stmt 1 view .LVU67
 193 0086 1A68     		ldr	r2, [r3]
 194 0088 22F08002 		bic	r2, r2, #128
 195 008c 1A60     		str	r2, [r3]
 196              	.L10:
 387:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 197              		.loc 1 387 3 view .LVU68
 387:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 198              		.loc 1 387 17 is_stmt 0 view .LVU69
 199 008e 637E     		ldrb	r3, [r4, #25]	@ zero_extendqisi2
 387:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 200              		.loc 1 387 6 view .LVU70
 201 0090 012B     		cmp	r3, #1
 202 0092 3BD0     		beq	.L30
 393:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 203              		.loc 1 393 5 is_stmt 1 view .LVU71
 204 0094 2268     		ldr	r2, [r4]
 205 0096 1368     		ldr	r3, [r2]
 206 0098 23F04003 		bic	r3, r3, #64
 207 009c 1360     		str	r3, [r2]
 208              	.L12:
 397:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 209              		.loc 1 397 3 view .LVU72
 397:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 210              		.loc 1 397 17 is_stmt 0 view .LVU73
 211 009e A37E     		ldrb	r3, [r4, #26]	@ zero_extendqisi2
 397:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 212              		.loc 1 397 6 view .LVU74
 213 00a0 012B     		cmp	r3, #1
 214 00a2 39D0     		beq	.L31
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 15


 403:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 215              		.loc 1 403 5 is_stmt 1 view .LVU75
 216 00a4 2268     		ldr	r2, [r4]
 217 00a6 1368     		ldr	r3, [r2]
 218 00a8 23F02003 		bic	r3, r3, #32
 219 00ac 1360     		str	r3, [r2]
 220              	.L14:
 407:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 221              		.loc 1 407 3 view .LVU76
 407:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 222              		.loc 1 407 17 is_stmt 0 view .LVU77
 223 00ae E37E     		ldrb	r3, [r4, #27]	@ zero_extendqisi2
 407:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 224              		.loc 1 407 6 view .LVU78
 225 00b0 012B     		cmp	r3, #1
 226 00b2 37D0     		beq	.L32
 413:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 227              		.loc 1 413 5 is_stmt 1 view .LVU79
 228 00b4 2268     		ldr	r2, [r4]
 229 00b6 1368     		ldr	r3, [r2]
 230 00b8 43F01003 		orr	r3, r3, #16
 231 00bc 1360     		str	r3, [r2]
 232              	.L16:
 417:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 233              		.loc 1 417 3 view .LVU80
 417:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 234              		.loc 1 417 17 is_stmt 0 view .LVU81
 235 00be 237F     		ldrb	r3, [r4, #28]	@ zero_extendqisi2
 417:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 236              		.loc 1 417 6 view .LVU82
 237 00c0 012B     		cmp	r3, #1
 238 00c2 35D0     		beq	.L33
 423:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 239              		.loc 1 423 5 is_stmt 1 view .LVU83
 240 00c4 2268     		ldr	r2, [r4]
 241 00c6 1368     		ldr	r3, [r2]
 242 00c8 23F00803 		bic	r3, r3, #8
 243 00cc 1360     		str	r3, [r2]
 244              	.L18:
 427:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 245              		.loc 1 427 3 view .LVU84
 427:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 246              		.loc 1 427 17 is_stmt 0 view .LVU85
 247 00ce 637F     		ldrb	r3, [r4, #29]	@ zero_extendqisi2
 427:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 248              		.loc 1 427 6 view .LVU86
 249 00d0 012B     		cmp	r3, #1
 250 00d2 33D0     		beq	.L34
 433:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 251              		.loc 1 433 5 is_stmt 1 view .LVU87
 252 00d4 2268     		ldr	r2, [r4]
 253 00d6 1368     		ldr	r3, [r2]
 254 00d8 23F00403 		bic	r3, r3, #4
 255 00dc 1360     		str	r3, [r2]
 256              	.L20:
 437:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****                                             hcan->Init.SyncJumpWidth  |
 257              		.loc 1 437 3 view .LVU88
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 16


 258 00de A368     		ldr	r3, [r4, #8]
 259 00e0 E268     		ldr	r2, [r4, #12]
 260 00e2 1343     		orrs	r3, r3, r2
 261 00e4 2269     		ldr	r2, [r4, #16]
 262 00e6 1343     		orrs	r3, r3, r2
 263 00e8 6269     		ldr	r2, [r4, #20]
 264 00ea 1343     		orrs	r3, r3, r2
 265 00ec 6268     		ldr	r2, [r4, #4]
 266 00ee 013A     		subs	r2, r2, #1
 267 00f0 2168     		ldr	r1, [r4]
 268 00f2 1343     		orrs	r3, r3, r2
 269 00f4 CB61     		str	r3, [r1, #28]
 444:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 270              		.loc 1 444 3 view .LVU89
 444:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 271              		.loc 1 444 19 is_stmt 0 view .LVU90
 272 00f6 0020     		movs	r0, #0
 273 00f8 6062     		str	r0, [r4, #36]
 447:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 274              		.loc 1 447 3 is_stmt 1 view .LVU91
 447:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 275              		.loc 1 447 15 is_stmt 0 view .LVU92
 276 00fa 0123     		movs	r3, #1
 277 00fc 84F82030 		strb	r3, [r4, #32]
 450:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** }
 278              		.loc 1 450 3 is_stmt 1 view .LVU93
 450:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** }
 279              		.loc 1 450 10 is_stmt 0 view .LVU94
 280 0100 A0E7     		b	.L3
 281              	.L29:
 379:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 282              		.loc 1 379 5 is_stmt 1 view .LVU95
 283 0102 1A68     		ldr	r2, [r3]
 284 0104 42F08002 		orr	r2, r2, #128
 285 0108 1A60     		str	r2, [r3]
 286 010a C0E7     		b	.L10
 287              	.L30:
 389:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 288              		.loc 1 389 5 view .LVU96
 289 010c 2268     		ldr	r2, [r4]
 290 010e 1368     		ldr	r3, [r2]
 291 0110 43F04003 		orr	r3, r3, #64
 292 0114 1360     		str	r3, [r2]
 293 0116 C2E7     		b	.L12
 294              	.L31:
 399:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 295              		.loc 1 399 5 view .LVU97
 296 0118 2268     		ldr	r2, [r4]
 297 011a 1368     		ldr	r3, [r2]
 298 011c 43F02003 		orr	r3, r3, #32
 299 0120 1360     		str	r3, [r2]
 300 0122 C4E7     		b	.L14
 301              	.L32:
 409:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 302              		.loc 1 409 5 view .LVU98
 303 0124 2268     		ldr	r2, [r4]
 304 0126 1368     		ldr	r3, [r2]
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 17


 305 0128 23F01003 		bic	r3, r3, #16
 306 012c 1360     		str	r3, [r2]
 307 012e C6E7     		b	.L16
 308              	.L33:
 419:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 309              		.loc 1 419 5 view .LVU99
 310 0130 2268     		ldr	r2, [r4]
 311 0132 1368     		ldr	r3, [r2]
 312 0134 43F00803 		orr	r3, r3, #8
 313 0138 1360     		str	r3, [r2]
 314 013a C8E7     		b	.L18
 315              	.L34:
 429:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 316              		.loc 1 429 5 view .LVU100
 317 013c 2268     		ldr	r2, [r4]
 318 013e 1368     		ldr	r3, [r2]
 319 0140 43F00403 		orr	r3, r3, #4
 320 0144 1360     		str	r3, [r2]
 321 0146 CAE7     		b	.L20
 322              	.LVL12:
 323              	.L21:
 324              		.cfi_def_cfa_offset 0
 325              		.cfi_restore 3
 326              		.cfi_restore 4
 327              		.cfi_restore 5
 328              		.cfi_restore 14
 282:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 329              		.loc 1 282 12 is_stmt 0 view .LVU101
 330 0148 0120     		movs	r0, #1
 331              	.LVL13:
 451:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 332              		.loc 1 451 1 view .LVU102
 333 014a 7047     		bx	lr
 334              		.cfi_endproc
 335              	.LFE288:
 337              		.section	.text.HAL_CAN_MspDeInit,"ax",%progbits
 338              		.align	1
 339              		.weak	HAL_CAN_MspDeInit
 340              		.syntax unified
 341              		.thumb
 342              		.thumb_func
 344              	HAL_CAN_MspDeInit:
 345              	.LVL14:
 346              	.LFB291:
 516:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 517:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /**
 518:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @brief  DeInitializes the CAN MSP.
 519:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
 520:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         the configuration information for the specified CAN.
 521:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @retval None
 522:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
 523:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** __weak void HAL_CAN_MspDeInit(CAN_HandleTypeDef *hcan)
 524:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** {
 347              		.loc 1 524 1 is_stmt 1 view -0
 348              		.cfi_startproc
 349              		@ args = 0, pretend = 0, frame = 0
 350              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 18


 351              		@ link register save eliminated.
 525:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
 526:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   UNUSED(hcan);
 352              		.loc 1 526 3 view .LVU104
 527:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 528:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 529:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             the HAL_CAN_MspDeInit could be implemented in the user file
 530:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****    */
 531:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** }
 353              		.loc 1 531 1 is_stmt 0 view .LVU105
 354 0000 7047     		bx	lr
 355              		.cfi_endproc
 356              	.LFE291:
 358              		.section	.text.HAL_CAN_ConfigFilter,"ax",%progbits
 359              		.align	1
 360              		.global	HAL_CAN_ConfigFilter
 361              		.syntax unified
 362              		.thumb
 363              		.thumb_func
 365              	HAL_CAN_ConfigFilter:
 366              	.LVL15:
 367              	.LFB292:
 532:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 533:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
 534:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /**
 535:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @brief  Register a CAN CallBack.
 536:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         To be used instead of the weak predefined callback
 537:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
 538:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         the configuration information for CAN module
 539:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  CallbackID ID of the callback to be registered
 540:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         This parameter can be one of the following values:
 541:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX0_COMPLETE_CB_ID Tx Mailbox 0 Complete callback ID
 542:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX1_COMPLETE_CB_ID Tx Mailbox 1 Complete callback ID
 543:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX2_COMPLETE_CB_ID Tx Mailbox 2 Complete callback ID
 544:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX0_ABORT_CB_ID Tx Mailbox 0 Abort callback ID
 545:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX1_ABORT_CB_ID Tx Mailbox 1 Abort callback ID
 546:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX2_ABORT_CB_ID Tx Mailbox 2 Abort callback ID
 547:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *           @arg @ref HAL_CAN_RX_FIFO0_MSG_PENDING_CB_ID Rx Fifo 0 message pending callback ID
 548:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *           @arg @ref HAL_CAN_RX_FIFO0_FULL_CB_ID Rx Fifo 0 full callback ID
 549:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *           @arg @ref HAL_CAN_RX_FIFO1_MSG_PENDING_CB_ID Rx Fifo 1 message pending callback ID
 550:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *           @arg @ref HAL_CAN_RX_FIFO1_FULL_CB_ID Rx Fifo 1 full callback ID
 551:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *           @arg @ref HAL_CAN_SLEEP_CB_ID Sleep callback ID
 552:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *           @arg @ref HAL_CAN_WAKEUP_FROM_RX_MSG_CB_ID Wake Up from Rx message callback ID
 553:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *           @arg @ref HAL_CAN_ERROR_CB_ID Error callback ID
 554:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *           @arg @ref HAL_CAN_MSPINIT_CB_ID MspInit callback ID
 555:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *           @arg @ref HAL_CAN_MSPDEINIT_CB_ID MspDeInit callback ID
 556:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  pCallback pointer to the Callback function
 557:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @retval HAL status
 558:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
 559:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_RegisterCallback(CAN_HandleTypeDef *hcan, HAL_CAN_CallbackIDTypeDef Callb
 560:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****                                            void (* pCallback)(CAN_HandleTypeDef *_hcan))
 561:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** {
 562:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   HAL_StatusTypeDef status = HAL_OK;
 563:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 564:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   if (pCallback == NULL)
 565:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 566:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Update the error code */
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 19


 567:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_INVALID_CALLBACK;
 568:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 569:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     return HAL_ERROR;
 570:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 571:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 572:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   if (hcan->State == HAL_CAN_STATE_READY)
 573:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 574:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     switch (CallbackID)
 575:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 576:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX0_COMPLETE_CB_ID :
 577:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         hcan->TxMailbox0CompleteCallback = pCallback;
 578:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         break;
 579:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 580:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX1_COMPLETE_CB_ID :
 581:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         hcan->TxMailbox1CompleteCallback = pCallback;
 582:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         break;
 583:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 584:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX2_COMPLETE_CB_ID :
 585:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         hcan->TxMailbox2CompleteCallback = pCallback;
 586:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         break;
 587:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 588:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX0_ABORT_CB_ID :
 589:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         hcan->TxMailbox0AbortCallback = pCallback;
 590:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         break;
 591:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 592:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX1_ABORT_CB_ID :
 593:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         hcan->TxMailbox1AbortCallback = pCallback;
 594:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         break;
 595:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 596:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX2_ABORT_CB_ID :
 597:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         hcan->TxMailbox2AbortCallback = pCallback;
 598:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         break;
 599:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 600:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       case HAL_CAN_RX_FIFO0_MSG_PENDING_CB_ID :
 601:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         hcan->RxFifo0MsgPendingCallback = pCallback;
 602:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         break;
 603:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 604:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       case HAL_CAN_RX_FIFO0_FULL_CB_ID :
 605:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         hcan->RxFifo0FullCallback = pCallback;
 606:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         break;
 607:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 608:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       case HAL_CAN_RX_FIFO1_MSG_PENDING_CB_ID :
 609:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         hcan->RxFifo1MsgPendingCallback = pCallback;
 610:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         break;
 611:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 612:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       case HAL_CAN_RX_FIFO1_FULL_CB_ID :
 613:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         hcan->RxFifo1FullCallback = pCallback;
 614:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         break;
 615:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 616:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       case HAL_CAN_SLEEP_CB_ID :
 617:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         hcan->SleepCallback = pCallback;
 618:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         break;
 619:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 620:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       case HAL_CAN_WAKEUP_FROM_RX_MSG_CB_ID :
 621:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         hcan->WakeUpFromRxMsgCallback = pCallback;
 622:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         break;
 623:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 20


 624:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       case HAL_CAN_ERROR_CB_ID :
 625:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         hcan->ErrorCallback = pCallback;
 626:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         break;
 627:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 628:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       case HAL_CAN_MSPINIT_CB_ID :
 629:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         hcan->MspInitCallback = pCallback;
 630:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         break;
 631:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 632:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       case HAL_CAN_MSPDEINIT_CB_ID :
 633:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         hcan->MspDeInitCallback = pCallback;
 634:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         break;
 635:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 636:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       default :
 637:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         /* Update the error code */
 638:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_INVALID_CALLBACK;
 639:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 640:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         /* Return error status */
 641:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         status =  HAL_ERROR;
 642:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         break;
 643:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 644:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 645:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   else if (hcan->State == HAL_CAN_STATE_RESET)
 646:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 647:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     switch (CallbackID)
 648:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 649:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       case HAL_CAN_MSPINIT_CB_ID :
 650:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         hcan->MspInitCallback = pCallback;
 651:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         break;
 652:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 653:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       case HAL_CAN_MSPDEINIT_CB_ID :
 654:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         hcan->MspDeInitCallback = pCallback;
 655:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         break;
 656:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 657:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       default :
 658:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         /* Update the error code */
 659:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_INVALID_CALLBACK;
 660:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 661:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         /* Return error status */
 662:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         status =  HAL_ERROR;
 663:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         break;
 664:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 665:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 666:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   else
 667:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 668:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Update the error code */
 669:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_INVALID_CALLBACK;
 670:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 671:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Return error status */
 672:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     status =  HAL_ERROR;
 673:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 674:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 675:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   return status;
 676:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** }
 677:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 678:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /**
 679:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @brief  Unregister a CAN CallBack.
 680:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         CAN callback is redirected to the weak predefined callback
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 21


 681:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
 682:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         the configuration information for CAN module
 683:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  CallbackID ID of the callback to be unregistered
 684:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         This parameter can be one of the following values:
 685:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX0_COMPLETE_CB_ID Tx Mailbox 0 Complete callback ID
 686:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX1_COMPLETE_CB_ID Tx Mailbox 1 Complete callback ID
 687:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX2_COMPLETE_CB_ID Tx Mailbox 2 Complete callback ID
 688:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX0_ABORT_CB_ID Tx Mailbox 0 Abort callback ID
 689:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX1_ABORT_CB_ID Tx Mailbox 1 Abort callback ID
 690:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX2_ABORT_CB_ID Tx Mailbox 2 Abort callback ID
 691:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *           @arg @ref HAL_CAN_RX_FIFO0_MSG_PENDING_CB_ID Rx Fifo 0 message pending callback ID
 692:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *           @arg @ref HAL_CAN_RX_FIFO0_FULL_CB_ID Rx Fifo 0 full callback ID
 693:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *           @arg @ref HAL_CAN_RX_FIFO1_MSG_PENDING_CB_ID Rx Fifo 1 message pending callback ID
 694:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *           @arg @ref HAL_CAN_RX_FIFO1_FULL_CB_ID Rx Fifo 1 full callback ID
 695:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *           @arg @ref HAL_CAN_SLEEP_CB_ID Sleep callback ID
 696:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *           @arg @ref HAL_CAN_WAKEUP_FROM_RX_MSG_CB_ID Wake Up from Rx message callback ID
 697:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *           @arg @ref HAL_CAN_ERROR_CB_ID Error callback ID
 698:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *           @arg @ref HAL_CAN_MSPINIT_CB_ID MspInit callback ID
 699:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *           @arg @ref HAL_CAN_MSPDEINIT_CB_ID MspDeInit callback ID
 700:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @retval HAL status
 701:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
 702:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_UnRegisterCallback(CAN_HandleTypeDef *hcan, HAL_CAN_CallbackIDTypeDef Cal
 703:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** {
 704:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   HAL_StatusTypeDef status = HAL_OK;
 705:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 706:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   if (hcan->State == HAL_CAN_STATE_READY)
 707:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 708:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     switch (CallbackID)
 709:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 710:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX0_COMPLETE_CB_ID :
 711:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         hcan->TxMailbox0CompleteCallback = HAL_CAN_TxMailbox0CompleteCallback;
 712:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         break;
 713:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 714:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX1_COMPLETE_CB_ID :
 715:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         hcan->TxMailbox1CompleteCallback = HAL_CAN_TxMailbox1CompleteCallback;
 716:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         break;
 717:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 718:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX2_COMPLETE_CB_ID :
 719:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         hcan->TxMailbox2CompleteCallback = HAL_CAN_TxMailbox2CompleteCallback;
 720:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         break;
 721:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 722:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX0_ABORT_CB_ID :
 723:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         hcan->TxMailbox0AbortCallback = HAL_CAN_TxMailbox0AbortCallback;
 724:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         break;
 725:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 726:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX1_ABORT_CB_ID :
 727:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         hcan->TxMailbox1AbortCallback = HAL_CAN_TxMailbox1AbortCallback;
 728:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         break;
 729:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 730:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX2_ABORT_CB_ID :
 731:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         hcan->TxMailbox2AbortCallback = HAL_CAN_TxMailbox2AbortCallback;
 732:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         break;
 733:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 734:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       case HAL_CAN_RX_FIFO0_MSG_PENDING_CB_ID :
 735:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         hcan->RxFifo0MsgPendingCallback = HAL_CAN_RxFifo0MsgPendingCallback;
 736:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         break;
 737:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 22


 738:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       case HAL_CAN_RX_FIFO0_FULL_CB_ID :
 739:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         hcan->RxFifo0FullCallback = HAL_CAN_RxFifo0FullCallback;
 740:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         break;
 741:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 742:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       case HAL_CAN_RX_FIFO1_MSG_PENDING_CB_ID :
 743:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         hcan->RxFifo1MsgPendingCallback = HAL_CAN_RxFifo1MsgPendingCallback;
 744:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         break;
 745:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 746:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       case HAL_CAN_RX_FIFO1_FULL_CB_ID :
 747:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         hcan->RxFifo1FullCallback = HAL_CAN_RxFifo1FullCallback;
 748:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         break;
 749:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 750:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       case HAL_CAN_SLEEP_CB_ID :
 751:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         hcan->SleepCallback = HAL_CAN_SleepCallback;
 752:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         break;
 753:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 754:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       case HAL_CAN_WAKEUP_FROM_RX_MSG_CB_ID :
 755:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         hcan->WakeUpFromRxMsgCallback = HAL_CAN_WakeUpFromRxMsgCallback;
 756:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         break;
 757:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 758:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       case HAL_CAN_ERROR_CB_ID :
 759:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         hcan->ErrorCallback = HAL_CAN_ErrorCallback;
 760:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         break;
 761:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 762:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       case HAL_CAN_MSPINIT_CB_ID :
 763:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         hcan->MspInitCallback = HAL_CAN_MspInit;
 764:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         break;
 765:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 766:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       case HAL_CAN_MSPDEINIT_CB_ID :
 767:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         hcan->MspDeInitCallback = HAL_CAN_MspDeInit;
 768:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         break;
 769:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 770:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       default :
 771:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         /* Update the error code */
 772:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_INVALID_CALLBACK;
 773:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 774:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         /* Return error status */
 775:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         status =  HAL_ERROR;
 776:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         break;
 777:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 778:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 779:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   else if (hcan->State == HAL_CAN_STATE_RESET)
 780:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 781:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     switch (CallbackID)
 782:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 783:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       case HAL_CAN_MSPINIT_CB_ID :
 784:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         hcan->MspInitCallback = HAL_CAN_MspInit;
 785:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         break;
 786:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 787:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       case HAL_CAN_MSPDEINIT_CB_ID :
 788:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         hcan->MspDeInitCallback = HAL_CAN_MspDeInit;
 789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         break;
 790:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 791:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       default :
 792:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         /* Update the error code */
 793:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_INVALID_CALLBACK;
 794:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 23


 795:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         /* Return error status */
 796:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         status =  HAL_ERROR;
 797:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         break;
 798:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 799:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 800:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   else
 801:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 802:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Update the error code */
 803:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_INVALID_CALLBACK;
 804:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 805:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Return error status */
 806:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     status =  HAL_ERROR;
 807:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 808:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 809:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   return status;
 810:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** }
 811:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 812:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 813:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /**
 814:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @}
 815:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
 816:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 817:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /** @defgroup CAN_Exported_Functions_Group2 Configuration functions
 818:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @brief    Configuration functions.
 819:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *
 820:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** @verbatim
 821:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   ==============================================================================
 822:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****               ##### Configuration functions #####
 823:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   ==============================================================================
 824:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     [..]  This section provides functions allowing to:
 825:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (+) HAL_CAN_ConfigFilter            : Configure the CAN reception filters
 826:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 827:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** @endverbatim
 828:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @{
 829:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
 830:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 831:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /**
 832:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @brief  Configures the CAN reception filter according to the specified
 833:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         parameters in the CAN_FilterInitStruct.
 834:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
 835:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         the configuration information for the specified CAN.
 836:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  sFilterConfig pointer to a CAN_FilterTypeDef structure that
 837:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         contains the filter configuration information.
 838:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @retval None
 839:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
 840:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_ConfigFilter(CAN_HandleTypeDef *hcan, const CAN_FilterTypeDef *sFilterCon
 841:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** {
 368              		.loc 1 841 1 is_stmt 1 view -0
 369              		.cfi_startproc
 370              		@ args = 0, pretend = 0, frame = 0
 371              		@ frame_needed = 0, uses_anonymous_args = 0
 372              		@ link register save eliminated.
 842:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   uint32_t filternbrbitpos;
 373              		.loc 1 842 3 view .LVU107
 843:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   CAN_TypeDef *can_ip = hcan->Instance;
 374              		.loc 1 843 3 view .LVU108
 375              		.loc 1 843 16 is_stmt 0 view .LVU109
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 24


 376 0000 0268     		ldr	r2, [r0]
 377              	.LVL16:
 844:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 378              		.loc 1 844 3 is_stmt 1 view .LVU110
 379              		.loc 1 844 24 is_stmt 0 view .LVU111
 380 0002 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 381              	.LVL17:
 845:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 846:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 382              		.loc 1 846 3 is_stmt 1 view .LVU112
 383              		.loc 1 846 38 is_stmt 0 view .LVU113
 384 0006 013B     		subs	r3, r3, #1
 385              	.LVL18:
 386              		.loc 1 846 38 view .LVU114
 387 0008 DBB2     		uxtb	r3, r3
 388              	.LVL19:
 389              		.loc 1 846 6 view .LVU115
 390 000a 012B     		cmp	r3, #1
 391 000c 05D9     		bls	.L50
 847:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 848:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 849:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Check the parameters */
 850:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ID_HALFWORD(sFilterConfig->FilterIdHigh));
 851:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ID_HALFWORD(sFilterConfig->FilterIdLow));
 852:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ID_HALFWORD(sFilterConfig->FilterMaskIdHigh));
 853:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ID_HALFWORD(sFilterConfig->FilterMaskIdLow));
 854:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_MODE(sFilterConfig->FilterMode));
 855:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_SCALE(sFilterConfig->FilterScale));
 856:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_FIFO(sFilterConfig->FilterFIFOAssignment));
 857:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ACTIVATION(sFilterConfig->FilterActivation));
 858:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 859:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #if   defined(CAN2)
 860:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* CAN1 and CAN2 are dual instances with 28 common filters banks */
 861:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Select master instance to access the filter banks */
 862:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     can_ip = CAN1;
 863:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 864:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Check the parameters */
 865:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_BANK_DUAL(sFilterConfig->FilterBank));
 866:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_BANK_DUAL(sFilterConfig->SlaveStartFilterBank));
 867:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #else
 868:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* CAN1 is single instance with 14 dedicated filters banks */
 869:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 870:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Check the parameters */
 871:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_BANK_SINGLE(sFilterConfig->FilterBank));
 872:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #endif /* CAN3 */
 873:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 874:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Initialisation mode for the filter */
 875:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     SET_BIT(can_ip->FMR, CAN_FMR_FINIT);
 876:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 877:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #if   defined(CAN2)
 878:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Select the start filter number of CAN2 slave instance */
 879:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     CLEAR_BIT(can_ip->FMR, CAN_FMR_CAN2SB);
 880:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     SET_BIT(can_ip->FMR, sFilterConfig->SlaveStartFilterBank << CAN_FMR_CAN2SB_Pos);
 881:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 882:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #endif /* CAN3 */
 883:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Convert filter number into bit position */
 884:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     filternbrbitpos = (uint32_t)1 << (sFilterConfig->FilterBank & 0x1FU);
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 25


 885:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 886:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Filter Deactivation */
 887:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     CLEAR_BIT(can_ip->FA1R, filternbrbitpos);
 888:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 889:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Filter Scale */
 890:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     if (sFilterConfig->FilterScale == CAN_FILTERSCALE_16BIT)
 891:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 892:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* 16-bit scale for the filter */
 893:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       CLEAR_BIT(can_ip->FS1R, filternbrbitpos);
 894:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 895:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* First 16-bit identifier and First 16-bit mask */
 896:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Or First 16-bit identifier and Second 16-bit identifier */
 897:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       can_ip->sFilterRegister[sFilterConfig->FilterBank].FR1 =
 898:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow) << 16U) |
 899:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdLow);
 900:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 901:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Second 16-bit identifier and Second 16-bit mask */
 902:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Or Third 16-bit identifier and Fourth 16-bit identifier */
 903:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       can_ip->sFilterRegister[sFilterConfig->FilterBank].FR2 =
 904:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 905:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh);
 906:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 907:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 908:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     if (sFilterConfig->FilterScale == CAN_FILTERSCALE_32BIT)
 909:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 910:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* 32-bit scale for the filter */
 911:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       SET_BIT(can_ip->FS1R, filternbrbitpos);
 912:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 913:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* 32-bit identifier or First 32-bit identifier */
 914:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       can_ip->sFilterRegister[sFilterConfig->FilterBank].FR1 =
 915:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh) << 16U) |
 916:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdLow);
 917:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 918:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* 32-bit mask or Second 32-bit identifier */
 919:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       can_ip->sFilterRegister[sFilterConfig->FilterBank].FR2 =
 920:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 921:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow);
 922:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 923:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 924:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Filter Mode */
 925:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     if (sFilterConfig->FilterMode == CAN_FILTERMODE_IDMASK)
 926:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 927:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Id/Mask mode for the filter*/
 928:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       CLEAR_BIT(can_ip->FM1R, filternbrbitpos);
 929:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 930:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     else /* CAN_FilterInitStruct->CAN_FilterMode == CAN_FilterMode_IdList */
 931:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 932:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Identifier list mode for the filter*/
 933:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       SET_BIT(can_ip->FM1R, filternbrbitpos);
 934:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 935:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 936:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Filter FIFO assignment */
 937:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     if (sFilterConfig->FilterFIFOAssignment == CAN_FILTER_FIFO0)
 938:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 939:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* FIFO 0 assignation for the filter */
 940:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       CLEAR_BIT(can_ip->FFA1R, filternbrbitpos);
 941:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 26


 942:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     else
 943:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 944:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* FIFO 1 assignation for the filter */
 945:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       SET_BIT(can_ip->FFA1R, filternbrbitpos);
 946:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 947:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 948:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Filter activation */
 949:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     if (sFilterConfig->FilterActivation == CAN_FILTER_ENABLE)
 950:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 951:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       SET_BIT(can_ip->FA1R, filternbrbitpos);
 952:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 953:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 954:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Leave the initialisation mode for the filter */
 955:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     CLEAR_BIT(can_ip->FMR, CAN_FMR_FINIT);
 956:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 957:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Return function status */
 958:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     return HAL_OK;
 959:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 960:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   else
 961:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 962:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Update error code */
 963:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
 392              		.loc 1 963 5 is_stmt 1 view .LVU116
 393              		.loc 1 963 9 is_stmt 0 view .LVU117
 394 000e 436A     		ldr	r3, [r0, #36]
 395              		.loc 1 963 21 view .LVU118
 396 0010 43F48023 		orr	r3, r3, #262144
 397 0014 4362     		str	r3, [r0, #36]
 964:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 965:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     return HAL_ERROR;
 398              		.loc 1 965 5 is_stmt 1 view .LVU119
 399              		.loc 1 965 12 is_stmt 0 view .LVU120
 400 0016 0120     		movs	r0, #1
 401              	.LVL20:
 966:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 967:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** }
 402              		.loc 1 967 1 view .LVU121
 403 0018 7047     		bx	lr
 404              	.LVL21:
 405              	.L50:
 841:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   uint32_t filternbrbitpos;
 406              		.loc 1 841 1 view .LVU122
 407 001a 30B4     		push	{r4, r5}
 408              		.cfi_def_cfa_offset 8
 409              		.cfi_offset 4, -8
 410              		.cfi_offset 5, -4
 850:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ID_HALFWORD(sFilterConfig->FilterIdLow));
 411              		.loc 1 850 5 is_stmt 1 view .LVU123
 851:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ID_HALFWORD(sFilterConfig->FilterMaskIdHigh));
 412              		.loc 1 851 5 view .LVU124
 852:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ID_HALFWORD(sFilterConfig->FilterMaskIdLow));
 413              		.loc 1 852 5 view .LVU125
 853:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_MODE(sFilterConfig->FilterMode));
 414              		.loc 1 853 5 view .LVU126
 854:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_SCALE(sFilterConfig->FilterScale));
 415              		.loc 1 854 5 view .LVU127
 855:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_FIFO(sFilterConfig->FilterFIFOAssignment));
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 27


 416              		.loc 1 855 5 view .LVU128
 856:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ACTIVATION(sFilterConfig->FilterActivation));
 417              		.loc 1 856 5 view .LVU129
 857:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 418              		.loc 1 857 5 view .LVU130
 871:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #endif /* CAN3 */
 419              		.loc 1 871 5 view .LVU131
 875:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 420              		.loc 1 875 5 view .LVU132
 421 001c D2F80032 		ldr	r3, [r2, #512]
 422 0020 43F00103 		orr	r3, r3, #1
 423 0024 C2F80032 		str	r3, [r2, #512]
 884:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 424              		.loc 1 884 5 view .LVU133
 884:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 425              		.loc 1 884 52 is_stmt 0 view .LVU134
 426 0028 4B69     		ldr	r3, [r1, #20]
 884:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 427              		.loc 1 884 65 view .LVU135
 428 002a 03F01F03 		and	r3, r3, #31
 884:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 429              		.loc 1 884 21 view .LVU136
 430 002e 0120     		movs	r0, #1
 431              	.LVL22:
 884:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 432              		.loc 1 884 21 view .LVU137
 433 0030 00FA03F3 		lsl	r3, r0, r3
 434              	.LVL23:
 887:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 435              		.loc 1 887 5 is_stmt 1 view .LVU138
 436 0034 D2F81C02 		ldr	r0, [r2, #540]
 437 0038 6FEA030C 		mvn	ip, r3
 438 003c 20EA0300 		bic	r0, r0, r3
 439 0040 C2F81C02 		str	r0, [r2, #540]
 890:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 440              		.loc 1 890 5 view .LVU139
 890:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 441              		.loc 1 890 22 is_stmt 0 view .LVU140
 442 0044 C869     		ldr	r0, [r1, #28]
 890:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 443              		.loc 1 890 8 view .LVU141
 444 0046 B0B9     		cbnz	r0, .L38
 893:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 445              		.loc 1 893 7 is_stmt 1 view .LVU142
 446 0048 D2F80C02 		ldr	r0, [r2, #524]
 447 004c 0CEA0000 		and	r0, ip, r0
 448 0050 C2F80C02 		str	r0, [r2, #524]
 897:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow) << 16U) |
 449              		.loc 1 897 7 view .LVU143
 899:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 450              		.loc 1 899 22 is_stmt 0 view .LVU144
 451 0054 8C88     		ldrh	r4, [r1, #4]
 897:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow) << 16U) |
 452              		.loc 1 897 44 view .LVU145
 453 0056 4869     		ldr	r0, [r1, #20]
 898:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdLow);
 454              		.loc 1 898 75 view .LVU146
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 28


 455 0058 CD68     		ldr	r5, [r1, #12]
 456 005a 44EA0544 		orr	r4, r4, r5, lsl #16
 897:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow) << 16U) |
 457              		.loc 1 897 62 view .LVU147
 458 005e 4830     		adds	r0, r0, #72
 459 0060 42F83040 		str	r4, [r2, r0, lsl #3]
 903:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 460              		.loc 1 903 7 is_stmt 1 view .LVU148
 905:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 461              		.loc 1 905 22 is_stmt 0 view .LVU149
 462 0064 0C88     		ldrh	r4, [r1]
 903:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 463              		.loc 1 903 44 view .LVU150
 464 0066 4869     		ldr	r0, [r1, #20]
 904:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh);
 465              		.loc 1 904 76 view .LVU151
 466 0068 8D68     		ldr	r5, [r1, #8]
 467 006a 44EA0544 		orr	r4, r4, r5, lsl #16
 903:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 468              		.loc 1 903 62 view .LVU152
 469 006e 4830     		adds	r0, r0, #72
 470 0070 02EBC000 		add	r0, r2, r0, lsl #3
 471 0074 4460     		str	r4, [r0, #4]
 472              	.L38:
 908:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 473              		.loc 1 908 5 is_stmt 1 view .LVU153
 908:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 474              		.loc 1 908 22 is_stmt 0 view .LVU154
 475 0076 C869     		ldr	r0, [r1, #28]
 908:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 476              		.loc 1 908 8 view .LVU155
 477 0078 0128     		cmp	r0, #1
 478 007a 1BD0     		beq	.L51
 479              	.L39:
 925:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 480              		.loc 1 925 5 is_stmt 1 view .LVU156
 925:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 481              		.loc 1 925 22 is_stmt 0 view .LVU157
 482 007c 8869     		ldr	r0, [r1, #24]
 925:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 483              		.loc 1 925 8 view .LVU158
 484 007e 80BB     		cbnz	r0, .L40
 928:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 485              		.loc 1 928 7 is_stmt 1 view .LVU159
 486 0080 D2F80402 		ldr	r0, [r2, #516]
 487 0084 0CEA0000 		and	r0, ip, r0
 488 0088 C2F80402 		str	r0, [r2, #516]
 489              	.L41:
 937:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 490              		.loc 1 937 5 view .LVU160
 937:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 491              		.loc 1 937 22 is_stmt 0 view .LVU161
 492 008c 0869     		ldr	r0, [r1, #16]
 937:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 493              		.loc 1 937 8 view .LVU162
 494 008e 70BB     		cbnz	r0, .L42
 940:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 29


 495              		.loc 1 940 7 is_stmt 1 view .LVU163
 496 0090 D2F81402 		ldr	r0, [r2, #532]
 497 0094 0CEA0000 		and	r0, ip, r0
 498 0098 C2F81402 		str	r0, [r2, #532]
 499              	.L43:
 949:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 500              		.loc 1 949 5 view .LVU164
 949:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 501              		.loc 1 949 22 is_stmt 0 view .LVU165
 502 009c 096A     		ldr	r1, [r1, #32]
 503              	.LVL24:
 949:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 504              		.loc 1 949 8 view .LVU166
 505 009e 0129     		cmp	r1, #1
 506 00a0 2BD0     		beq	.L52
 507              	.LVL25:
 508              	.L44:
 955:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 509              		.loc 1 955 5 is_stmt 1 view .LVU167
 510 00a2 D2F80032 		ldr	r3, [r2, #512]
 511 00a6 23F00103 		bic	r3, r3, #1
 512 00aa C2F80032 		str	r3, [r2, #512]
 958:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 513              		.loc 1 958 5 view .LVU168
 958:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 514              		.loc 1 958 12 is_stmt 0 view .LVU169
 515 00ae 0020     		movs	r0, #0
 516              		.loc 1 967 1 view .LVU170
 517 00b0 30BC     		pop	{r4, r5}
 518              		.cfi_remember_state
 519              		.cfi_restore 5
 520              		.cfi_restore 4
 521              		.cfi_def_cfa_offset 0
 522 00b2 7047     		bx	lr
 523              	.LVL26:
 524              	.L51:
 525              		.cfi_restore_state
 911:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 526              		.loc 1 911 7 is_stmt 1 view .LVU171
 527 00b4 D2F80C02 		ldr	r0, [r2, #524]
 528 00b8 1843     		orrs	r0, r0, r3
 529 00ba C2F80C02 		str	r0, [r2, #524]
 914:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh) << 16U) |
 530              		.loc 1 914 7 view .LVU172
 916:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 531              		.loc 1 916 22 is_stmt 0 view .LVU173
 532 00be 8C88     		ldrh	r4, [r1, #4]
 914:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh) << 16U) |
 533              		.loc 1 914 44 view .LVU174
 534 00c0 4869     		ldr	r0, [r1, #20]
 915:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdLow);
 535              		.loc 1 915 72 view .LVU175
 536 00c2 0D68     		ldr	r5, [r1]
 537 00c4 44EA0544 		orr	r4, r4, r5, lsl #16
 914:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh) << 16U) |
 538              		.loc 1 914 62 view .LVU176
 539 00c8 4830     		adds	r0, r0, #72
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 30


 540 00ca 42F83040 		str	r4, [r2, r0, lsl #3]
 919:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 541              		.loc 1 919 7 is_stmt 1 view .LVU177
 921:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 542              		.loc 1 921 22 is_stmt 0 view .LVU178
 543 00ce 8C89     		ldrh	r4, [r1, #12]
 919:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 544              		.loc 1 919 44 view .LVU179
 545 00d0 4869     		ldr	r0, [r1, #20]
 920:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow);
 546              		.loc 1 920 76 view .LVU180
 547 00d2 8D68     		ldr	r5, [r1, #8]
 548 00d4 44EA0544 		orr	r4, r4, r5, lsl #16
 919:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 549              		.loc 1 919 62 view .LVU181
 550 00d8 4830     		adds	r0, r0, #72
 551 00da 02EBC000 		add	r0, r2, r0, lsl #3
 552 00de 4460     		str	r4, [r0, #4]
 553 00e0 CCE7     		b	.L39
 554              	.L40:
 933:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 555              		.loc 1 933 7 is_stmt 1 view .LVU182
 556 00e2 D2F80402 		ldr	r0, [r2, #516]
 557 00e6 1843     		orrs	r0, r0, r3
 558 00e8 C2F80402 		str	r0, [r2, #516]
 559 00ec CEE7     		b	.L41
 560              	.L42:
 945:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 561              		.loc 1 945 7 view .LVU183
 562 00ee D2F81402 		ldr	r0, [r2, #532]
 563 00f2 1843     		orrs	r0, r0, r3
 564 00f4 C2F81402 		str	r0, [r2, #532]
 565 00f8 D0E7     		b	.L43
 566              	.LVL27:
 567              	.L52:
 951:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 568              		.loc 1 951 7 view .LVU184
 569 00fa D2F81C12 		ldr	r1, [r2, #540]
 570 00fe 0B43     		orrs	r3, r3, r1
 571              	.LVL28:
 951:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 572              		.loc 1 951 7 is_stmt 0 view .LVU185
 573 0100 C2F81C32 		str	r3, [r2, #540]
 574 0104 CDE7     		b	.L44
 575              		.cfi_endproc
 576              	.LFE292:
 578              		.section	.text.HAL_CAN_Start,"ax",%progbits
 579              		.align	1
 580              		.global	HAL_CAN_Start
 581              		.syntax unified
 582              		.thumb
 583              		.thumb_func
 585              	HAL_CAN_Start:
 586              	.LVL29:
 587              	.LFB293:
 968:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 969:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /**
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 31


 970:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @}
 971:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
 972:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 973:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /** @defgroup CAN_Exported_Functions_Group3 Control functions
 974:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @brief    Control functions
 975:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *
 976:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** @verbatim
 977:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   ==============================================================================
 978:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****                       ##### Control functions #####
 979:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   ==============================================================================
 980:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     [..]  This section provides functions allowing to:
 981:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (+) HAL_CAN_Start                    : Start the CAN module
 982:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (+) HAL_CAN_Stop                     : Stop the CAN module
 983:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (+) HAL_CAN_RequestSleep             : Request sleep mode entry.
 984:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (+) HAL_CAN_WakeUp                   : Wake up from sleep mode.
 985:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (+) HAL_CAN_IsSleepActive            : Check is sleep mode is active.
 986:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (+) HAL_CAN_AddTxMessage             : Add a message to the Tx mailboxes
 987:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****                                              and activate the corresponding
 988:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****                                              transmission request
 989:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (+) HAL_CAN_AbortTxRequest           : Abort transmission request
 990:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (+) HAL_CAN_GetTxMailboxesFreeLevel  : Return Tx mailboxes free level
 991:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (+) HAL_CAN_IsTxMessagePending       : Check if a transmission request is
 992:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****                                              pending on the selected Tx mailbox
 993:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (+) HAL_CAN_GetRxMessage             : Get a CAN frame from the Rx FIFO
 994:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (+) HAL_CAN_GetRxFifoFillLevel       : Return Rx FIFO fill level
 995:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 996:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** @endverbatim
 997:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @{
 998:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
 999:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1000:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /**
1001:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @brief  Start the CAN module.
1002:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
1003:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         the configuration information for the specified CAN.
1004:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @retval HAL status
1005:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
1006:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_Start(CAN_HandleTypeDef *hcan)
1007:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** {
 588              		.loc 1 1007 1 is_stmt 1 view -0
 589              		.cfi_startproc
 590              		@ args = 0, pretend = 0, frame = 0
 591              		@ frame_needed = 0, uses_anonymous_args = 0
 592              		.loc 1 1007 1 is_stmt 0 view .LVU187
 593 0000 70B5     		push	{r4, r5, r6, lr}
 594              		.cfi_def_cfa_offset 16
 595              		.cfi_offset 4, -16
 596              		.cfi_offset 5, -12
 597              		.cfi_offset 6, -8
 598              		.cfi_offset 14, -4
 599 0002 0446     		mov	r4, r0
1008:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   uint32_t tickstart;
 600              		.loc 1 1008 3 is_stmt 1 view .LVU188
1009:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1010:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   if (hcan->State == HAL_CAN_STATE_READY)
 601              		.loc 1 1010 3 view .LVU189
 602              		.loc 1 1010 11 is_stmt 0 view .LVU190
 603 0004 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 32


 604              		.loc 1 1010 6 view .LVU191
 605 0008 012B     		cmp	r3, #1
 606 000a 06D0     		beq	.L59
1011:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
1012:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Change CAN peripheral state */
1013:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     hcan->State = HAL_CAN_STATE_LISTENING;
1014:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1015:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Request leave initialisation */
1016:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_INRQ);
1017:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1018:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Get tick */
1019:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     tickstart = HAL_GetTick();
1020:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1021:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Wait the acknowledge */
1022:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     while ((hcan->Instance->MSR & CAN_MSR_INAK) != 0U)
1023:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
1024:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Check for the Timeout */
1025:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       if ((HAL_GetTick() - tickstart) > CAN_TIMEOUT_VALUE)
1026:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       {
1027:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         /* Update error code */
1028:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_TIMEOUT;
1029:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1030:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         /* Change CAN state */
1031:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_ERROR;
1032:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1033:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         return HAL_ERROR;
1034:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       }
1035:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
1036:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1037:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Reset the CAN ErrorCode */
1038:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     hcan->ErrorCode = HAL_CAN_ERROR_NONE;
1039:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1040:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Return function status */
1041:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     return HAL_OK;
1042:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
1043:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   else
1044:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
1045:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Update error code */
1046:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_READY;
 607              		.loc 1 1046 5 is_stmt 1 view .LVU192
 608              		.loc 1 1046 9 is_stmt 0 view .LVU193
 609 000c 436A     		ldr	r3, [r0, #36]
 610              		.loc 1 1046 21 view .LVU194
 611 000e 43F40023 		orr	r3, r3, #524288
 612 0012 4362     		str	r3, [r0, #36]
1047:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1048:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     return HAL_ERROR;
 613              		.loc 1 1048 5 is_stmt 1 view .LVU195
 614              		.loc 1 1048 12 is_stmt 0 view .LVU196
 615 0014 0126     		movs	r6, #1
 616              	.LVL30:
 617              	.L56:
1049:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
1050:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** }
 618              		.loc 1 1050 1 view .LVU197
 619 0016 3046     		mov	r0, r6
 620 0018 70BD     		pop	{r4, r5, r6, pc}
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 33


 621              	.LVL31:
 622              	.L59:
 623              		.loc 1 1050 1 view .LVU198
 624 001a DEB2     		uxtb	r6, r3
1013:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 625              		.loc 1 1013 5 is_stmt 1 view .LVU199
1013:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 626              		.loc 1 1013 17 is_stmt 0 view .LVU200
 627 001c 0223     		movs	r3, #2
 628 001e 80F82030 		strb	r3, [r0, #32]
1016:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 629              		.loc 1 1016 5 is_stmt 1 view .LVU201
 630 0022 0268     		ldr	r2, [r0]
 631 0024 1368     		ldr	r3, [r2]
 632 0026 23F00103 		bic	r3, r3, #1
 633 002a 1360     		str	r3, [r2]
1019:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 634              		.loc 1 1019 5 view .LVU202
1019:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 635              		.loc 1 1019 17 is_stmt 0 view .LVU203
 636 002c FFF7FEFF 		bl	HAL_GetTick
 637              	.LVL32:
1019:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 638              		.loc 1 1019 17 view .LVU204
 639 0030 0546     		mov	r5, r0
 640              	.LVL33:
1022:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 641              		.loc 1 1022 5 is_stmt 1 view .LVU205
 642              	.L55:
1022:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 643              		.loc 1 1022 49 view .LVU206
1022:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 644              		.loc 1 1022 17 is_stmt 0 view .LVU207
 645 0032 2368     		ldr	r3, [r4]
1022:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 646              		.loc 1 1022 27 view .LVU208
 647 0034 5B68     		ldr	r3, [r3, #4]
1022:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 648              		.loc 1 1022 49 view .LVU209
 649 0036 13F0010F 		tst	r3, #1
 650 003a 0CD0     		beq	.L60
1025:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       {
 651              		.loc 1 1025 7 is_stmt 1 view .LVU210
1025:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       {
 652              		.loc 1 1025 12 is_stmt 0 view .LVU211
 653 003c FFF7FEFF 		bl	HAL_GetTick
 654              	.LVL34:
1025:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       {
 655              		.loc 1 1025 26 discriminator 1 view .LVU212
 656 0040 431B     		subs	r3, r0, r5
1025:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       {
 657              		.loc 1 1025 10 discriminator 1 view .LVU213
 658 0042 0A2B     		cmp	r3, #10
 659 0044 F5D9     		bls	.L55
1028:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 660              		.loc 1 1028 9 is_stmt 1 view .LVU214
1028:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 34


 661              		.loc 1 1028 13 is_stmt 0 view .LVU215
 662 0046 636A     		ldr	r3, [r4, #36]
1028:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 663              		.loc 1 1028 25 view .LVU216
 664 0048 43F40033 		orr	r3, r3, #131072
 665 004c 6362     		str	r3, [r4, #36]
1031:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 666              		.loc 1 1031 9 is_stmt 1 view .LVU217
1031:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 667              		.loc 1 1031 21 is_stmt 0 view .LVU218
 668 004e 0523     		movs	r3, #5
 669 0050 84F82030 		strb	r3, [r4, #32]
1033:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       }
 670              		.loc 1 1033 9 is_stmt 1 view .LVU219
1033:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       }
 671              		.loc 1 1033 16 is_stmt 0 view .LVU220
 672 0054 DFE7     		b	.L56
 673              	.L60:
1038:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 674              		.loc 1 1038 5 is_stmt 1 view .LVU221
1038:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 675              		.loc 1 1038 21 is_stmt 0 view .LVU222
 676 0056 0026     		movs	r6, #0
 677 0058 6662     		str	r6, [r4, #36]
1041:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 678              		.loc 1 1041 5 is_stmt 1 view .LVU223
1041:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 679              		.loc 1 1041 12 is_stmt 0 view .LVU224
 680 005a DCE7     		b	.L56
 681              		.cfi_endproc
 682              	.LFE293:
 684              		.section	.text.HAL_CAN_Stop,"ax",%progbits
 685              		.align	1
 686              		.global	HAL_CAN_Stop
 687              		.syntax unified
 688              		.thumb
 689              		.thumb_func
 691              	HAL_CAN_Stop:
 692              	.LVL35:
 693              	.LFB294:
1051:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1052:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /**
1053:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @brief  Stop the CAN module and enable access to configuration registers.
1054:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
1055:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         the configuration information for the specified CAN.
1056:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @retval HAL status
1057:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
1058:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_Stop(CAN_HandleTypeDef *hcan)
1059:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** {
 694              		.loc 1 1059 1 is_stmt 1 view -0
 695              		.cfi_startproc
 696              		@ args = 0, pretend = 0, frame = 0
 697              		@ frame_needed = 0, uses_anonymous_args = 0
 698              		.loc 1 1059 1 is_stmt 0 view .LVU226
 699 0000 38B5     		push	{r3, r4, r5, lr}
 700              		.cfi_def_cfa_offset 16
 701              		.cfi_offset 3, -16
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 35


 702              		.cfi_offset 4, -12
 703              		.cfi_offset 5, -8
 704              		.cfi_offset 14, -4
 705 0002 0446     		mov	r4, r0
1060:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   uint32_t tickstart;
 706              		.loc 1 1060 3 is_stmt 1 view .LVU227
1061:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1062:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   if (hcan->State == HAL_CAN_STATE_LISTENING)
 707              		.loc 1 1062 3 view .LVU228
 708              		.loc 1 1062 11 is_stmt 0 view .LVU229
 709 0004 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 710              		.loc 1 1062 6 view .LVU230
 711 0008 022B     		cmp	r3, #2
 712 000a 05D0     		beq	.L67
1063:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
1064:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Request initialisation */
1065:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     SET_BIT(hcan->Instance->MCR, CAN_MCR_INRQ);
1066:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1067:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Get tick */
1068:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     tickstart = HAL_GetTick();
1069:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1070:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Wait the acknowledge */
1071:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     while ((hcan->Instance->MSR & CAN_MSR_INAK) == 0U)
1072:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
1073:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Check for the Timeout */
1074:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       if ((HAL_GetTick() - tickstart) > CAN_TIMEOUT_VALUE)
1075:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       {
1076:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         /* Update error code */
1077:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_TIMEOUT;
1078:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1079:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         /* Change CAN state */
1080:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_ERROR;
1081:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1082:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         return HAL_ERROR;
1083:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       }
1084:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
1085:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1086:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Exit from sleep mode */
1087:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_SLEEP);
1088:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1089:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Change CAN peripheral state */
1090:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     hcan->State = HAL_CAN_STATE_READY;
1091:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1092:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Return function status */
1093:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     return HAL_OK;
1094:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
1095:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   else
1096:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
1097:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Update error code */
1098:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_STARTED;
 713              		.loc 1 1098 5 is_stmt 1 view .LVU231
 714              		.loc 1 1098 9 is_stmt 0 view .LVU232
 715 000c 436A     		ldr	r3, [r0, #36]
 716              		.loc 1 1098 21 view .LVU233
 717 000e 43F48013 		orr	r3, r3, #1048576
 718 0012 4362     		str	r3, [r0, #36]
1099:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 36


1100:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     return HAL_ERROR;
 719              		.loc 1 1100 5 is_stmt 1 view .LVU234
 720              		.loc 1 1100 12 is_stmt 0 view .LVU235
 721 0014 0120     		movs	r0, #1
 722              	.LVL36:
 723              	.L64:
1101:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
1102:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** }
 724              		.loc 1 1102 1 view .LVU236
 725 0016 38BD     		pop	{r3, r4, r5, pc}
 726              	.LVL37:
 727              	.L67:
1065:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 728              		.loc 1 1065 5 is_stmt 1 view .LVU237
 729 0018 0268     		ldr	r2, [r0]
 730 001a 1368     		ldr	r3, [r2]
 731 001c 43F00103 		orr	r3, r3, #1
 732 0020 1360     		str	r3, [r2]
1068:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 733              		.loc 1 1068 5 view .LVU238
1068:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 734              		.loc 1 1068 17 is_stmt 0 view .LVU239
 735 0022 FFF7FEFF 		bl	HAL_GetTick
 736              	.LVL38:
1068:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 737              		.loc 1 1068 17 view .LVU240
 738 0026 0546     		mov	r5, r0
 739              	.LVL39:
1071:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 740              		.loc 1 1071 5 is_stmt 1 view .LVU241
 741              	.L63:
1071:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 742              		.loc 1 1071 49 view .LVU242
1071:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 743              		.loc 1 1071 17 is_stmt 0 view .LVU243
 744 0028 2368     		ldr	r3, [r4]
1071:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 745              		.loc 1 1071 27 view .LVU244
 746 002a 5A68     		ldr	r2, [r3, #4]
1071:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 747              		.loc 1 1071 49 view .LVU245
 748 002c 12F0010F 		tst	r2, #1
 749 0030 0DD1     		bne	.L68
1074:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       {
 750              		.loc 1 1074 7 is_stmt 1 view .LVU246
1074:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       {
 751              		.loc 1 1074 12 is_stmt 0 view .LVU247
 752 0032 FFF7FEFF 		bl	HAL_GetTick
 753              	.LVL40:
1074:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       {
 754              		.loc 1 1074 26 discriminator 1 view .LVU248
 755 0036 431B     		subs	r3, r0, r5
1074:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       {
 756              		.loc 1 1074 10 discriminator 1 view .LVU249
 757 0038 0A2B     		cmp	r3, #10
 758 003a F5D9     		bls	.L63
1077:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 37


 759              		.loc 1 1077 9 is_stmt 1 view .LVU250
1077:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 760              		.loc 1 1077 13 is_stmt 0 view .LVU251
 761 003c 636A     		ldr	r3, [r4, #36]
1077:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 762              		.loc 1 1077 25 view .LVU252
 763 003e 43F40033 		orr	r3, r3, #131072
 764 0042 6362     		str	r3, [r4, #36]
1080:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 765              		.loc 1 1080 9 is_stmt 1 view .LVU253
1080:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 766              		.loc 1 1080 21 is_stmt 0 view .LVU254
 767 0044 0523     		movs	r3, #5
 768 0046 84F82030 		strb	r3, [r4, #32]
1082:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       }
 769              		.loc 1 1082 9 is_stmt 1 view .LVU255
1082:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       }
 770              		.loc 1 1082 16 is_stmt 0 view .LVU256
 771 004a 0120     		movs	r0, #1
 772 004c E3E7     		b	.L64
 773              	.L68:
1087:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 774              		.loc 1 1087 5 is_stmt 1 view .LVU257
 775 004e 1A68     		ldr	r2, [r3]
 776 0050 22F00202 		bic	r2, r2, #2
 777 0054 1A60     		str	r2, [r3]
1090:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 778              		.loc 1 1090 5 view .LVU258
1090:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 779              		.loc 1 1090 17 is_stmt 0 view .LVU259
 780 0056 0123     		movs	r3, #1
 781 0058 84F82030 		strb	r3, [r4, #32]
1093:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 782              		.loc 1 1093 5 is_stmt 1 view .LVU260
1093:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 783              		.loc 1 1093 12 is_stmt 0 view .LVU261
 784 005c 0020     		movs	r0, #0
 785 005e DAE7     		b	.L64
 786              		.cfi_endproc
 787              	.LFE294:
 789              		.section	.text.HAL_CAN_DeInit,"ax",%progbits
 790              		.align	1
 791              		.global	HAL_CAN_DeInit
 792              		.syntax unified
 793              		.thumb
 794              		.thumb_func
 796              	HAL_CAN_DeInit:
 797              	.LVL41:
 798              	.LFB289:
 461:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Check CAN handle */
 799              		.loc 1 461 1 is_stmt 1 view -0
 800              		.cfi_startproc
 801              		@ args = 0, pretend = 0, frame = 0
 802              		@ frame_needed = 0, uses_anonymous_args = 0
 463:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 803              		.loc 1 463 3 view .LVU263
 463:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 38


 804              		.loc 1 463 6 is_stmt 0 view .LVU264
 805 0000 80B1     		cbz	r0, .L71
 461:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Check CAN handle */
 806              		.loc 1 461 1 view .LVU265
 807 0002 10B5     		push	{r4, lr}
 808              		.cfi_def_cfa_offset 8
 809              		.cfi_offset 4, -8
 810              		.cfi_offset 14, -4
 811 0004 0446     		mov	r4, r0
 469:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 812              		.loc 1 469 3 is_stmt 1 view .LVU266
 472:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 813              		.loc 1 472 3 view .LVU267
 472:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 814              		.loc 1 472 9 is_stmt 0 view .LVU268
 815 0006 FFF7FEFF 		bl	HAL_CAN_Stop
 816              	.LVL42:
 485:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 817              		.loc 1 485 3 is_stmt 1 view .LVU269
 818 000a 2046     		mov	r0, r4
 819 000c FFF7FEFF 		bl	HAL_CAN_MspDeInit
 820              	.LVL43:
 489:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 821              		.loc 1 489 3 view .LVU270
 822 0010 2268     		ldr	r2, [r4]
 823 0012 1368     		ldr	r3, [r2]
 824 0014 43F40043 		orr	r3, r3, #32768
 825 0018 1360     		str	r3, [r2]
 492:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 826              		.loc 1 492 3 view .LVU271
 492:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 827              		.loc 1 492 19 is_stmt 0 view .LVU272
 828 001a 0020     		movs	r0, #0
 829 001c 6062     		str	r0, [r4, #36]
 495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 830              		.loc 1 495 3 is_stmt 1 view .LVU273
 495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 831              		.loc 1 495 15 is_stmt 0 view .LVU274
 832 001e 84F82000 		strb	r0, [r4, #32]
 498:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** }
 833              		.loc 1 498 3 is_stmt 1 view .LVU275
 499:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 834              		.loc 1 499 1 is_stmt 0 view .LVU276
 835 0022 10BD     		pop	{r4, pc}
 836              	.LVL44:
 837              	.L71:
 838              		.cfi_def_cfa_offset 0
 839              		.cfi_restore 4
 840              		.cfi_restore 14
 465:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 841              		.loc 1 465 12 view .LVU277
 842 0024 0120     		movs	r0, #1
 843              	.LVL45:
 499:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 844              		.loc 1 499 1 view .LVU278
 845 0026 7047     		bx	lr
 846              		.cfi_endproc
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 39


 847              	.LFE289:
 849              		.section	.text.HAL_CAN_RequestSleep,"ax",%progbits
 850              		.align	1
 851              		.global	HAL_CAN_RequestSleep
 852              		.syntax unified
 853              		.thumb
 854              		.thumb_func
 856              	HAL_CAN_RequestSleep:
 857              	.LVL46:
 858              	.LFB295:
1103:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1104:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /**
1105:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @brief  Request the sleep mode (low power) entry.
1106:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         When returning from this function, Sleep mode will be entered
1107:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         as soon as the current CAN activity (transmission or reception
1108:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         of a CAN frame) has been completed.
1109:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1110:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         the configuration information for the specified CAN.
1111:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @retval HAL status.
1112:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
1113:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_RequestSleep(CAN_HandleTypeDef *hcan)
1114:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** {
 859              		.loc 1 1114 1 is_stmt 1 view -0
 860              		.cfi_startproc
 861              		@ args = 0, pretend = 0, frame = 0
 862              		@ frame_needed = 0, uses_anonymous_args = 0
 863              		@ link register save eliminated.
1115:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 864              		.loc 1 1115 3 view .LVU280
 865              		.loc 1 1115 24 is_stmt 0 view .LVU281
 866 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 867              	.LVL47:
1116:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1117:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 868              		.loc 1 1117 3 is_stmt 1 view .LVU282
 869              		.loc 1 1117 38 is_stmt 0 view .LVU283
 870 0004 013B     		subs	r3, r3, #1
 871              	.LVL48:
 872              		.loc 1 1117 38 view .LVU284
 873 0006 DBB2     		uxtb	r3, r3
 874              	.LVL49:
 875              		.loc 1 1117 6 view .LVU285
 876 0008 012B     		cmp	r3, #1
 877 000a 05D9     		bls	.L79
1118:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1119:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
1120:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Request Sleep mode */
1121:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     SET_BIT(hcan->Instance->MCR, CAN_MCR_SLEEP);
1122:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1123:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Return function status */
1124:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     return HAL_OK;
1125:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
1126:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   else
1127:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
1128:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Update error code */
1129:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
 878              		.loc 1 1129 5 is_stmt 1 view .LVU286
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 40


 879              		.loc 1 1129 9 is_stmt 0 view .LVU287
 880 000c 436A     		ldr	r3, [r0, #36]
 881              		.loc 1 1129 21 view .LVU288
 882 000e 43F48023 		orr	r3, r3, #262144
 883 0012 4362     		str	r3, [r0, #36]
1130:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1131:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Return function status */
1132:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     return HAL_ERROR;
 884              		.loc 1 1132 5 is_stmt 1 view .LVU289
 885              		.loc 1 1132 12 is_stmt 0 view .LVU290
 886 0014 0120     		movs	r0, #1
 887              	.LVL50:
1133:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
1134:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** }
 888              		.loc 1 1134 1 view .LVU291
 889 0016 7047     		bx	lr
 890              	.LVL51:
 891              	.L79:
1121:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 892              		.loc 1 1121 5 is_stmt 1 view .LVU292
 893 0018 0268     		ldr	r2, [r0]
 894 001a 1368     		ldr	r3, [r2]
 895 001c 43F00203 		orr	r3, r3, #2
 896 0020 1360     		str	r3, [r2]
1124:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 897              		.loc 1 1124 5 view .LVU293
1124:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 898              		.loc 1 1124 12 is_stmt 0 view .LVU294
 899 0022 0020     		movs	r0, #0
 900              	.LVL52:
1124:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 901              		.loc 1 1124 12 view .LVU295
 902 0024 7047     		bx	lr
 903              		.cfi_endproc
 904              	.LFE295:
 906              		.section	.text.HAL_CAN_WakeUp,"ax",%progbits
 907              		.align	1
 908              		.global	HAL_CAN_WakeUp
 909              		.syntax unified
 910              		.thumb
 911              		.thumb_func
 913              	HAL_CAN_WakeUp:
 914              	.LVL53:
 915              	.LFB296:
1135:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1136:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /**
1137:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @brief  Wake up from sleep mode.
1138:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         When returning with HAL_OK status from this function, Sleep mode
1139:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         is exited.
1140:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1141:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         the configuration information for the specified CAN.
1142:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @retval HAL status.
1143:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
1144:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_WakeUp(CAN_HandleTypeDef *hcan)
1145:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** {
 916              		.loc 1 1145 1 is_stmt 1 view -0
 917              		.cfi_startproc
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 41


 918              		@ args = 0, pretend = 0, frame = 8
 919              		@ frame_needed = 0, uses_anonymous_args = 0
 920              		@ link register save eliminated.
 921              		.loc 1 1145 1 is_stmt 0 view .LVU297
 922 0000 82B0     		sub	sp, sp, #8
 923              		.cfi_def_cfa_offset 8
1146:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   __IO uint32_t count = 0;
 924              		.loc 1 1146 3 is_stmt 1 view .LVU298
 925              		.loc 1 1146 17 is_stmt 0 view .LVU299
 926 0002 0023     		movs	r3, #0
 927 0004 0193     		str	r3, [sp, #4]
1147:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 928              		.loc 1 1147 3 is_stmt 1 view .LVU300
 929              		.loc 1 1147 24 is_stmt 0 view .LVU301
 930 0006 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 931              	.LVL54:
1148:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1149:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 932              		.loc 1 1149 3 is_stmt 1 view .LVU302
 933              		.loc 1 1149 38 is_stmt 0 view .LVU303
 934 000a 013B     		subs	r3, r3, #1
 935              	.LVL55:
 936              		.loc 1 1149 38 view .LVU304
 937 000c DBB2     		uxtb	r3, r3
 938              	.LVL56:
 939              		.loc 1 1149 6 view .LVU305
 940 000e 012B     		cmp	r3, #1
 941 0010 18D8     		bhi	.L81
1150:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1151:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
1152:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Wake up request */
1153:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_SLEEP);
 942              		.loc 1 1153 5 is_stmt 1 view .LVU306
 943 0012 0268     		ldr	r2, [r0]
 944 0014 1368     		ldr	r3, [r2]
 945 0016 23F00203 		bic	r3, r3, #2
 946 001a 1360     		str	r3, [r2]
 947              	.L84:
1154:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1155:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Wait sleep mode is exited */
1156:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     do
 948              		.loc 1 1156 5 view .LVU307
1157:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
1158:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Increment counter */
1159:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       count++;
 949              		.loc 1 1159 7 view .LVU308
 950              		.loc 1 1159 12 is_stmt 0 view .LVU309
 951 001c 019B     		ldr	r3, [sp, #4]
 952 001e 0133     		adds	r3, r3, #1
 953 0020 0193     		str	r3, [sp, #4]
1160:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1161:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Check if timeout is reached */
1162:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       if (count > CAN_WAKEUP_TIMEOUT_COUNTER)
 954              		.loc 1 1162 7 is_stmt 1 view .LVU310
 955              		.loc 1 1162 17 is_stmt 0 view .LVU311
 956 0022 019A     		ldr	r2, [sp, #4]
 957              		.loc 1 1162 10 view .LVU312
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 42


 958 0024 0B4B     		ldr	r3, .L87
 959 0026 9A42     		cmp	r2, r3
 960 0028 06D8     		bhi	.L86
1163:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       {
1164:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         /* Update error code */
1165:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_TIMEOUT;
1166:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1167:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         return HAL_ERROR;
1168:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       }
1169:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     } while ((hcan->Instance->MSR & CAN_MSR_SLAK) != 0U);
 961              		.loc 1 1169 51 is_stmt 1 view .LVU313
 962              		.loc 1 1169 19 is_stmt 0 view .LVU314
 963 002a 0368     		ldr	r3, [r0]
 964              		.loc 1 1169 29 view .LVU315
 965 002c 5B68     		ldr	r3, [r3, #4]
 966              		.loc 1 1169 51 view .LVU316
 967 002e 13F0020F 		tst	r3, #2
 968 0032 F3D1     		bne	.L84
1170:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1171:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Return function status */
1172:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     return HAL_OK;
 969              		.loc 1 1172 12 view .LVU317
 970 0034 0020     		movs	r0, #0
 971              	.LVL57:
 972              		.loc 1 1172 12 view .LVU318
 973 0036 0AE0     		b	.L83
 974              	.LVL58:
 975              	.L86:
1165:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 976              		.loc 1 1165 9 is_stmt 1 view .LVU319
1165:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 977              		.loc 1 1165 13 is_stmt 0 view .LVU320
 978 0038 436A     		ldr	r3, [r0, #36]
1165:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 979              		.loc 1 1165 25 view .LVU321
 980 003a 43F40033 		orr	r3, r3, #131072
 981 003e 4362     		str	r3, [r0, #36]
1167:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       }
 982              		.loc 1 1167 9 is_stmt 1 view .LVU322
1167:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       }
 983              		.loc 1 1167 16 is_stmt 0 view .LVU323
 984 0040 0120     		movs	r0, #1
 985              	.LVL59:
1167:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       }
 986              		.loc 1 1167 16 view .LVU324
 987 0042 04E0     		b	.L83
 988              	.LVL60:
 989              	.L81:
1173:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
1174:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   else
1175:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
1176:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Update error code */
1177:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
 990              		.loc 1 1177 5 is_stmt 1 view .LVU325
 991              		.loc 1 1177 9 is_stmt 0 view .LVU326
 992 0044 436A     		ldr	r3, [r0, #36]
 993              		.loc 1 1177 21 view .LVU327
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 43


 994 0046 43F48023 		orr	r3, r3, #262144
 995 004a 4362     		str	r3, [r0, #36]
1178:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1179:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     return HAL_ERROR;
 996              		.loc 1 1179 5 is_stmt 1 view .LVU328
 997              		.loc 1 1179 12 is_stmt 0 view .LVU329
 998 004c 0120     		movs	r0, #1
 999              	.LVL61:
 1000              	.L83:
1180:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
1181:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** }
 1001              		.loc 1 1181 1 view .LVU330
 1002 004e 02B0     		add	sp, sp, #8
 1003              		.cfi_def_cfa_offset 0
 1004              		@ sp needed
 1005 0050 7047     		bx	lr
 1006              	.L88:
 1007 0052 00BF     		.align	2
 1008              	.L87:
 1009 0054 40420F00 		.word	1000000
 1010              		.cfi_endproc
 1011              	.LFE296:
 1013              		.section	.text.HAL_CAN_IsSleepActive,"ax",%progbits
 1014              		.align	1
 1015              		.global	HAL_CAN_IsSleepActive
 1016              		.syntax unified
 1017              		.thumb
 1018              		.thumb_func
 1020              	HAL_CAN_IsSleepActive:
 1021              	.LVL62:
 1022              	.LFB297:
1182:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1183:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /**
1184:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @brief  Check is sleep mode is active.
1185:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1186:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         the configuration information for the specified CAN.
1187:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @retval Status
1188:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *          - 0 : Sleep mode is not active.
1189:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *          - 1 : Sleep mode is active.
1190:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
1191:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** uint32_t HAL_CAN_IsSleepActive(const CAN_HandleTypeDef *hcan)
1192:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** {
 1023              		.loc 1 1192 1 is_stmt 1 view -0
 1024              		.cfi_startproc
 1025              		@ args = 0, pretend = 0, frame = 0
 1026              		@ frame_needed = 0, uses_anonymous_args = 0
 1027              		@ link register save eliminated.
1193:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   uint32_t status = 0U;
 1028              		.loc 1 1193 3 view .LVU332
1194:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1029              		.loc 1 1194 3 view .LVU333
 1030              		.loc 1 1194 24 is_stmt 0 view .LVU334
 1031 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 1032              	.LVL63:
1195:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1196:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 1033              		.loc 1 1196 3 is_stmt 1 view .LVU335
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 44


 1034              		.loc 1 1196 38 is_stmt 0 view .LVU336
 1035 0004 013B     		subs	r3, r3, #1
 1036              	.LVL64:
 1037              		.loc 1 1196 38 view .LVU337
 1038 0006 DBB2     		uxtb	r3, r3
 1039              	.LVL65:
 1040              		.loc 1 1196 6 view .LVU338
 1041 0008 012B     		cmp	r3, #1
 1042 000a 01D9     		bls	.L93
1193:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1043              		.loc 1 1193 12 view .LVU339
 1044 000c 0020     		movs	r0, #0
 1045              	.LVL66:
1193:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1046              		.loc 1 1193 12 view .LVU340
 1047 000e 7047     		bx	lr
 1048              	.LVL67:
 1049              	.L93:
1197:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1198:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
1199:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Check Sleep mode */
1200:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     if ((hcan->Instance->MSR & CAN_MSR_SLAK) != 0U)
 1050              		.loc 1 1200 5 is_stmt 1 view .LVU341
 1051              		.loc 1 1200 14 is_stmt 0 view .LVU342
 1052 0010 0368     		ldr	r3, [r0]
 1053              		.loc 1 1200 24 view .LVU343
 1054 0012 5868     		ldr	r0, [r3, #4]
 1055              	.LVL68:
 1056              		.loc 1 1200 8 view .LVU344
 1057 0014 10F00200 		ands	r0, r0, #2
 1058 0018 00D1     		bne	.L92
 1059 001a 7047     		bx	lr
 1060              	.L92:
1201:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
1202:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       status = 1U;
 1061              		.loc 1 1202 14 view .LVU345
 1062 001c 0120     		movs	r0, #1
 1063              	.LVL69:
1203:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
1204:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
1205:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1206:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Return function status */
1207:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   return status;
 1064              		.loc 1 1207 3 is_stmt 1 view .LVU346
1208:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** }
 1065              		.loc 1 1208 1 is_stmt 0 view .LVU347
 1066 001e 7047     		bx	lr
 1067              		.cfi_endproc
 1068              	.LFE297:
 1070              		.section	.text.HAL_CAN_AddTxMessage,"ax",%progbits
 1071              		.align	1
 1072              		.global	HAL_CAN_AddTxMessage
 1073              		.syntax unified
 1074              		.thumb
 1075              		.thumb_func
 1077              	HAL_CAN_AddTxMessage:
 1078              	.LVL70:
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 45


 1079              	.LFB298:
1209:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1210:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /**
1211:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @brief  Add a message to the first free Tx mailbox and activate the
1212:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         corresponding transmission request.
1213:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1214:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         the configuration information for the specified CAN.
1215:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  pHeader pointer to a CAN_TxHeaderTypeDef structure.
1216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  aData array containing the payload of the Tx frame.
1217:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  pTxMailbox pointer to a variable where the function will return
1218:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         the TxMailbox used to store the Tx message.
1219:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         This parameter can be a value of @arg CAN_Tx_Mailboxes.
1220:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @retval HAL status
1221:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
1222:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_AddTxMessage(CAN_HandleTypeDef *hcan, const CAN_TxHeaderTypeDef *pHeader,
1223:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****                                        const uint8_t aData[], uint32_t *pTxMailbox)
1224:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** {
 1080              		.loc 1 1224 1 is_stmt 1 view -0
 1081              		.cfi_startproc
 1082              		@ args = 0, pretend = 0, frame = 0
 1083              		@ frame_needed = 0, uses_anonymous_args = 0
 1084              		.loc 1 1224 1 is_stmt 0 view .LVU349
 1085 0000 30B5     		push	{r4, r5, lr}
 1086              		.cfi_def_cfa_offset 12
 1087              		.cfi_offset 4, -12
 1088              		.cfi_offset 5, -8
 1089              		.cfi_offset 14, -4
1225:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   uint32_t transmitmailbox;
 1090              		.loc 1 1225 3 is_stmt 1 view .LVU350
1226:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1091              		.loc 1 1226 3 view .LVU351
 1092              		.loc 1 1226 24 is_stmt 0 view .LVU352
 1093 0002 90F820C0 		ldrb	ip, [r0, #32]	@ zero_extendqisi2
 1094              	.LVL71:
1227:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   uint32_t tsr = READ_REG(hcan->Instance->TSR);
 1095              		.loc 1 1227 3 is_stmt 1 view .LVU353
 1096              		.loc 1 1227 12 is_stmt 0 view .LVU354
 1097 0006 0468     		ldr	r4, [r0]
 1098 0008 A468     		ldr	r4, [r4, #8]
 1099              	.LVL72:
1228:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1229:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Check the parameters */
1230:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   assert_param(IS_CAN_IDTYPE(pHeader->IDE));
 1100              		.loc 1 1230 3 is_stmt 1 view .LVU355
1231:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   assert_param(IS_CAN_RTR(pHeader->RTR));
 1101              		.loc 1 1231 3 view .LVU356
1232:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   assert_param(IS_CAN_DLC(pHeader->DLC));
 1102              		.loc 1 1232 3 view .LVU357
1233:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   if (pHeader->IDE == CAN_ID_STD)
 1103              		.loc 1 1233 3 view .LVU358
1234:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
1235:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     assert_param(IS_CAN_STDID(pHeader->StdId));
 1104              		.loc 1 1235 5 view .LVU359
1236:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
1237:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   else
1238:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
1239:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     assert_param(IS_CAN_EXTID(pHeader->ExtId));
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 46


 1105              		.loc 1 1239 5 view .LVU360
1240:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
1241:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(pHeader->TransmitGlobalTime));
 1106              		.loc 1 1241 3 view .LVU361
1242:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1243:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 1107              		.loc 1 1243 3 view .LVU362
 1108              		.loc 1 1243 38 is_stmt 0 view .LVU363
 1109 000a 0CF1FF3C 		add	ip, ip, #-1
 1110              	.LVL73:
 1111              		.loc 1 1243 38 view .LVU364
 1112 000e 5FFA8CFC 		uxtb	ip, ip
 1113              	.LVL74:
 1114              		.loc 1 1243 6 view .LVU365
 1115 0012 BCF1010F 		cmp	ip, #1
 1116 0016 62D8     		bhi	.L95
1244:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1245:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
1246:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Check that all the Tx mailboxes are not full */
1247:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     if (((tsr & CAN_TSR_TME0) != 0U) ||
 1117              		.loc 1 1247 5 is_stmt 1 view .LVU366
 1118              		.loc 1 1247 8 is_stmt 0 view .LVU367
 1119 0018 14F0E05F 		tst	r4, #469762048
 1120 001c 59D0     		beq	.L96
1248:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         ((tsr & CAN_TSR_TME1) != 0U) ||
1249:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         ((tsr & CAN_TSR_TME2) != 0U))
1250:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
1251:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Select an empty transmit mailbox */
1252:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       transmitmailbox = (tsr & CAN_TSR_CODE) >> CAN_TSR_CODE_Pos;
 1121              		.loc 1 1252 7 is_stmt 1 view .LVU368
 1122              		.loc 1 1252 23 is_stmt 0 view .LVU369
 1123 001e C4F3016C 		ubfx	ip, r4, #24, #2
 1124              	.LVL75:
1253:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1254:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Store the Tx mailbox */
1255:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       *pTxMailbox = (uint32_t)1 << transmitmailbox;
 1125              		.loc 1 1255 7 is_stmt 1 view .LVU370
 1126              		.loc 1 1255 33 is_stmt 0 view .LVU371
 1127 0022 0124     		movs	r4, #1
 1128              	.LVL76:
 1129              		.loc 1 1255 33 view .LVU372
 1130 0024 04FA0CF4 		lsl	r4, r4, ip
 1131              		.loc 1 1255 19 view .LVU373
 1132 0028 1C60     		str	r4, [r3]
1256:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1257:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Set up the Id */
1258:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       if (pHeader->IDE == CAN_ID_STD)
 1133              		.loc 1 1258 7 is_stmt 1 view .LVU374
 1134              		.loc 1 1258 18 is_stmt 0 view .LVU375
 1135 002a 8B68     		ldr	r3, [r1, #8]
 1136              	.LVL77:
 1137              		.loc 1 1258 10 view .LVU376
 1138 002c 002B     		cmp	r3, #0
 1139 002e 3DD1     		bne	.L97
1259:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       {
1260:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         hcan->Instance->sTxMailBox[transmitmailbox].TIR = ((pHeader->StdId << CAN_TI0R_STID_Pos) |
 1140              		.loc 1 1260 9 is_stmt 1 view .LVU377
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 47


 1141              		.loc 1 1260 68 is_stmt 0 view .LVU378
 1142 0030 0D68     		ldr	r5, [r1]
1261:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****                                                            pHeader->RTR);
 1143              		.loc 1 1261 67 view .LVU379
 1144 0032 CB68     		ldr	r3, [r1, #12]
1260:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****                                                            pHeader->RTR);
 1145              		.loc 1 1260 13 view .LVU380
 1146 0034 0468     		ldr	r4, [r0]
1260:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****                                                            pHeader->RTR);
 1147              		.loc 1 1260 98 view .LVU381
 1148 0036 43EA4555 		orr	r5, r3, r5, lsl #21
1260:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****                                                            pHeader->RTR);
 1149              		.loc 1 1260 57 view .LVU382
 1150 003a 0CF11803 		add	r3, ip, #24
 1151 003e 1B01     		lsls	r3, r3, #4
 1152 0040 E550     		str	r5, [r4, r3]
 1153              	.L98:
1262:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       }
1263:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       else
1264:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       {
1265:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         hcan->Instance->sTxMailBox[transmitmailbox].TIR = ((pHeader->ExtId << CAN_TI0R_EXID_Pos) |
1266:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****                                                            pHeader->IDE |
1267:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****                                                            pHeader->RTR);
1268:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       }
1269:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1270:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Set up the DLC */
1271:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       hcan->Instance->sTxMailBox[transmitmailbox].TDTR = (pHeader->DLC);
 1154              		.loc 1 1271 7 is_stmt 1 view .LVU383
 1155              		.loc 1 1271 11 is_stmt 0 view .LVU384
 1156 0042 0368     		ldr	r3, [r0]
 1157              		.loc 1 1271 66 view .LVU385
 1158 0044 0C69     		ldr	r4, [r1, #16]
 1159              		.loc 1 1271 56 view .LVU386
 1160 0046 0CF1180E 		add	lr, ip, #24
 1161 004a 03EB0E13 		add	r3, r3, lr, lsl #4
 1162 004e 5C60     		str	r4, [r3, #4]
1272:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1273:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Set up the Transmit Global Time mode */
1274:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       if (pHeader->TransmitGlobalTime == ENABLE)
 1163              		.loc 1 1274 7 is_stmt 1 view .LVU387
 1164              		.loc 1 1274 18 is_stmt 0 view .LVU388
 1165 0050 0B7D     		ldrb	r3, [r1, #20]	@ zero_extendqisi2
 1166              		.loc 1 1274 10 view .LVU389
 1167 0052 012B     		cmp	r3, #1
 1168 0054 35D0     		beq	.L102
 1169              	.LVL78:
 1170              	.L99:
1275:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       {
1276:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         SET_BIT(hcan->Instance->sTxMailBox[transmitmailbox].TDTR, CAN_TDT0R_TGT);
1277:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       }
1278:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1279:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Set up the data field */
1280:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       WRITE_REG(hcan->Instance->sTxMailBox[transmitmailbox].TDHR,
 1171              		.loc 1 1280 7 is_stmt 1 view .LVU390
 1172 0056 D179     		ldrb	r1, [r2, #7]	@ zero_extendqisi2
 1173 0058 9379     		ldrb	r3, [r2, #6]	@ zero_extendqisi2
 1174 005a 1B04     		lsls	r3, r3, #16
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 48


 1175 005c 43EA0163 		orr	r3, r3, r1, lsl #24
 1176 0060 5179     		ldrb	r1, [r2, #5]	@ zero_extendqisi2
 1177 0062 43EA0123 		orr	r3, r3, r1, lsl #8
 1178 0066 1479     		ldrb	r4, [r2, #4]	@ zero_extendqisi2
 1179 0068 0168     		ldr	r1, [r0]
 1180 006a 2343     		orrs	r3, r3, r4
 1181 006c 01EB0C11 		add	r1, r1, ip, lsl #4
 1182 0070 C1F88C31 		str	r3, [r1, #396]
1281:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****                 ((uint32_t)aData[7] << CAN_TDH0R_DATA7_Pos) |
1282:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****                 ((uint32_t)aData[6] << CAN_TDH0R_DATA6_Pos) |
1283:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****                 ((uint32_t)aData[5] << CAN_TDH0R_DATA5_Pos) |
1284:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****                 ((uint32_t)aData[4] << CAN_TDH0R_DATA4_Pos));
1285:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       WRITE_REG(hcan->Instance->sTxMailBox[transmitmailbox].TDLR,
 1183              		.loc 1 1285 7 view .LVU391
 1184 0074 D178     		ldrb	r1, [r2, #3]	@ zero_extendqisi2
 1185 0076 9378     		ldrb	r3, [r2, #2]	@ zero_extendqisi2
 1186 0078 1B04     		lsls	r3, r3, #16
 1187 007a 43EA0163 		orr	r3, r3, r1, lsl #24
 1188 007e 5178     		ldrb	r1, [r2, #1]	@ zero_extendqisi2
 1189 0080 43EA0123 		orr	r3, r3, r1, lsl #8
 1190 0084 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1191 0086 0268     		ldr	r2, [r0]
 1192              	.LVL79:
 1193              		.loc 1 1285 7 is_stmt 0 view .LVU392
 1194 0088 0B43     		orrs	r3, r3, r1
 1195 008a 02EB0C12 		add	r2, r2, ip, lsl #4
 1196 008e C2F88831 		str	r3, [r2, #392]
1286:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****                 ((uint32_t)aData[3] << CAN_TDL0R_DATA3_Pos) |
1287:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****                 ((uint32_t)aData[2] << CAN_TDL0R_DATA2_Pos) |
1288:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****                 ((uint32_t)aData[1] << CAN_TDL0R_DATA1_Pos) |
1289:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****                 ((uint32_t)aData[0] << CAN_TDL0R_DATA0_Pos));
1290:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1291:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Request transmission */
1292:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       SET_BIT(hcan->Instance->sTxMailBox[transmitmailbox].TIR, CAN_TI0R_TXRQ);
 1197              		.loc 1 1292 7 is_stmt 1 view .LVU393
 1198 0092 0268     		ldr	r2, [r0]
 1199 0094 0CF1180C 		add	ip, ip, #24
 1200              	.LVL80:
 1201              		.loc 1 1292 7 is_stmt 0 view .LVU394
 1202 0098 4FEA0C1C 		lsl	ip, ip, #4
 1203 009c 52F80C30 		ldr	r3, [r2, ip]
 1204 00a0 43F00103 		orr	r3, r3, #1
 1205 00a4 42F80C30 		str	r3, [r2, ip]
1293:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1294:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Return function status */
1295:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       return HAL_OK;
 1206              		.loc 1 1295 7 is_stmt 1 view .LVU395
 1207              		.loc 1 1295 14 is_stmt 0 view .LVU396
 1208 00a8 0020     		movs	r0, #0
 1209              	.LVL81:
 1210              		.loc 1 1295 14 view .LVU397
 1211 00aa 1DE0     		b	.L100
 1212              	.LVL82:
 1213              	.L97:
1265:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****                                                            pHeader->IDE |
 1214              		.loc 1 1265 9 is_stmt 1 view .LVU398
1265:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****                                                            pHeader->IDE |
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 49


 1215              		.loc 1 1265 68 is_stmt 0 view .LVU399
 1216 00ac 4C68     		ldr	r4, [r1, #4]
1265:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****                                                            pHeader->IDE |
 1217              		.loc 1 1265 98 view .LVU400
 1218 00ae 43EAC403 		orr	r3, r3, r4, lsl #3
1267:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       }
 1219              		.loc 1 1267 67 view .LVU401
 1220 00b2 CC68     		ldr	r4, [r1, #12]
1266:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****                                                            pHeader->RTR);
 1221              		.loc 1 1266 73 view .LVU402
 1222 00b4 2343     		orrs	r3, r3, r4
1265:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****                                                            pHeader->IDE |
 1223              		.loc 1 1265 57 view .LVU403
 1224 00b6 0CF11804 		add	r4, ip, #24
 1225 00ba 2401     		lsls	r4, r4, #4
 1226 00bc 0568     		ldr	r5, [r0]
 1227 00be 2B51     		str	r3, [r5, r4]
 1228 00c0 BFE7     		b	.L98
 1229              	.L102:
1276:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       }
 1230              		.loc 1 1276 9 is_stmt 1 view .LVU404
 1231 00c2 0368     		ldr	r3, [r0]
 1232 00c4 03EB0E13 		add	r3, r3, lr, lsl #4
 1233 00c8 5968     		ldr	r1, [r3, #4]
 1234              	.LVL83:
1276:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       }
 1235              		.loc 1 1276 9 is_stmt 0 view .LVU405
 1236 00ca 41F48071 		orr	r1, r1, #256
 1237 00ce 5960     		str	r1, [r3, #4]
 1238 00d0 C1E7     		b	.L99
 1239              	.LVL84:
 1240              	.L96:
1296:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
1297:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     else
1298:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
1299:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Update error code */
1300:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       hcan->ErrorCode |= HAL_CAN_ERROR_PARAM;
 1241              		.loc 1 1300 7 is_stmt 1 view .LVU406
 1242              		.loc 1 1300 11 is_stmt 0 view .LVU407
 1243 00d2 436A     		ldr	r3, [r0, #36]
 1244              	.LVL85:
 1245              		.loc 1 1300 23 view .LVU408
 1246 00d4 43F40013 		orr	r3, r3, #2097152
 1247 00d8 4362     		str	r3, [r0, #36]
1301:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1302:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       return HAL_ERROR;
 1248              		.loc 1 1302 7 is_stmt 1 view .LVU409
 1249              		.loc 1 1302 14 is_stmt 0 view .LVU410
 1250 00da 0120     		movs	r0, #1
 1251              	.LVL86:
 1252              		.loc 1 1302 14 view .LVU411
 1253 00dc 04E0     		b	.L100
 1254              	.LVL87:
 1255              	.L95:
1303:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
1304:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
1305:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   else
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 50


1306:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
1307:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Update error code */
1308:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
 1256              		.loc 1 1308 5 is_stmt 1 view .LVU412
 1257              		.loc 1 1308 9 is_stmt 0 view .LVU413
 1258 00de 436A     		ldr	r3, [r0, #36]
 1259              	.LVL88:
 1260              		.loc 1 1308 21 view .LVU414
 1261 00e0 43F48023 		orr	r3, r3, #262144
 1262 00e4 4362     		str	r3, [r0, #36]
1309:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1310:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     return HAL_ERROR;
 1263              		.loc 1 1310 5 is_stmt 1 view .LVU415
 1264              		.loc 1 1310 12 is_stmt 0 view .LVU416
 1265 00e6 0120     		movs	r0, #1
 1266              	.LVL89:
 1267              	.L100:
1311:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
1312:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** }
 1268              		.loc 1 1312 1 view .LVU417
 1269 00e8 30BD     		pop	{r4, r5, pc}
 1270              		.cfi_endproc
 1271              	.LFE298:
 1273              		.section	.text.HAL_CAN_AbortTxRequest,"ax",%progbits
 1274              		.align	1
 1275              		.global	HAL_CAN_AbortTxRequest
 1276              		.syntax unified
 1277              		.thumb
 1278              		.thumb_func
 1280              	HAL_CAN_AbortTxRequest:
 1281              	.LVL90:
 1282              	.LFB299:
1313:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1314:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /**
1315:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @brief  Abort transmission requests
1316:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
1317:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         the configuration information for the specified CAN.
1318:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  TxMailboxes List of the Tx Mailboxes to abort.
1319:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         This parameter can be any combination of @arg CAN_Tx_Mailboxes.
1320:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @retval HAL status
1321:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
1322:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_AbortTxRequest(CAN_HandleTypeDef *hcan, uint32_t TxMailboxes)
1323:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** {
 1283              		.loc 1 1323 1 is_stmt 1 view -0
 1284              		.cfi_startproc
 1285              		@ args = 0, pretend = 0, frame = 0
 1286              		@ frame_needed = 0, uses_anonymous_args = 0
 1287              		@ link register save eliminated.
1324:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1288              		.loc 1 1324 3 view .LVU419
 1289              		.loc 1 1324 24 is_stmt 0 view .LVU420
 1290 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 1291              	.LVL91:
1325:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1326:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Check function parameters */
1327:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   assert_param(IS_CAN_TX_MAILBOX_LIST(TxMailboxes));
 1292              		.loc 1 1327 3 is_stmt 1 view .LVU421
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 51


1328:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1329:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 1293              		.loc 1 1329 3 view .LVU422
 1294              		.loc 1 1329 38 is_stmt 0 view .LVU423
 1295 0004 013B     		subs	r3, r3, #1
 1296              	.LVL92:
 1297              		.loc 1 1329 38 view .LVU424
 1298 0006 DBB2     		uxtb	r3, r3
 1299              	.LVL93:
 1300              		.loc 1 1329 6 view .LVU425
 1301 0008 012B     		cmp	r3, #1
 1302 000a 05D9     		bls	.L109
1330:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1331:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
1332:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Check Tx Mailbox 0 */
1333:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     if ((TxMailboxes & CAN_TX_MAILBOX0) != 0U)
1334:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
1335:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Add cancellation request for Tx Mailbox 0 */
1336:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       SET_BIT(hcan->Instance->TSR, CAN_TSR_ABRQ0);
1337:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
1338:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1339:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Check Tx Mailbox 1 */
1340:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     if ((TxMailboxes & CAN_TX_MAILBOX1) != 0U)
1341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
1342:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Add cancellation request for Tx Mailbox 1 */
1343:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       SET_BIT(hcan->Instance->TSR, CAN_TSR_ABRQ1);
1344:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
1345:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1346:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Check Tx Mailbox 2 */
1347:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     if ((TxMailboxes & CAN_TX_MAILBOX2) != 0U)
1348:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
1349:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Add cancellation request for Tx Mailbox 2 */
1350:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       SET_BIT(hcan->Instance->TSR, CAN_TSR_ABRQ2);
1351:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
1352:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1353:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Return function status */
1354:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     return HAL_OK;
1355:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
1356:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   else
1357:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
1358:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Update error code */
1359:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
 1303              		.loc 1 1359 5 is_stmt 1 view .LVU426
 1304              		.loc 1 1359 9 is_stmt 0 view .LVU427
 1305 000c 436A     		ldr	r3, [r0, #36]
 1306              		.loc 1 1359 21 view .LVU428
 1307 000e 43F48023 		orr	r3, r3, #262144
 1308 0012 4362     		str	r3, [r0, #36]
1360:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1361:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     return HAL_ERROR;
 1309              		.loc 1 1361 5 is_stmt 1 view .LVU429
 1310              		.loc 1 1361 12 is_stmt 0 view .LVU430
 1311 0014 0120     		movs	r0, #1
 1312              	.LVL94:
1362:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
1363:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** }
 1313              		.loc 1 1363 1 view .LVU431
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 52


 1314 0016 7047     		bx	lr
 1315              	.LVL95:
 1316              	.L109:
1333:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 1317              		.loc 1 1333 5 is_stmt 1 view .LVU432
1333:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 1318              		.loc 1 1333 8 is_stmt 0 view .LVU433
 1319 0018 11F0010F 		tst	r1, #1
 1320 001c 04D0     		beq	.L105
1336:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 1321              		.loc 1 1336 7 is_stmt 1 view .LVU434
 1322 001e 0268     		ldr	r2, [r0]
 1323 0020 9368     		ldr	r3, [r2, #8]
 1324 0022 43F08003 		orr	r3, r3, #128
 1325 0026 9360     		str	r3, [r2, #8]
 1326              	.L105:
1340:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 1327              		.loc 1 1340 5 view .LVU435
1340:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 1328              		.loc 1 1340 8 is_stmt 0 view .LVU436
 1329 0028 11F0020F 		tst	r1, #2
 1330 002c 04D0     		beq	.L106
1343:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 1331              		.loc 1 1343 7 is_stmt 1 view .LVU437
 1332 002e 0268     		ldr	r2, [r0]
 1333 0030 9368     		ldr	r3, [r2, #8]
 1334 0032 43F40043 		orr	r3, r3, #32768
 1335 0036 9360     		str	r3, [r2, #8]
 1336              	.L106:
1347:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 1337              		.loc 1 1347 5 view .LVU438
1347:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 1338              		.loc 1 1347 8 is_stmt 0 view .LVU439
 1339 0038 11F0040F 		tst	r1, #4
 1340 003c 04D0     		beq	.L107
1350:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 1341              		.loc 1 1350 7 is_stmt 1 view .LVU440
 1342 003e 0268     		ldr	r2, [r0]
 1343 0040 9368     		ldr	r3, [r2, #8]
 1344 0042 43F40003 		orr	r3, r3, #8388608
 1345 0046 9360     		str	r3, [r2, #8]
 1346              	.L107:
1354:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 1347              		.loc 1 1354 5 view .LVU441
1354:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 1348              		.loc 1 1354 12 is_stmt 0 view .LVU442
 1349 0048 0020     		movs	r0, #0
 1350              	.LVL96:
1354:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 1351              		.loc 1 1354 12 view .LVU443
 1352 004a 7047     		bx	lr
 1353              		.cfi_endproc
 1354              	.LFE299:
 1356              		.section	.text.HAL_CAN_GetTxMailboxesFreeLevel,"ax",%progbits
 1357              		.align	1
 1358              		.global	HAL_CAN_GetTxMailboxesFreeLevel
 1359              		.syntax unified
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 53


 1360              		.thumb
 1361              		.thumb_func
 1363              	HAL_CAN_GetTxMailboxesFreeLevel:
 1364              	.LVL97:
 1365              	.LFB300:
1364:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1365:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /**
1366:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @brief  Return Tx Mailboxes free level: number of free Tx Mailboxes.
1367:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1368:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         the configuration information for the specified CAN.
1369:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @retval Number of free Tx Mailboxes.
1370:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
1371:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** uint32_t HAL_CAN_GetTxMailboxesFreeLevel(const CAN_HandleTypeDef *hcan)
1372:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** {
 1366              		.loc 1 1372 1 is_stmt 1 view -0
 1367              		.cfi_startproc
 1368              		@ args = 0, pretend = 0, frame = 0
 1369              		@ frame_needed = 0, uses_anonymous_args = 0
 1370              		@ link register save eliminated.
1373:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   uint32_t freelevel = 0U;
 1371              		.loc 1 1373 3 view .LVU445
1374:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1372              		.loc 1 1374 3 view .LVU446
 1373              		.loc 1 1374 24 is_stmt 0 view .LVU447
 1374 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 1375              	.LVL98:
1375:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1376:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 1376              		.loc 1 1376 3 is_stmt 1 view .LVU448
 1377              		.loc 1 1376 38 is_stmt 0 view .LVU449
 1378 0004 013B     		subs	r3, r3, #1
 1379              	.LVL99:
 1380              		.loc 1 1376 38 view .LVU450
 1381 0006 DBB2     		uxtb	r3, r3
 1382              	.LVL100:
 1383              		.loc 1 1376 6 view .LVU451
 1384 0008 012B     		cmp	r3, #1
 1385 000a 01D9     		bls	.L116
1373:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1386              		.loc 1 1373 12 view .LVU452
 1387 000c 0020     		movs	r0, #0
 1388              	.LVL101:
1377:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1378:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
1379:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Check Tx Mailbox 0 status */
1380:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     if ((hcan->Instance->TSR & CAN_TSR_TME0) != 0U)
1381:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
1382:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       freelevel++;
1383:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
1384:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1385:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Check Tx Mailbox 1 status */
1386:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     if ((hcan->Instance->TSR & CAN_TSR_TME1) != 0U)
1387:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
1388:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       freelevel++;
1389:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
1390:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1391:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Check Tx Mailbox 2 status */
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 54


1392:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     if ((hcan->Instance->TSR & CAN_TSR_TME2) != 0U)
1393:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
1394:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       freelevel++;
1395:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
1396:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
1397:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1398:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Return Tx Mailboxes free level */
1399:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   return freelevel;
 1389              		.loc 1 1399 3 is_stmt 1 view .LVU453
 1390              	.L110:
1400:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** }
 1391              		.loc 1 1400 1 is_stmt 0 view .LVU454
 1392 000e 7047     		bx	lr
 1393              	.LVL102:
 1394              	.L116:
1380:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 1395              		.loc 1 1380 5 is_stmt 1 view .LVU455
1380:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 1396              		.loc 1 1380 14 is_stmt 0 view .LVU456
 1397 0010 0368     		ldr	r3, [r0]
1380:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 1398              		.loc 1 1380 24 view .LVU457
 1399 0012 9868     		ldr	r0, [r3, #8]
 1400              	.LVL103:
1380:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 1401              		.loc 1 1380 8 view .LVU458
 1402 0014 10F08060 		ands	r0, r0, #67108864
 1403 0018 00D0     		beq	.L112
1382:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 1404              		.loc 1 1382 16 view .LVU459
 1405 001a 0120     		movs	r0, #1
 1406              	.L112:
 1407              	.LVL104:
1386:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 1408              		.loc 1 1386 5 is_stmt 1 view .LVU460
1386:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 1409              		.loc 1 1386 24 is_stmt 0 view .LVU461
 1410 001c 9A68     		ldr	r2, [r3, #8]
1386:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 1411              		.loc 1 1386 8 view .LVU462
 1412 001e 12F0006F 		tst	r2, #134217728
 1413 0022 00D0     		beq	.L113
1388:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 1414              		.loc 1 1388 7 is_stmt 1 view .LVU463
1388:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 1415              		.loc 1 1388 16 is_stmt 0 view .LVU464
 1416 0024 0130     		adds	r0, r0, #1
 1417              	.LVL105:
 1418              	.L113:
1392:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 1419              		.loc 1 1392 5 is_stmt 1 view .LVU465
1392:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 1420              		.loc 1 1392 24 is_stmt 0 view .LVU466
 1421 0026 9B68     		ldr	r3, [r3, #8]
1392:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 1422              		.loc 1 1392 8 view .LVU467
 1423 0028 13F0805F 		tst	r3, #268435456
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 55


 1424 002c EFD0     		beq	.L110
1394:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 1425              		.loc 1 1394 7 is_stmt 1 view .LVU468
1394:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 1426              		.loc 1 1394 16 is_stmt 0 view .LVU469
 1427 002e 0130     		adds	r0, r0, #1
 1428              	.LVL106:
1394:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 1429              		.loc 1 1394 16 view .LVU470
 1430 0030 7047     		bx	lr
 1431              		.cfi_endproc
 1432              	.LFE300:
 1434              		.section	.text.HAL_CAN_IsTxMessagePending,"ax",%progbits
 1435              		.align	1
 1436              		.global	HAL_CAN_IsTxMessagePending
 1437              		.syntax unified
 1438              		.thumb
 1439              		.thumb_func
 1441              	HAL_CAN_IsTxMessagePending:
 1442              	.LVL107:
 1443              	.LFB301:
1401:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1402:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /**
1403:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @brief  Check if a transmission request is pending on the selected Tx
1404:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         Mailboxes.
1405:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
1406:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         the configuration information for the specified CAN.
1407:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  TxMailboxes List of Tx Mailboxes to check.
1408:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         This parameter can be any combination of @arg CAN_Tx_Mailboxes.
1409:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @retval Status
1410:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *          - 0 : No pending transmission request on any selected Tx Mailboxes.
1411:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *          - 1 : Pending transmission request on at least one of the selected
1412:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *                Tx Mailbox.
1413:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
1414:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** uint32_t HAL_CAN_IsTxMessagePending(const CAN_HandleTypeDef *hcan, uint32_t TxMailboxes)
1415:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** {
 1444              		.loc 1 1415 1 is_stmt 1 view -0
 1445              		.cfi_startproc
 1446              		@ args = 0, pretend = 0, frame = 0
 1447              		@ frame_needed = 0, uses_anonymous_args = 0
 1448              		@ link register save eliminated.
1416:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   uint32_t status = 0U;
 1449              		.loc 1 1416 3 view .LVU472
1417:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1450              		.loc 1 1417 3 view .LVU473
 1451              		.loc 1 1417 24 is_stmt 0 view .LVU474
 1452 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 1453              	.LVL108:
1418:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1419:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Check function parameters */
1420:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   assert_param(IS_CAN_TX_MAILBOX_LIST(TxMailboxes));
 1454              		.loc 1 1420 3 is_stmt 1 view .LVU475
1421:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1422:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 1455              		.loc 1 1422 3 view .LVU476
 1456              		.loc 1 1422 38 is_stmt 0 view .LVU477
 1457 0004 013B     		subs	r3, r3, #1
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 56


 1458              	.LVL109:
 1459              		.loc 1 1422 38 view .LVU478
 1460 0006 DBB2     		uxtb	r3, r3
 1461              	.LVL110:
 1462              		.loc 1 1422 6 view .LVU479
 1463 0008 012B     		cmp	r3, #1
 1464 000a 01D9     		bls	.L121
1416:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1465              		.loc 1 1416 12 view .LVU480
 1466 000c 0020     		movs	r0, #0
 1467              	.LVL111:
1416:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1468              		.loc 1 1416 12 view .LVU481
 1469 000e 7047     		bx	lr
 1470              	.LVL112:
 1471              	.L121:
1423:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1424:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
1425:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Check pending transmission request on the selected Tx Mailboxes */
1426:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     if ((hcan->Instance->TSR & (TxMailboxes << CAN_TSR_TME0_Pos)) != (TxMailboxes << CAN_TSR_TME0_P
 1472              		.loc 1 1426 5 is_stmt 1 view .LVU482
 1473              		.loc 1 1426 14 is_stmt 0 view .LVU483
 1474 0010 0368     		ldr	r3, [r0]
 1475              		.loc 1 1426 24 view .LVU484
 1476 0012 9B68     		ldr	r3, [r3, #8]
 1477              		.loc 1 1426 30 view .LVU485
 1478 0014 03EA8163 		and	r3, r3, r1, lsl #26
 1479              		.loc 1 1426 8 view .LVU486
 1480 0018 B3EB816F 		cmp	r3, r1, lsl #26
 1481 001c 01D0     		beq	.L122
1427:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
1428:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       status = 1U;
 1482              		.loc 1 1428 14 view .LVU487
 1483 001e 0120     		movs	r0, #1
 1484              	.LVL113:
1429:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
1430:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
1431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1432:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Return status */
1433:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   return status;
 1485              		.loc 1 1433 3 is_stmt 1 view .LVU488
1434:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** }
 1486              		.loc 1 1434 1 is_stmt 0 view .LVU489
 1487 0020 7047     		bx	lr
 1488              	.LVL114:
 1489              	.L122:
1416:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1490              		.loc 1 1416 12 view .LVU490
 1491 0022 0020     		movs	r0, #0
 1492              	.LVL115:
1416:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1493              		.loc 1 1416 12 view .LVU491
 1494 0024 7047     		bx	lr
 1495              		.cfi_endproc
 1496              	.LFE301:
 1498              		.section	.text.HAL_CAN_GetTxTimestamp,"ax",%progbits
 1499              		.align	1
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 57


 1500              		.global	HAL_CAN_GetTxTimestamp
 1501              		.syntax unified
 1502              		.thumb
 1503              		.thumb_func
 1505              	HAL_CAN_GetTxTimestamp:
 1506              	.LVL116:
 1507              	.LFB302:
1435:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1436:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /**
1437:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @brief  Return timestamp of Tx message sent, if time triggered communication
1438:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             mode is enabled.
1439:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1440:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         the configuration information for the specified CAN.
1441:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  TxMailbox Tx Mailbox where the timestamp of message sent will be
1442:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         read.
1443:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         This parameter can be one value of @arg CAN_Tx_Mailboxes.
1444:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @retval Timestamp of message sent from Tx Mailbox.
1445:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
1446:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** uint32_t HAL_CAN_GetTxTimestamp(const CAN_HandleTypeDef *hcan, uint32_t TxMailbox)
1447:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** {
 1508              		.loc 1 1447 1 is_stmt 1 view -0
 1509              		.cfi_startproc
 1510              		@ args = 0, pretend = 0, frame = 0
 1511              		@ frame_needed = 0, uses_anonymous_args = 0
 1512              		@ link register save eliminated.
1448:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   uint32_t timestamp = 0U;
 1513              		.loc 1 1448 3 view .LVU493
1449:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   uint32_t transmitmailbox;
 1514              		.loc 1 1449 3 view .LVU494
1450:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1515              		.loc 1 1450 3 view .LVU495
 1516              		.loc 1 1450 24 is_stmt 0 view .LVU496
 1517 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 1518              	.LVL117:
1451:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1452:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Check function parameters */
1453:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   assert_param(IS_CAN_TX_MAILBOX(TxMailbox));
 1519              		.loc 1 1453 3 is_stmt 1 view .LVU497
1454:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1455:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 1520              		.loc 1 1455 3 view .LVU498
 1521              		.loc 1 1455 38 is_stmt 0 view .LVU499
 1522 0004 013B     		subs	r3, r3, #1
 1523              	.LVL118:
 1524              		.loc 1 1455 38 view .LVU500
 1525 0006 DBB2     		uxtb	r3, r3
 1526              	.LVL119:
 1527              		.loc 1 1455 6 view .LVU501
 1528 0008 012B     		cmp	r3, #1
 1529 000a 01D9     		bls	.L128
1448:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   uint32_t transmitmailbox;
 1530              		.loc 1 1448 12 view .LVU502
 1531 000c 0020     		movs	r0, #0
 1532              	.LVL120:
1456:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1457:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
1458:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Select the Tx mailbox */
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 58


1459:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     transmitmailbox = POSITION_VAL(TxMailbox);
1460:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1461:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Get timestamp */
1462:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     timestamp = (hcan->Instance->sTxMailBox[transmitmailbox].TDTR & CAN_TDT0R_TIME) >> CAN_TDT0R_TI
1463:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
1464:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1465:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Return the timestamp */
1466:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   return timestamp;
 1533              		.loc 1 1466 3 is_stmt 1 view .LVU503
1467:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** }
 1534              		.loc 1 1467 1 is_stmt 0 view .LVU504
 1535 000e 7047     		bx	lr
 1536              	.LVL121:
 1537              	.L128:
1459:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 1538              		.loc 1 1459 5 is_stmt 1 view .LVU505
 1539              	.LBB6:
 1540              	.LBI6:
 1541              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 59


  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 60


  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 61


 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 62


 210:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 212:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 213:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 214:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 216:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 217:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 220:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 222:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 223:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 225:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 226:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 227:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 229:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 230:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 233:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 235:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 239:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 240:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 241:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 244:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 250:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 253:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 254:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 258:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 260:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 262:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 266:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 63


 267:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 269:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 270:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 274:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 279:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 283:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 284:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 285:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 287:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 289:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 295:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 296:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 298:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 300:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 302:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 305:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 306:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 307:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 308:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 311:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 312:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 315:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 318:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 319:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 321:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 322:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 323:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 64


 324:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 326:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 327:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 328:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 329:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 345:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 346:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 348:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 350:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 354:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 355:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 359:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 360:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 361:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 362:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 363:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 364:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 365:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 366:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 367:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 368:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 369:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 371:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 373:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 378:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 65


 381:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 384:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 386:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 389:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 390:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 391:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 393:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 394:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 395:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 396:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 397:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 398:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 399:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 401:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 402:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 405:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 410:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 411:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 413:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 415:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 416:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 417:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 419:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 420:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 421:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               SP Register value
 422:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 423:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 424:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 429:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 430:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 431:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 433:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 435:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 436:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 437:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 66


 438:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 440:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 441:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 442:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 444:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 445:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 446:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 447:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 448:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 449:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 450:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 452:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 454:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 456:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 459:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 460:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 464:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 468:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 469:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 471:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 472:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 473:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 474:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 476:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 477:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 480:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 486:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 491:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 492:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 493:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 67


 495:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 498:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 499:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 500:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 502:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 506:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 507:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 509:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 512:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 513:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 516:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 519:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 520:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 521:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 522:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 523:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 527:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 529:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 530:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 531:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 533:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 537:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 538:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 540:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 541:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 545:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 546:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 68


 552:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 553:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 554:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 558:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 559:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 564:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 565:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 568:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 569:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 571:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 573:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 574:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 575:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 576:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 578:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 579:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 583:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 585:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 587:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 588:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 589:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 593:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 595:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 596:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 597:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 599:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 603:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 604:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 608:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 69


 609:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 610:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 611:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 615:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 616:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 617:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 618:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 621:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 622:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 623:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 625:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 627:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 628:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 629:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 633:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 634:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 637:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 639:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 640:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 642:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 643:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 644:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 647:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 649:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 650:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 652:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 655:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 658:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 665:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 70


 666:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 667:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 668:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 669:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 677:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 679:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 680:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 681:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 684:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 685:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 686:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 690:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 693:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 696:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 699:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 700:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 704:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 705:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 706:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 707:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 708:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 710:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 712:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 713:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 714:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 715:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 716:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 717:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 721:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 71


 723:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 724:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 726:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 727:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 730:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 734:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 735:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 736:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 737:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 742:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 746:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 749:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 753:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 754:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 757:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 758:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 759:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 760:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 761:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 762:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 763:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 768:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 774:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 777:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 779:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 72


 780:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 781:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 782:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 784:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 785:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 786:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 788:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 795:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 799:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 802:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 803:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 804:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 805:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 807:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 808:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 809:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 810:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 811:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 812:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 814:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 815:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 818:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 819:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 821:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 825:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 826:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 827:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 828:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 831:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 832:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 833:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 836:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 73


 837:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 838:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 839:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 842:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 843:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 846:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 847:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 848:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 849:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(0U);
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 853:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 854:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 858:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 860:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 863:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 866:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 867:Drivers/CMSIS/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 868:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 870:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 871:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)fpscr;
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 875:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 878:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 882:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 884:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 885:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 886:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 889:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 892:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 74


 894:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 895:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 903:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 904:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 905:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 907:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 908:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 909:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 912:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 913:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 914:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 915:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 916:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 917:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 918:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 919:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 920:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 926:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 930:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 931:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 932:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 933:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 935:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 943:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 945:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 947:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 948:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 75


 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 952:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 953:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 954:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 956:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 958:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 959:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 963:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 964:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 965:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 966:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 967:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 968:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 969:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 970:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 971:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 972:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 973:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 974:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 975:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 976:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 977:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 978:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 979:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 980:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 981:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 982:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 983:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 984:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 985:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 986:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 987:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 988:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 989:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 990:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 991:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 992:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 993:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 994:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 995:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 996:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 997:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 998:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 999:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
1000:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1001:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
1002:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1003:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1004:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
1005:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
1006:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
1007:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 76


1008:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
1009:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
1010:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1011:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1012:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1013:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1014:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1015:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
1016:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
1017:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
1018:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
1019:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
1020:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1021:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
1022:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1023:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
1024:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
1025:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
1026:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
1027:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
1028:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
1029:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1030:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1031:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1032:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1033:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
1034:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
1035:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
1036:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
1037:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
1038:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1039:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
1040:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1041:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1042:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1043:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
1044:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
1045:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
1046:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
1047:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 1542              		.loc 2 1048 31 view .LVU506
 1543              	.LBB7:
1049:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1050:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 1544              		.loc 2 1050 3 view .LVU507
1051:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1052:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1053:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1054:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
1055:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 1545              		.loc 2 1055 4 view .LVU508
 1546              		.syntax unified
 1547              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1548 0010 91FAA1F1 		rbit r1, r1
 1549              	@ 0 "" 2
 1550              	.LVL122:
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 77


1056:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
1057:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
1058:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1059:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
1060:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
1061:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
1062:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
1063:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
1064:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
1065:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
1066:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
1067:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1068:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 1551              		.loc 2 1068 3 view .LVU509
 1552              		.loc 2 1068 3 is_stmt 0 view .LVU510
 1553              		.thumb
 1554              		.syntax unified
 1555              	.LBE7:
 1556              	.LBE6:
 1557              	.LBB8:
 1558              	.LBI8:
1069:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1070:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1071:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1072:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1073:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
1074:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
1075:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
1076:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
1077:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 1559              		.loc 2 1078 30 is_stmt 1 view .LVU511
 1560              	.LBB9:
1079:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1080:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
1081:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
1082:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
1083:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
1084:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
1085:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
1086:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
1087:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
1088:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 1561              		.loc 2 1089 3 view .LVU512
 1562              		.loc 2 1089 6 is_stmt 0 view .LVU513
 1563 0014 41B1     		cbz	r1, .L127
1090:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
1092:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
1093:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 1564              		.loc 2 1093 3 is_stmt 1 view .LVU514
 1565              		.loc 2 1093 10 is_stmt 0 discriminator 1 view .LVU515
 1566 0016 B1FA81F1 		clz	r1, r1
 1567              	.LVL123:
 1568              	.L125:
 1569              		.loc 2 1093 10 discriminator 1 view .LVU516
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 78


 1570              	.LBE9:
 1571              	.LBE8:
1462:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 1572              		.loc 1 1462 5 is_stmt 1 view .LVU517
1462:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 1573              		.loc 1 1462 22 is_stmt 0 view .LVU518
 1574 001a 0368     		ldr	r3, [r0]
1462:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 1575              		.loc 1 1462 61 view .LVU519
 1576 001c 1831     		adds	r1, r1, #24
 1577              	.LVL124:
1462:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 1578              		.loc 1 1462 61 view .LVU520
 1579 001e 03EB0113 		add	r3, r3, r1, lsl #4
 1580 0022 5868     		ldr	r0, [r3, #4]
 1581              	.LVL125:
1462:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 1582              		.loc 1 1462 85 view .LVU521
 1583 0024 000C     		lsrs	r0, r0, #16
 1584              	.LVL126:
1462:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 1585              		.loc 1 1462 85 view .LVU522
 1586 0026 7047     		bx	lr
 1587              	.LVL127:
 1588              	.L127:
 1589              	.LBB11:
 1590              	.LBB10:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 1591              		.loc 2 1091 12 view .LVU523
 1592 0028 2021     		movs	r1, #32
 1593              	.LVL128:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 1594              		.loc 2 1091 12 view .LVU524
 1595 002a F6E7     		b	.L125
 1596              	.LBE10:
 1597              	.LBE11:
 1598              		.cfi_endproc
 1599              	.LFE302:
 1601              		.section	.text.HAL_CAN_GetRxMessage,"ax",%progbits
 1602              		.align	1
 1603              		.global	HAL_CAN_GetRxMessage
 1604              		.syntax unified
 1605              		.thumb
 1606              		.thumb_func
 1608              	HAL_CAN_GetRxMessage:
 1609              	.LVL129:
 1610              	.LFB303:
1468:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1469:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /**
1470:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @brief  Get an CAN frame from the Rx FIFO zone into the message RAM.
1471:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
1472:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         the configuration information for the specified CAN.
1473:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  RxFifo Fifo number of the received message to be read.
1474:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         This parameter can be a value of @arg CAN_receive_FIFO_number.
1475:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  pHeader pointer to a CAN_RxHeaderTypeDef structure where the header
1476:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         of the Rx frame will be stored.
1477:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  aData array where the payload of the Rx frame will be stored.
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 79


1478:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @retval HAL status
1479:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
1480:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_GetRxMessage(CAN_HandleTypeDef *hcan, uint32_t RxFifo,
1481:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****                                        CAN_RxHeaderTypeDef *pHeader, uint8_t aData[])
1482:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** {
 1611              		.loc 1 1482 1 is_stmt 1 view -0
 1612              		.cfi_startproc
 1613              		@ args = 0, pretend = 0, frame = 0
 1614              		@ frame_needed = 0, uses_anonymous_args = 0
 1615              		@ link register save eliminated.
1483:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1616              		.loc 1 1483 3 view .LVU526
 1617              		.loc 1 1483 24 is_stmt 0 view .LVU527
 1618 0000 90F820C0 		ldrb	ip, [r0, #32]	@ zero_extendqisi2
 1619              	.LVL130:
1484:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1485:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   assert_param(IS_CAN_RX_FIFO(RxFifo));
 1620              		.loc 1 1485 3 is_stmt 1 view .LVU528
1486:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1487:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 1621              		.loc 1 1487 3 view .LVU529
 1622              		.loc 1 1487 38 is_stmt 0 view .LVU530
 1623 0004 0CF1FF3C 		add	ip, ip, #-1
 1624              	.LVL131:
 1625              		.loc 1 1487 38 view .LVU531
 1626 0008 5FFA8CFC 		uxtb	ip, ip
 1627              	.LVL132:
 1628              		.loc 1 1487 6 view .LVU532
 1629 000c BCF1010F 		cmp	ip, #1
 1630 0010 00F2A580 		bhi	.L130
1482:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1631              		.loc 1 1482 1 view .LVU533
 1632 0014 30B4     		push	{r4, r5}
 1633              		.cfi_def_cfa_offset 8
 1634              		.cfi_offset 4, -8
 1635              		.cfi_offset 5, -4
1488:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1489:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
1490:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Check the Rx FIFO */
1491:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     if (RxFifo == CAN_RX_FIFO0) /* Rx element is assigned to Rx FIFO 0 */
 1636              		.loc 1 1491 5 is_stmt 1 view .LVU534
 1637              		.loc 1 1491 8 is_stmt 0 view .LVU535
 1638 0016 51B9     		cbnz	r1, .L131
1492:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
1493:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Check that the Rx FIFO 0 is not empty */
1494:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       if ((hcan->Instance->RF0R & CAN_RF0R_FMP0) == 0U)
 1639              		.loc 1 1494 7 is_stmt 1 view .LVU536
 1640              		.loc 1 1494 16 is_stmt 0 view .LVU537
 1641 0018 0468     		ldr	r4, [r0]
 1642              		.loc 1 1494 26 view .LVU538
 1643 001a E468     		ldr	r4, [r4, #12]
 1644              		.loc 1 1494 10 view .LVU539
 1645 001c 14F0030F 		tst	r4, #3
 1646 0020 10D1     		bne	.L132
1495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       {
1496:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         /* Update error code */
1497:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_PARAM;
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 80


 1647              		.loc 1 1497 9 is_stmt 1 view .LVU540
 1648              		.loc 1 1497 13 is_stmt 0 view .LVU541
 1649 0022 436A     		ldr	r3, [r0, #36]
 1650              	.LVL133:
 1651              		.loc 1 1497 25 view .LVU542
 1652 0024 43F40013 		orr	r3, r3, #2097152
 1653 0028 4362     		str	r3, [r0, #36]
1498:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1499:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         return HAL_ERROR;
 1654              		.loc 1 1499 9 is_stmt 1 view .LVU543
 1655              		.loc 1 1499 16 is_stmt 0 view .LVU544
 1656 002a 0120     		movs	r0, #1
 1657              	.LVL134:
 1658              		.loc 1 1499 16 view .LVU545
 1659 002c 7EE0     		b	.L133
 1660              	.LVL135:
 1661              	.L131:
1500:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       }
1501:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
1502:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     else /* Rx element is assigned to Rx FIFO 1 */
1503:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
1504:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Check that the Rx FIFO 1 is not empty */
1505:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       if ((hcan->Instance->RF1R & CAN_RF1R_FMP1) == 0U)
 1662              		.loc 1 1505 7 is_stmt 1 view .LVU546
 1663              		.loc 1 1505 16 is_stmt 0 view .LVU547
 1664 002e 0468     		ldr	r4, [r0]
 1665              		.loc 1 1505 26 view .LVU548
 1666 0030 2469     		ldr	r4, [r4, #16]
 1667              		.loc 1 1505 10 view .LVU549
 1668 0032 14F0030F 		tst	r4, #3
 1669 0036 05D1     		bne	.L132
1506:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       {
1507:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         /* Update error code */
1508:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_PARAM;
 1670              		.loc 1 1508 9 is_stmt 1 view .LVU550
 1671              		.loc 1 1508 13 is_stmt 0 view .LVU551
 1672 0038 436A     		ldr	r3, [r0, #36]
 1673              	.LVL136:
 1674              		.loc 1 1508 25 view .LVU552
 1675 003a 43F40013 		orr	r3, r3, #2097152
 1676 003e 4362     		str	r3, [r0, #36]
1509:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1510:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         return HAL_ERROR;
 1677              		.loc 1 1510 9 is_stmt 1 view .LVU553
 1678              		.loc 1 1510 16 is_stmt 0 view .LVU554
 1679 0040 0120     		movs	r0, #1
 1680              	.LVL137:
 1681              		.loc 1 1510 16 view .LVU555
 1682 0042 73E0     		b	.L133
 1683              	.LVL138:
 1684              	.L132:
1511:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       }
1512:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
1513:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1514:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Get the header */
1515:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     pHeader->IDE = CAN_RI0R_IDE & hcan->Instance->sFIFOMailBox[RxFifo].RIR;
 1685              		.loc 1 1515 5 is_stmt 1 view .LVU556
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 81


 1686              		.loc 1 1515 39 is_stmt 0 view .LVU557
 1687 0044 0568     		ldr	r5, [r0]
 1688              		.loc 1 1515 71 view .LVU558
 1689 0046 01F11B04 		add	r4, r1, #27
 1690 004a 2401     		lsls	r4, r4, #4
 1691 004c 2C59     		ldr	r4, [r5, r4]
 1692              		.loc 1 1515 33 view .LVU559
 1693 004e 04F00404 		and	r4, r4, #4
 1694              		.loc 1 1515 18 view .LVU560
 1695 0052 9460     		str	r4, [r2, #8]
1516:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     if (pHeader->IDE == CAN_ID_STD)
 1696              		.loc 1 1516 5 is_stmt 1 view .LVU561
 1697              		.loc 1 1516 8 is_stmt 0 view .LVU562
 1698 0054 002C     		cmp	r4, #0
 1699 0056 6BD1     		bne	.L134
1517:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
1518:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       pHeader->StdId = (CAN_RI0R_STID & hcan->Instance->sFIFOMailBox[RxFifo].RIR) >> CAN_TI0R_STID_
 1700              		.loc 1 1518 7 is_stmt 1 view .LVU563
 1701              		.loc 1 1518 45 is_stmt 0 view .LVU564
 1702 0058 0568     		ldr	r5, [r0]
 1703              		.loc 1 1518 77 view .LVU565
 1704 005a 01F11B04 		add	r4, r1, #27
 1705 005e 2401     		lsls	r4, r4, #4
 1706 0060 2C59     		ldr	r4, [r5, r4]
 1707              		.loc 1 1518 83 view .LVU566
 1708 0062 640D     		lsrs	r4, r4, #21
 1709              		.loc 1 1518 22 view .LVU567
 1710 0064 1460     		str	r4, [r2]
 1711              	.L135:
1519:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
1520:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     else
1521:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
1522:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       pHeader->ExtId = ((CAN_RI0R_EXID | CAN_RI0R_STID) &
1523:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****                         hcan->Instance->sFIFOMailBox[RxFifo].RIR) >> CAN_RI0R_EXID_Pos;
1524:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
1525:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     pHeader->RTR = (CAN_RI0R_RTR & hcan->Instance->sFIFOMailBox[RxFifo].RIR);
 1712              		.loc 1 1525 5 is_stmt 1 view .LVU568
 1713              		.loc 1 1525 40 is_stmt 0 view .LVU569
 1714 0066 0468     		ldr	r4, [r0]
 1715              		.loc 1 1525 72 view .LVU570
 1716 0068 01F11B0C 		add	ip, r1, #27
 1717 006c 4FEA0C1C 		lsl	ip, ip, #4
 1718 0070 54F80C40 		ldr	r4, [r4, ip]
 1719              		.loc 1 1525 34 view .LVU571
 1720 0074 04F00204 		and	r4, r4, #2
 1721              		.loc 1 1525 18 view .LVU572
 1722 0078 D460     		str	r4, [r2, #12]
1526:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     if (((CAN_RDT0R_DLC & hcan->Instance->sFIFOMailBox[RxFifo].RDTR) >> CAN_RDT0R_DLC_Pos) >= 8U)
 1723              		.loc 1 1526 5 is_stmt 1 view .LVU573
 1724              		.loc 1 1526 31 is_stmt 0 view .LVU574
 1725 007a 0468     		ldr	r4, [r0]
 1726              		.loc 1 1526 63 view .LVU575
 1727 007c A444     		add	ip, ip, r4
 1728 007e DCF80450 		ldr	r5, [ip, #4]
 1729              		.loc 1 1526 8 view .LVU576
 1730 0082 15F0080F 		tst	r5, #8
 1731 0086 5BD0     		beq	.L136
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 82


1527:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
1528:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Truncate DLC to 8 if received field is over range */
1529:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       pHeader->DLC = 8U;
 1732              		.loc 1 1529 7 is_stmt 1 view .LVU577
 1733              		.loc 1 1529 20 is_stmt 0 view .LVU578
 1734 0088 0824     		movs	r4, #8
 1735 008a 1461     		str	r4, [r2, #16]
 1736              	.L137:
1530:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
1531:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     else
1532:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
1533:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       pHeader->DLC = (CAN_RDT0R_DLC & hcan->Instance->sFIFOMailBox[RxFifo].RDTR) >> CAN_RDT0R_DLC_P
1534:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
1535:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     pHeader->FilterMatchIndex = (CAN_RDT0R_FMI & hcan->Instance->sFIFOMailBox[RxFifo].RDTR) >> CAN_
 1737              		.loc 1 1535 5 is_stmt 1 view .LVU579
 1738              		.loc 1 1535 54 is_stmt 0 view .LVU580
 1739 008c 0468     		ldr	r4, [r0]
 1740              		.loc 1 1535 86 view .LVU581
 1741 008e 01F11B0C 		add	ip, r1, #27
 1742 0092 04EB0C14 		add	r4, r4, ip, lsl #4
 1743 0096 6468     		ldr	r4, [r4, #4]
 1744              		.loc 1 1535 93 view .LVU582
 1745 0098 C4F30724 		ubfx	r4, r4, #8, #8
 1746              		.loc 1 1535 31 view .LVU583
 1747 009c 9461     		str	r4, [r2, #24]
1536:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     pHeader->Timestamp = (CAN_RDT0R_TIME & hcan->Instance->sFIFOMailBox[RxFifo].RDTR) >> CAN_RDT0R_
 1748              		.loc 1 1536 5 is_stmt 1 view .LVU584
 1749              		.loc 1 1536 48 is_stmt 0 view .LVU585
 1750 009e 0468     		ldr	r4, [r0]
 1751              		.loc 1 1536 80 view .LVU586
 1752 00a0 04EB0C14 		add	r4, r4, ip, lsl #4
 1753 00a4 6468     		ldr	r4, [r4, #4]
 1754              		.loc 1 1536 87 view .LVU587
 1755 00a6 240C     		lsrs	r4, r4, #16
 1756              		.loc 1 1536 24 view .LVU588
 1757 00a8 5461     		str	r4, [r2, #20]
1537:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1538:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Get the data */
1539:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     aData[0] = (uint8_t)((CAN_RDL0R_DATA0 & hcan->Instance->sFIFOMailBox[RxFifo].RDLR) >> CAN_RDL0R
 1758              		.loc 1 1539 5 is_stmt 1 view .LVU589
 1759              		.loc 1 1539 49 is_stmt 0 view .LVU590
 1760 00aa 0268     		ldr	r2, [r0]
 1761              	.LVL139:
 1762              		.loc 1 1539 81 view .LVU591
 1763 00ac 02EB0112 		add	r2, r2, r1, lsl #4
 1764 00b0 D2F8B821 		ldr	r2, [r2, #440]
 1765              		.loc 1 1539 14 view .LVU592
 1766 00b4 1A70     		strb	r2, [r3]
1540:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     aData[1] = (uint8_t)((CAN_RDL0R_DATA1 & hcan->Instance->sFIFOMailBox[RxFifo].RDLR) >> CAN_RDL0R
 1767              		.loc 1 1540 5 is_stmt 1 view .LVU593
 1768              		.loc 1 1540 49 is_stmt 0 view .LVU594
 1769 00b6 0268     		ldr	r2, [r0]
 1770              		.loc 1 1540 81 view .LVU595
 1771 00b8 02EB0112 		add	r2, r2, r1, lsl #4
 1772 00bc D2F8B821 		ldr	r2, [r2, #440]
 1773              		.loc 1 1540 16 view .LVU596
 1774 00c0 C2F30722 		ubfx	r2, r2, #8, #8
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 83


 1775              		.loc 1 1540 14 view .LVU597
 1776 00c4 5A70     		strb	r2, [r3, #1]
1541:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     aData[2] = (uint8_t)((CAN_RDL0R_DATA2 & hcan->Instance->sFIFOMailBox[RxFifo].RDLR) >> CAN_RDL0R
 1777              		.loc 1 1541 5 is_stmt 1 view .LVU598
 1778              		.loc 1 1541 49 is_stmt 0 view .LVU599
 1779 00c6 0268     		ldr	r2, [r0]
 1780              		.loc 1 1541 81 view .LVU600
 1781 00c8 02EB0112 		add	r2, r2, r1, lsl #4
 1782 00cc D2F8B821 		ldr	r2, [r2, #440]
 1783              		.loc 1 1541 16 view .LVU601
 1784 00d0 C2F30742 		ubfx	r2, r2, #16, #8
 1785              		.loc 1 1541 14 view .LVU602
 1786 00d4 9A70     		strb	r2, [r3, #2]
1542:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     aData[3] = (uint8_t)((CAN_RDL0R_DATA3 & hcan->Instance->sFIFOMailBox[RxFifo].RDLR) >> CAN_RDL0R
 1787              		.loc 1 1542 5 is_stmt 1 view .LVU603
 1788              		.loc 1 1542 49 is_stmt 0 view .LVU604
 1789 00d6 0268     		ldr	r2, [r0]
 1790              		.loc 1 1542 81 view .LVU605
 1791 00d8 02EB0112 		add	r2, r2, r1, lsl #4
 1792 00dc D2F8B821 		ldr	r2, [r2, #440]
 1793              		.loc 1 1542 16 view .LVU606
 1794 00e0 120E     		lsrs	r2, r2, #24
 1795              		.loc 1 1542 14 view .LVU607
 1796 00e2 DA70     		strb	r2, [r3, #3]
1543:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     aData[4] = (uint8_t)((CAN_RDH0R_DATA4 & hcan->Instance->sFIFOMailBox[RxFifo].RDHR) >> CAN_RDH0R
 1797              		.loc 1 1543 5 is_stmt 1 view .LVU608
 1798              		.loc 1 1543 49 is_stmt 0 view .LVU609
 1799 00e4 0268     		ldr	r2, [r0]
 1800              		.loc 1 1543 81 view .LVU610
 1801 00e6 02EB0112 		add	r2, r2, r1, lsl #4
 1802 00ea D2F8BC21 		ldr	r2, [r2, #444]
 1803              		.loc 1 1543 14 view .LVU611
 1804 00ee 1A71     		strb	r2, [r3, #4]
1544:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     aData[5] = (uint8_t)((CAN_RDH0R_DATA5 & hcan->Instance->sFIFOMailBox[RxFifo].RDHR) >> CAN_RDH0R
 1805              		.loc 1 1544 5 is_stmt 1 view .LVU612
 1806              		.loc 1 1544 49 is_stmt 0 view .LVU613
 1807 00f0 0268     		ldr	r2, [r0]
 1808              		.loc 1 1544 81 view .LVU614
 1809 00f2 02EB0112 		add	r2, r2, r1, lsl #4
 1810 00f6 D2F8BC21 		ldr	r2, [r2, #444]
 1811              		.loc 1 1544 16 view .LVU615
 1812 00fa C2F30722 		ubfx	r2, r2, #8, #8
 1813              		.loc 1 1544 14 view .LVU616
 1814 00fe 5A71     		strb	r2, [r3, #5]
1545:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     aData[6] = (uint8_t)((CAN_RDH0R_DATA6 & hcan->Instance->sFIFOMailBox[RxFifo].RDHR) >> CAN_RDH0R
 1815              		.loc 1 1545 5 is_stmt 1 view .LVU617
 1816              		.loc 1 1545 49 is_stmt 0 view .LVU618
 1817 0100 0268     		ldr	r2, [r0]
 1818              		.loc 1 1545 81 view .LVU619
 1819 0102 02EB0112 		add	r2, r2, r1, lsl #4
 1820 0106 D2F8BC21 		ldr	r2, [r2, #444]
 1821              		.loc 1 1545 16 view .LVU620
 1822 010a C2F30742 		ubfx	r2, r2, #16, #8
 1823              		.loc 1 1545 14 view .LVU621
 1824 010e 9A71     		strb	r2, [r3, #6]
1546:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     aData[7] = (uint8_t)((CAN_RDH0R_DATA7 & hcan->Instance->sFIFOMailBox[RxFifo].RDHR) >> CAN_RDH0R
 1825              		.loc 1 1546 5 is_stmt 1 view .LVU622
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 84


 1826              		.loc 1 1546 49 is_stmt 0 view .LVU623
 1827 0110 0268     		ldr	r2, [r0]
 1828              		.loc 1 1546 81 view .LVU624
 1829 0112 02EB0112 		add	r2, r2, r1, lsl #4
 1830 0116 D2F8BC21 		ldr	r2, [r2, #444]
 1831              		.loc 1 1546 16 view .LVU625
 1832 011a 120E     		lsrs	r2, r2, #24
 1833              		.loc 1 1546 14 view .LVU626
 1834 011c DA71     		strb	r2, [r3, #7]
1547:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1548:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Release the FIFO */
1549:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     if (RxFifo == CAN_RX_FIFO0) /* Rx element is assigned to Rx FIFO 0 */
 1835              		.loc 1 1549 5 is_stmt 1 view .LVU627
 1836              		.loc 1 1549 8 is_stmt 0 view .LVU628
 1837 011e C1B9     		cbnz	r1, .L138
1550:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
1551:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Release RX FIFO 0 */
1552:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       SET_BIT(hcan->Instance->RF0R, CAN_RF0R_RFOM0);
 1838              		.loc 1 1552 7 is_stmt 1 view .LVU629
 1839 0120 0268     		ldr	r2, [r0]
 1840 0122 D368     		ldr	r3, [r2, #12]
 1841              	.LVL140:
 1842              		.loc 1 1552 7 is_stmt 0 view .LVU630
 1843 0124 43F02003 		orr	r3, r3, #32
 1844 0128 D360     		str	r3, [r2, #12]
 1845              	.L139:
1553:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
1554:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     else /* Rx element is assigned to Rx FIFO 1 */
1555:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
1556:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Release RX FIFO 1 */
1557:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       SET_BIT(hcan->Instance->RF1R, CAN_RF1R_RFOM1);
1558:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
1559:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1560:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Return function status */
1561:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     return HAL_OK;
 1846              		.loc 1 1561 5 is_stmt 1 view .LVU631
 1847              		.loc 1 1561 12 is_stmt 0 view .LVU632
 1848 012a 0020     		movs	r0, #0
 1849              	.LVL141:
 1850              	.L133:
1562:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
1563:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   else
1564:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
1565:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Update error code */
1566:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
1567:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1568:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     return HAL_ERROR;
1569:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
1570:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** }
 1851              		.loc 1 1570 1 view .LVU633
 1852 012c 30BC     		pop	{r4, r5}
 1853              		.cfi_remember_state
 1854              		.cfi_restore 5
 1855              		.cfi_restore 4
 1856              		.cfi_def_cfa_offset 0
 1857 012e 7047     		bx	lr
 1858              	.LVL142:
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 85


 1859              	.L134:
 1860              		.cfi_restore_state
1522:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****                         hcan->Instance->sFIFOMailBox[RxFifo].RIR) >> CAN_RI0R_EXID_Pos;
 1861              		.loc 1 1522 7 is_stmt 1 view .LVU634
1523:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 1862              		.loc 1 1523 29 is_stmt 0 view .LVU635
 1863 0130 0568     		ldr	r5, [r0]
1523:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 1864              		.loc 1 1523 61 view .LVU636
 1865 0132 01F11B04 		add	r4, r1, #27
 1866 0136 2401     		lsls	r4, r4, #4
 1867 0138 2C59     		ldr	r4, [r5, r4]
1523:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 1868              		.loc 1 1523 67 view .LVU637
 1869 013a E408     		lsrs	r4, r4, #3
1522:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****                         hcan->Instance->sFIFOMailBox[RxFifo].RIR) >> CAN_RI0R_EXID_Pos;
 1870              		.loc 1 1522 22 view .LVU638
 1871 013c 5460     		str	r4, [r2, #4]
 1872 013e 92E7     		b	.L135
 1873              	.L136:
1533:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 1874              		.loc 1 1533 7 is_stmt 1 view .LVU639
1533:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 1875              		.loc 1 1533 75 is_stmt 0 view .LVU640
 1876 0140 01F11B05 		add	r5, r1, #27
 1877 0144 04EB0514 		add	r4, r4, r5, lsl #4
 1878 0148 6468     		ldr	r4, [r4, #4]
1533:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 1879              		.loc 1 1533 82 view .LVU641
 1880 014a 04F00F04 		and	r4, r4, #15
1533:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 1881              		.loc 1 1533 20 view .LVU642
 1882 014e 1461     		str	r4, [r2, #16]
 1883 0150 9CE7     		b	.L137
 1884              	.LVL143:
 1885              	.L138:
1557:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 1886              		.loc 1 1557 7 is_stmt 1 view .LVU643
 1887 0152 0268     		ldr	r2, [r0]
 1888 0154 1369     		ldr	r3, [r2, #16]
 1889              	.LVL144:
1557:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 1890              		.loc 1 1557 7 is_stmt 0 view .LVU644
 1891 0156 43F02003 		orr	r3, r3, #32
 1892 015a 1361     		str	r3, [r2, #16]
 1893 015c E5E7     		b	.L139
 1894              	.LVL145:
 1895              	.L130:
 1896              		.cfi_def_cfa_offset 0
 1897              		.cfi_restore 4
 1898              		.cfi_restore 5
1566:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 1899              		.loc 1 1566 5 is_stmt 1 view .LVU645
1566:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 1900              		.loc 1 1566 9 is_stmt 0 view .LVU646
 1901 015e 436A     		ldr	r3, [r0, #36]
 1902              	.LVL146:
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 86


1566:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 1903              		.loc 1 1566 21 view .LVU647
 1904 0160 43F48023 		orr	r3, r3, #262144
 1905 0164 4362     		str	r3, [r0, #36]
1568:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 1906              		.loc 1 1568 5 is_stmt 1 view .LVU648
1568:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 1907              		.loc 1 1568 12 is_stmt 0 view .LVU649
 1908 0166 0120     		movs	r0, #1
 1909              	.LVL147:
 1910              		.loc 1 1570 1 view .LVU650
 1911 0168 7047     		bx	lr
 1912              		.cfi_endproc
 1913              	.LFE303:
 1915              		.section	.text.HAL_CAN_GetRxFifoFillLevel,"ax",%progbits
 1916              		.align	1
 1917              		.global	HAL_CAN_GetRxFifoFillLevel
 1918              		.syntax unified
 1919              		.thumb
 1920              		.thumb_func
 1922              	HAL_CAN_GetRxFifoFillLevel:
 1923              	.LVL148:
 1924              	.LFB304:
1571:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1572:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /**
1573:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @brief  Return Rx FIFO fill level.
1574:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
1575:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         the configuration information for the specified CAN.
1576:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  RxFifo Rx FIFO.
1577:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         This parameter can be a value of @arg CAN_receive_FIFO_number.
1578:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @retval Number of messages available in Rx FIFO.
1579:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
1580:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** uint32_t HAL_CAN_GetRxFifoFillLevel(const CAN_HandleTypeDef *hcan, uint32_t RxFifo)
1581:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** {
 1925              		.loc 1 1581 1 is_stmt 1 view -0
 1926              		.cfi_startproc
 1927              		@ args = 0, pretend = 0, frame = 0
 1928              		@ frame_needed = 0, uses_anonymous_args = 0
 1929              		@ link register save eliminated.
1582:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   uint32_t filllevel = 0U;
 1930              		.loc 1 1582 3 view .LVU652
1583:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1931              		.loc 1 1583 3 view .LVU653
 1932              		.loc 1 1583 24 is_stmt 0 view .LVU654
 1933 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 1934              	.LVL149:
1584:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1585:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Check function parameters */
1586:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   assert_param(IS_CAN_RX_FIFO(RxFifo));
 1935              		.loc 1 1586 3 is_stmt 1 view .LVU655
1587:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1588:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 1936              		.loc 1 1588 3 view .LVU656
 1937              		.loc 1 1588 38 is_stmt 0 view .LVU657
 1938 0004 013B     		subs	r3, r3, #1
 1939              	.LVL150:
 1940              		.loc 1 1588 38 view .LVU658
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 87


 1941 0006 DBB2     		uxtb	r3, r3
 1942              	.LVL151:
 1943              		.loc 1 1588 6 view .LVU659
 1944 0008 012B     		cmp	r3, #1
 1945 000a 01D9     		bls	.L148
1582:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1946              		.loc 1 1582 12 view .LVU660
 1947 000c 0020     		movs	r0, #0
 1948              	.LVL152:
1589:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1590:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
1591:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     if (RxFifo == CAN_RX_FIFO0)
1592:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
1593:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       filllevel = hcan->Instance->RF0R & CAN_RF0R_FMP0;
1594:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
1595:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     else /* RxFifo == CAN_RX_FIFO1 */
1596:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
1597:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       filllevel = hcan->Instance->RF1R & CAN_RF1R_FMP1;
1598:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
1599:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
1600:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1601:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Return Rx FIFO fill level */
1602:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   return filllevel;
 1949              		.loc 1 1602 3 is_stmt 1 view .LVU661
1603:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** }
 1950              		.loc 1 1603 1 is_stmt 0 view .LVU662
 1951 000e 7047     		bx	lr
 1952              	.LVL153:
 1953              	.L148:
1591:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 1954              		.loc 1 1591 5 is_stmt 1 view .LVU663
1591:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 1955              		.loc 1 1591 8 is_stmt 0 view .LVU664
 1956 0010 21B9     		cbnz	r1, .L146
1593:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 1957              		.loc 1 1593 7 is_stmt 1 view .LVU665
1593:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 1958              		.loc 1 1593 23 is_stmt 0 view .LVU666
 1959 0012 0368     		ldr	r3, [r0]
1593:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 1960              		.loc 1 1593 33 view .LVU667
 1961 0014 D868     		ldr	r0, [r3, #12]
 1962              	.LVL154:
1593:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 1963              		.loc 1 1593 17 view .LVU668
 1964 0016 00F00300 		and	r0, r0, #3
 1965              	.LVL155:
1593:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 1966              		.loc 1 1593 17 view .LVU669
 1967 001a 7047     		bx	lr
 1968              	.LVL156:
 1969              	.L146:
1597:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 1970              		.loc 1 1597 7 is_stmt 1 view .LVU670
1597:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 1971              		.loc 1 1597 23 is_stmt 0 view .LVU671
 1972 001c 0368     		ldr	r3, [r0]
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 88


1597:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 1973              		.loc 1 1597 33 view .LVU672
 1974 001e 1869     		ldr	r0, [r3, #16]
 1975              	.LVL157:
1597:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 1976              		.loc 1 1597 17 view .LVU673
 1977 0020 00F00300 		and	r0, r0, #3
 1978              	.LVL158:
1597:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 1979              		.loc 1 1597 17 view .LVU674
 1980 0024 7047     		bx	lr
 1981              		.cfi_endproc
 1982              	.LFE304:
 1984              		.section	.text.HAL_CAN_ActivateNotification,"ax",%progbits
 1985              		.align	1
 1986              		.global	HAL_CAN_ActivateNotification
 1987              		.syntax unified
 1988              		.thumb
 1989              		.thumb_func
 1991              	HAL_CAN_ActivateNotification:
 1992              	.LVL159:
 1993              	.LFB305:
1604:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1605:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /**
1606:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @}
1607:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
1608:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1609:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /** @defgroup CAN_Exported_Functions_Group4 Interrupts management
1610:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @brief    Interrupts management
1611:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *
1612:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** @verbatim
1613:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   ==============================================================================
1614:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****                        ##### Interrupts management #####
1615:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   ==============================================================================
1616:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     [..]  This section provides functions allowing to:
1617:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (+) HAL_CAN_ActivateNotification      : Enable interrupts
1618:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (+) HAL_CAN_DeactivateNotification    : Disable interrupts
1619:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (+) HAL_CAN_IRQHandler                : Handles CAN interrupt request
1620:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1621:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** @endverbatim
1622:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @{
1623:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
1624:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1625:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /**
1626:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @brief  Enable interrupts.
1627:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
1628:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         the configuration information for the specified CAN.
1629:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  ActiveITs indicates which interrupts will be enabled.
1630:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         This parameter can be any combination of @arg CAN_Interrupts.
1631:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @retval HAL status
1632:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
1633:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_ActivateNotification(CAN_HandleTypeDef *hcan, uint32_t ActiveITs)
1634:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** {
 1994              		.loc 1 1634 1 is_stmt 1 view -0
 1995              		.cfi_startproc
 1996              		@ args = 0, pretend = 0, frame = 0
 1997              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 89


 1998              		@ link register save eliminated.
1635:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1999              		.loc 1 1635 3 view .LVU676
 2000              		.loc 1 1635 24 is_stmt 0 view .LVU677
 2001 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 2002              	.LVL160:
1636:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1637:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Check function parameters */
1638:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   assert_param(IS_CAN_IT(ActiveITs));
 2003              		.loc 1 1638 3 is_stmt 1 view .LVU678
1639:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1640:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 2004              		.loc 1 1640 3 view .LVU679
 2005              		.loc 1 1640 38 is_stmt 0 view .LVU680
 2006 0004 013B     		subs	r3, r3, #1
 2007              	.LVL161:
 2008              		.loc 1 1640 38 view .LVU681
 2009 0006 DBB2     		uxtb	r3, r3
 2010              	.LVL162:
 2011              		.loc 1 1640 6 view .LVU682
 2012 0008 012B     		cmp	r3, #1
 2013 000a 05D9     		bls	.L152
1641:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1642:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
1643:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Enable the selected interrupts */
1644:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     __HAL_CAN_ENABLE_IT(hcan, ActiveITs);
1645:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1646:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Return function status */
1647:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     return HAL_OK;
1648:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
1649:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   else
1650:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
1651:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Update error code */
1652:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
 2014              		.loc 1 1652 5 is_stmt 1 view .LVU683
 2015              		.loc 1 1652 9 is_stmt 0 view .LVU684
 2016 000c 436A     		ldr	r3, [r0, #36]
 2017              		.loc 1 1652 21 view .LVU685
 2018 000e 43F48023 		orr	r3, r3, #262144
 2019 0012 4362     		str	r3, [r0, #36]
1653:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1654:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     return HAL_ERROR;
 2020              		.loc 1 1654 5 is_stmt 1 view .LVU686
 2021              		.loc 1 1654 12 is_stmt 0 view .LVU687
 2022 0014 0120     		movs	r0, #1
 2023              	.LVL163:
1655:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
1656:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** }
 2024              		.loc 1 1656 1 view .LVU688
 2025 0016 7047     		bx	lr
 2026              	.LVL164:
 2027              	.L152:
1644:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 2028              		.loc 1 1644 5 is_stmt 1 view .LVU689
 2029 0018 0268     		ldr	r2, [r0]
 2030 001a 5369     		ldr	r3, [r2, #20]
 2031 001c 0B43     		orrs	r3, r3, r1
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 90


 2032 001e 5361     		str	r3, [r2, #20]
1647:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 2033              		.loc 1 1647 5 view .LVU690
1647:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 2034              		.loc 1 1647 12 is_stmt 0 view .LVU691
 2035 0020 0020     		movs	r0, #0
 2036              	.LVL165:
1647:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 2037              		.loc 1 1647 12 view .LVU692
 2038 0022 7047     		bx	lr
 2039              		.cfi_endproc
 2040              	.LFE305:
 2042              		.section	.text.HAL_CAN_DeactivateNotification,"ax",%progbits
 2043              		.align	1
 2044              		.global	HAL_CAN_DeactivateNotification
 2045              		.syntax unified
 2046              		.thumb
 2047              		.thumb_func
 2049              	HAL_CAN_DeactivateNotification:
 2050              	.LVL166:
 2051              	.LFB306:
1657:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1658:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /**
1659:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @brief  Disable interrupts.
1660:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
1661:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         the configuration information for the specified CAN.
1662:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  InactiveITs indicates which interrupts will be disabled.
1663:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         This parameter can be any combination of @arg CAN_Interrupts.
1664:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @retval HAL status
1665:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
1666:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_DeactivateNotification(CAN_HandleTypeDef *hcan, uint32_t InactiveITs)
1667:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** {
 2052              		.loc 1 1667 1 is_stmt 1 view -0
 2053              		.cfi_startproc
 2054              		@ args = 0, pretend = 0, frame = 0
 2055              		@ frame_needed = 0, uses_anonymous_args = 0
 2056              		@ link register save eliminated.
1668:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 2057              		.loc 1 1668 3 view .LVU694
 2058              		.loc 1 1668 24 is_stmt 0 view .LVU695
 2059 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 2060              	.LVL167:
1669:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1670:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Check function parameters */
1671:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   assert_param(IS_CAN_IT(InactiveITs));
 2061              		.loc 1 1671 3 is_stmt 1 view .LVU696
1672:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1673:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 2062              		.loc 1 1673 3 view .LVU697
 2063              		.loc 1 1673 38 is_stmt 0 view .LVU698
 2064 0004 013B     		subs	r3, r3, #1
 2065              	.LVL168:
 2066              		.loc 1 1673 38 view .LVU699
 2067 0006 DBB2     		uxtb	r3, r3
 2068              	.LVL169:
 2069              		.loc 1 1673 6 view .LVU700
 2070 0008 012B     		cmp	r3, #1
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 91


 2071 000a 05D9     		bls	.L156
1674:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1675:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
1676:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Disable the selected interrupts */
1677:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     __HAL_CAN_DISABLE_IT(hcan, InactiveITs);
1678:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1679:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Return function status */
1680:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     return HAL_OK;
1681:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
1682:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   else
1683:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
1684:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Update error code */
1685:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
 2072              		.loc 1 1685 5 is_stmt 1 view .LVU701
 2073              		.loc 1 1685 9 is_stmt 0 view .LVU702
 2074 000c 436A     		ldr	r3, [r0, #36]
 2075              		.loc 1 1685 21 view .LVU703
 2076 000e 43F48023 		orr	r3, r3, #262144
 2077 0012 4362     		str	r3, [r0, #36]
1686:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1687:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     return HAL_ERROR;
 2078              		.loc 1 1687 5 is_stmt 1 view .LVU704
 2079              		.loc 1 1687 12 is_stmt 0 view .LVU705
 2080 0014 0120     		movs	r0, #1
 2081              	.LVL170:
1688:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
1689:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** }
 2082              		.loc 1 1689 1 view .LVU706
 2083 0016 7047     		bx	lr
 2084              	.LVL171:
 2085              	.L156:
1677:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 2086              		.loc 1 1677 5 is_stmt 1 view .LVU707
 2087 0018 0268     		ldr	r2, [r0]
 2088 001a 5369     		ldr	r3, [r2, #20]
 2089 001c 23EA0103 		bic	r3, r3, r1
 2090 0020 5361     		str	r3, [r2, #20]
1680:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 2091              		.loc 1 1680 5 view .LVU708
1680:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 2092              		.loc 1 1680 12 is_stmt 0 view .LVU709
 2093 0022 0020     		movs	r0, #0
 2094              	.LVL172:
1680:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 2095              		.loc 1 1680 12 view .LVU710
 2096 0024 7047     		bx	lr
 2097              		.cfi_endproc
 2098              	.LFE306:
 2100              		.section	.text.HAL_CAN_TxMailbox0CompleteCallback,"ax",%progbits
 2101              		.align	1
 2102              		.weak	HAL_CAN_TxMailbox0CompleteCallback
 2103              		.syntax unified
 2104              		.thumb
 2105              		.thumb_func
 2107              	HAL_CAN_TxMailbox0CompleteCallback:
 2108              	.LVL173:
 2109              	.LFB308:
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 92


1690:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1691:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /**
1692:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @brief  Handles CAN interrupt request
1693:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1694:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         the configuration information for the specified CAN.
1695:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @retval None
1696:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
1697:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** void HAL_CAN_IRQHandler(CAN_HandleTypeDef *hcan)
1698:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** {
1699:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   uint32_t errorcode = HAL_CAN_ERROR_NONE;
1700:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   uint32_t interrupts = READ_REG(hcan->Instance->IER);
1701:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   uint32_t msrflags = READ_REG(hcan->Instance->MSR);
1702:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   uint32_t tsrflags = READ_REG(hcan->Instance->TSR);
1703:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   uint32_t rf0rflags = READ_REG(hcan->Instance->RF0R);
1704:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   uint32_t rf1rflags = READ_REG(hcan->Instance->RF1R);
1705:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   uint32_t esrflags = READ_REG(hcan->Instance->ESR);
1706:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1707:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Transmit Mailbox empty interrupt management *****************************/
1708:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   if ((interrupts & CAN_IT_TX_MAILBOX_EMPTY) != 0U)
1709:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
1710:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Transmit Mailbox 0 management *****************************************/
1711:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     if ((tsrflags & CAN_TSR_RQCP0) != 0U)
1712:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
1713:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Clear the Transmission Complete flag (and TXOK0,ALST0,TERR0 bits) */
1714:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_RQCP0);
1715:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1716:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       if ((tsrflags & CAN_TSR_TXOK0) != 0U)
1717:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       {
1718:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         /* Transmission Mailbox 0 complete callback */
1719:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1720:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         /* Call registered callback*/
1721:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         hcan->TxMailbox0CompleteCallback(hcan);
1722:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #else
1723:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         /* Call weak (surcharged) callback */
1724:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         HAL_CAN_TxMailbox0CompleteCallback(hcan);
1725:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1726:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       }
1727:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       else
1728:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       {
1729:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         if ((tsrflags & CAN_TSR_ALST0) != 0U)
1730:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         {
1731:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           /* Update error code */
1732:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           errorcode |= HAL_CAN_ERROR_TX_ALST0;
1733:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         }
1734:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         else if ((tsrflags & CAN_TSR_TERR0) != 0U)
1735:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         {
1736:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           /* Update error code */
1737:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           errorcode |= HAL_CAN_ERROR_TX_TERR0;
1738:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         }
1739:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         else
1740:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         {
1741:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           /* Transmission Mailbox 0 abort callback */
1742:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1743:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           /* Call registered callback*/
1744:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           hcan->TxMailbox0AbortCallback(hcan);
1745:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #else
1746:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           /* Call weak (surcharged) callback */
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 93


1747:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           HAL_CAN_TxMailbox0AbortCallback(hcan);
1748:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1749:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         }
1750:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       }
1751:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
1752:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1753:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Transmit Mailbox 1 management *****************************************/
1754:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     if ((tsrflags & CAN_TSR_RQCP1) != 0U)
1755:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
1756:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Clear the Transmission Complete flag (and TXOK1,ALST1,TERR1 bits) */
1757:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_RQCP1);
1758:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1759:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       if ((tsrflags & CAN_TSR_TXOK1) != 0U)
1760:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       {
1761:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         /* Transmission Mailbox 1 complete callback */
1762:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1763:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         /* Call registered callback*/
1764:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         hcan->TxMailbox1CompleteCallback(hcan);
1765:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #else
1766:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         /* Call weak (surcharged) callback */
1767:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         HAL_CAN_TxMailbox1CompleteCallback(hcan);
1768:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1769:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       }
1770:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       else
1771:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       {
1772:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         if ((tsrflags & CAN_TSR_ALST1) != 0U)
1773:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         {
1774:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           /* Update error code */
1775:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           errorcode |= HAL_CAN_ERROR_TX_ALST1;
1776:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         }
1777:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         else if ((tsrflags & CAN_TSR_TERR1) != 0U)
1778:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         {
1779:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           /* Update error code */
1780:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           errorcode |= HAL_CAN_ERROR_TX_TERR1;
1781:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         }
1782:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         else
1783:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         {
1784:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           /* Transmission Mailbox 1 abort callback */
1785:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1786:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           /* Call registered callback*/
1787:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           hcan->TxMailbox1AbortCallback(hcan);
1788:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #else
1789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           /* Call weak (surcharged) callback */
1790:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           HAL_CAN_TxMailbox1AbortCallback(hcan);
1791:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1792:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         }
1793:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       }
1794:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
1795:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1796:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Transmit Mailbox 2 management *****************************************/
1797:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     if ((tsrflags & CAN_TSR_RQCP2) != 0U)
1798:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
1799:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Clear the Transmission Complete flag (and TXOK2,ALST2,TERR2 bits) */
1800:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_RQCP2);
1801:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1802:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       if ((tsrflags & CAN_TSR_TXOK2) != 0U)
1803:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       {
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 94


1804:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         /* Transmission Mailbox 2 complete callback */
1805:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1806:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         /* Call registered callback*/
1807:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         hcan->TxMailbox2CompleteCallback(hcan);
1808:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #else
1809:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         /* Call weak (surcharged) callback */
1810:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         HAL_CAN_TxMailbox2CompleteCallback(hcan);
1811:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1812:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       }
1813:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       else
1814:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       {
1815:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         if ((tsrflags & CAN_TSR_ALST2) != 0U)
1816:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         {
1817:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           /* Update error code */
1818:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           errorcode |= HAL_CAN_ERROR_TX_ALST2;
1819:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         }
1820:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         else if ((tsrflags & CAN_TSR_TERR2) != 0U)
1821:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         {
1822:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           /* Update error code */
1823:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           errorcode |= HAL_CAN_ERROR_TX_TERR2;
1824:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         }
1825:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         else
1826:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         {
1827:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           /* Transmission Mailbox 2 abort callback */
1828:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1829:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           /* Call registered callback*/
1830:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           hcan->TxMailbox2AbortCallback(hcan);
1831:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #else
1832:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           /* Call weak (surcharged) callback */
1833:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           HAL_CAN_TxMailbox2AbortCallback(hcan);
1834:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1835:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         }
1836:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       }
1837:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
1838:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
1839:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1840:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Receive FIFO 0 overrun interrupt management *****************************/
1841:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   if ((interrupts & CAN_IT_RX_FIFO0_OVERRUN) != 0U)
1842:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
1843:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     if ((rf0rflags & CAN_RF0R_FOVR0) != 0U)
1844:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
1845:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Set CAN error code to Rx Fifo 0 overrun error */
1846:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       errorcode |= HAL_CAN_ERROR_RX_FOV0;
1847:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1848:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Clear FIFO0 Overrun Flag */
1849:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_FOV0);
1850:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
1851:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
1852:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1853:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Receive FIFO 0 full interrupt management ********************************/
1854:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   if ((interrupts & CAN_IT_RX_FIFO0_FULL) != 0U)
1855:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
1856:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     if ((rf0rflags & CAN_RF0R_FULL0) != 0U)
1857:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
1858:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Clear FIFO 0 full Flag */
1859:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_FF0);
1860:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 95


1861:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Receive FIFO 0 full Callback */
1862:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1863:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Call registered callback*/
1864:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       hcan->RxFifo0FullCallback(hcan);
1865:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #else
1866:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Call weak (surcharged) callback */
1867:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       HAL_CAN_RxFifo0FullCallback(hcan);
1868:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1869:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
1870:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
1871:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1872:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Receive FIFO 0 message pending interrupt management *********************/
1873:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   if ((interrupts & CAN_IT_RX_FIFO0_MSG_PENDING) != 0U)
1874:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
1875:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Check if message is still pending */
1876:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     if ((hcan->Instance->RF0R & CAN_RF0R_FMP0) != 0U)
1877:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
1878:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Receive FIFO 0 message pending Callback */
1879:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1880:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Call registered callback*/
1881:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       hcan->RxFifo0MsgPendingCallback(hcan);
1882:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #else
1883:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Call weak (surcharged) callback */
1884:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       HAL_CAN_RxFifo0MsgPendingCallback(hcan);
1885:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1886:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
1887:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
1888:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1889:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Receive FIFO 1 overrun interrupt management *****************************/
1890:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   if ((interrupts & CAN_IT_RX_FIFO1_OVERRUN) != 0U)
1891:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
1892:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     if ((rf1rflags & CAN_RF1R_FOVR1) != 0U)
1893:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
1894:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Set CAN error code to Rx Fifo 1 overrun error */
1895:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       errorcode |= HAL_CAN_ERROR_RX_FOV1;
1896:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1897:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Clear FIFO1 Overrun Flag */
1898:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_FOV1);
1899:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
1900:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
1901:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1902:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Receive FIFO 1 full interrupt management ********************************/
1903:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   if ((interrupts & CAN_IT_RX_FIFO1_FULL) != 0U)
1904:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
1905:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     if ((rf1rflags & CAN_RF1R_FULL1) != 0U)
1906:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
1907:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Clear FIFO 1 full Flag */
1908:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_FF1);
1909:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1910:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Receive FIFO 1 full Callback */
1911:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1912:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Call registered callback*/
1913:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       hcan->RxFifo1FullCallback(hcan);
1914:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #else
1915:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Call weak (surcharged) callback */
1916:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       HAL_CAN_RxFifo1FullCallback(hcan);
1917:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 96


1918:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
1919:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
1920:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1921:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Receive FIFO 1 message pending interrupt management *********************/
1922:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   if ((interrupts & CAN_IT_RX_FIFO1_MSG_PENDING) != 0U)
1923:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
1924:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Check if message is still pending */
1925:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     if ((hcan->Instance->RF1R & CAN_RF1R_FMP1) != 0U)
1926:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
1927:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Receive FIFO 1 message pending Callback */
1928:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1929:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Call registered callback*/
1930:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       hcan->RxFifo1MsgPendingCallback(hcan);
1931:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #else
1932:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Call weak (surcharged) callback */
1933:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       HAL_CAN_RxFifo1MsgPendingCallback(hcan);
1934:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1935:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
1936:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
1937:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1938:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Sleep interrupt management *********************************************/
1939:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   if ((interrupts & CAN_IT_SLEEP_ACK) != 0U)
1940:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
1941:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     if ((msrflags & CAN_MSR_SLAKI) != 0U)
1942:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
1943:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Clear Sleep interrupt Flag */
1944:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_SLAKI);
1945:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1946:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Sleep Callback */
1947:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1948:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Call registered callback*/
1949:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       hcan->SleepCallback(hcan);
1950:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #else
1951:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Call weak (surcharged) callback */
1952:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       HAL_CAN_SleepCallback(hcan);
1953:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1954:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
1955:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
1956:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1957:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* WakeUp interrupt management *********************************************/
1958:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   if ((interrupts & CAN_IT_WAKEUP) != 0U)
1959:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
1960:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     if ((msrflags & CAN_MSR_WKUI) != 0U)
1961:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
1962:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Clear WakeUp Flag */
1963:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_WKU);
1964:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1965:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* WakeUp Callback */
1966:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1967:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Call registered callback*/
1968:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       hcan->WakeUpFromRxMsgCallback(hcan);
1969:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #else
1970:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Call weak (surcharged) callback */
1971:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       HAL_CAN_WakeUpFromRxMsgCallback(hcan);
1972:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1973:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
1974:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 97


1975:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1976:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Error interrupts management *********************************************/
1977:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   if ((interrupts & CAN_IT_ERROR) != 0U)
1978:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
1979:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     if ((msrflags & CAN_MSR_ERRI) != 0U)
1980:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
1981:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Check Error Warning Flag */
1982:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       if (((interrupts & CAN_IT_ERROR_WARNING) != 0U) &&
1983:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           ((esrflags & CAN_ESR_EWGF) != 0U))
1984:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       {
1985:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         /* Set CAN error code to Error Warning */
1986:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         errorcode |= HAL_CAN_ERROR_EWG;
1987:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1988:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         /* No need for clear of Error Warning Flag as read-only */
1989:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       }
1990:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1991:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Check Error Passive Flag */
1992:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       if (((interrupts & CAN_IT_ERROR_PASSIVE) != 0U) &&
1993:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           ((esrflags & CAN_ESR_EPVF) != 0U))
1994:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       {
1995:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         /* Set CAN error code to Error Passive */
1996:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         errorcode |= HAL_CAN_ERROR_EPV;
1997:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
1998:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         /* No need for clear of Error Passive Flag as read-only */
1999:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       }
2000:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
2001:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Check Bus-off Flag */
2002:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       if (((interrupts & CAN_IT_BUSOFF) != 0U) &&
2003:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           ((esrflags & CAN_ESR_BOFF) != 0U))
2004:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       {
2005:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         /* Set CAN error code to Bus-Off */
2006:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         errorcode |= HAL_CAN_ERROR_BOF;
2007:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
2008:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         /* No need for clear of Error Bus-Off as read-only */
2009:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       }
2010:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
2011:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Check Last Error Code Flag */
2012:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       if (((interrupts & CAN_IT_LAST_ERROR_CODE) != 0U) &&
2013:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           ((esrflags & CAN_ESR_LEC) != 0U))
2014:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       {
2015:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         switch (esrflags & CAN_ESR_LEC)
2016:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         {
2017:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           case (CAN_ESR_LEC_0):
2018:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             /* Set CAN error code to Stuff error */
2019:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             errorcode |= HAL_CAN_ERROR_STF;
2020:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             break;
2021:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           case (CAN_ESR_LEC_1):
2022:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             /* Set CAN error code to Form error */
2023:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             errorcode |= HAL_CAN_ERROR_FOR;
2024:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             break;
2025:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           case (CAN_ESR_LEC_1 | CAN_ESR_LEC_0):
2026:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             /* Set CAN error code to Acknowledgement error */
2027:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             errorcode |= HAL_CAN_ERROR_ACK;
2028:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             break;
2029:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           case (CAN_ESR_LEC_2):
2030:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             /* Set CAN error code to Bit recessive error */
2031:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             errorcode |= HAL_CAN_ERROR_BR;
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 98


2032:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             break;
2033:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           case (CAN_ESR_LEC_2 | CAN_ESR_LEC_0):
2034:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             /* Set CAN error code to Bit Dominant error */
2035:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             errorcode |= HAL_CAN_ERROR_BD;
2036:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             break;
2037:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           case (CAN_ESR_LEC_2 | CAN_ESR_LEC_1):
2038:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             /* Set CAN error code to CRC error */
2039:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             errorcode |= HAL_CAN_ERROR_CRC;
2040:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             break;
2041:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           default:
2042:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             break;
2043:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         }
2044:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
2045:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         /* Clear Last error code Flag */
2046:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         CLEAR_BIT(hcan->Instance->ESR, CAN_ESR_LEC);
2047:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       }
2048:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
2049:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
2050:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Clear ERRI Flag */
2051:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_ERRI);
2052:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
2053:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
2054:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Call the Error call Back in case of Errors */
2055:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   if (errorcode != HAL_CAN_ERROR_NONE)
2056:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
2057:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Update error code in handle */
2058:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     hcan->ErrorCode |= errorcode;
2059:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
2060:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Call Error callback function */
2061:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
2062:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Call registered callback*/
2063:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     hcan->ErrorCallback(hcan);
2064:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #else
2065:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Call weak (surcharged) callback */
2066:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     HAL_CAN_ErrorCallback(hcan);
2067:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
2068:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
2069:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** }
2070:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
2071:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /**
2072:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @}
2073:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
2074:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
2075:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /** @defgroup CAN_Exported_Functions_Group5 Callback functions
2076:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @brief   CAN Callback functions
2077:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *
2078:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** @verbatim
2079:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   ==============================================================================
2080:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****                           ##### Callback functions #####
2081:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   ==============================================================================
2082:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     [..]
2083:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     This subsection provides the following callback functions:
2084:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (+) HAL_CAN_TxMailbox0CompleteCallback
2085:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (+) HAL_CAN_TxMailbox1CompleteCallback
2086:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (+) HAL_CAN_TxMailbox2CompleteCallback
2087:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (+) HAL_CAN_TxMailbox0AbortCallback
2088:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (+) HAL_CAN_TxMailbox1AbortCallback
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 99


2089:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (+) HAL_CAN_TxMailbox2AbortCallback
2090:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (+) HAL_CAN_RxFifo0MsgPendingCallback
2091:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (+) HAL_CAN_RxFifo0FullCallback
2092:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (+) HAL_CAN_RxFifo1MsgPendingCallback
2093:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (+) HAL_CAN_RxFifo1FullCallback
2094:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (+) HAL_CAN_SleepCallback
2095:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (+) HAL_CAN_WakeUpFromRxMsgCallback
2096:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (+) HAL_CAN_ErrorCallback
2097:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
2098:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** @endverbatim
2099:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @{
2100:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
2101:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
2102:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /**
2103:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @brief  Transmission Mailbox 0 complete callback.
2104:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2105:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2106:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @retval None
2107:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
2108:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** __weak void HAL_CAN_TxMailbox0CompleteCallback(CAN_HandleTypeDef *hcan)
2109:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** {
 2110              		.loc 1 2109 1 is_stmt 1 view -0
 2111              		.cfi_startproc
 2112              		@ args = 0, pretend = 0, frame = 0
 2113              		@ frame_needed = 0, uses_anonymous_args = 0
 2114              		@ link register save eliminated.
2110:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2111:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   UNUSED(hcan);
 2115              		.loc 1 2111 3 view .LVU712
2112:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
2113:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2114:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             the HAL_CAN_TxMailbox0CompleteCallback could be implemented in the
2115:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             user file
2116:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****    */
2117:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** }
 2116              		.loc 1 2117 1 is_stmt 0 view .LVU713
 2117 0000 7047     		bx	lr
 2118              		.cfi_endproc
 2119              	.LFE308:
 2121              		.section	.text.HAL_CAN_TxMailbox1CompleteCallback,"ax",%progbits
 2122              		.align	1
 2123              		.weak	HAL_CAN_TxMailbox1CompleteCallback
 2124              		.syntax unified
 2125              		.thumb
 2126              		.thumb_func
 2128              	HAL_CAN_TxMailbox1CompleteCallback:
 2129              	.LVL174:
 2130              	.LFB309:
2118:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
2119:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /**
2120:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @brief  Transmission Mailbox 1 complete callback.
2121:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2122:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2123:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @retval None
2124:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
2125:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** __weak void HAL_CAN_TxMailbox1CompleteCallback(CAN_HandleTypeDef *hcan)
2126:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** {
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 100


 2131              		.loc 1 2126 1 is_stmt 1 view -0
 2132              		.cfi_startproc
 2133              		@ args = 0, pretend = 0, frame = 0
 2134              		@ frame_needed = 0, uses_anonymous_args = 0
 2135              		@ link register save eliminated.
2127:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2128:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   UNUSED(hcan);
 2136              		.loc 1 2128 3 view .LVU715
2129:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
2130:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2131:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             the HAL_CAN_TxMailbox1CompleteCallback could be implemented in the
2132:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             user file
2133:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****    */
2134:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** }
 2137              		.loc 1 2134 1 is_stmt 0 view .LVU716
 2138 0000 7047     		bx	lr
 2139              		.cfi_endproc
 2140              	.LFE309:
 2142              		.section	.text.HAL_CAN_TxMailbox2CompleteCallback,"ax",%progbits
 2143              		.align	1
 2144              		.weak	HAL_CAN_TxMailbox2CompleteCallback
 2145              		.syntax unified
 2146              		.thumb
 2147              		.thumb_func
 2149              	HAL_CAN_TxMailbox2CompleteCallback:
 2150              	.LVL175:
 2151              	.LFB310:
2135:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
2136:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /**
2137:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @brief  Transmission Mailbox 2 complete callback.
2138:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2139:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2140:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @retval None
2141:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
2142:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** __weak void HAL_CAN_TxMailbox2CompleteCallback(CAN_HandleTypeDef *hcan)
2143:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** {
 2152              		.loc 1 2143 1 is_stmt 1 view -0
 2153              		.cfi_startproc
 2154              		@ args = 0, pretend = 0, frame = 0
 2155              		@ frame_needed = 0, uses_anonymous_args = 0
 2156              		@ link register save eliminated.
2144:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2145:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   UNUSED(hcan);
 2157              		.loc 1 2145 3 view .LVU718
2146:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
2147:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2148:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             the HAL_CAN_TxMailbox2CompleteCallback could be implemented in the
2149:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             user file
2150:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****    */
2151:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** }
 2158              		.loc 1 2151 1 is_stmt 0 view .LVU719
 2159 0000 7047     		bx	lr
 2160              		.cfi_endproc
 2161              	.LFE310:
 2163              		.section	.text.HAL_CAN_TxMailbox0AbortCallback,"ax",%progbits
 2164              		.align	1
 2165              		.weak	HAL_CAN_TxMailbox0AbortCallback
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 101


 2166              		.syntax unified
 2167              		.thumb
 2168              		.thumb_func
 2170              	HAL_CAN_TxMailbox0AbortCallback:
 2171              	.LVL176:
 2172              	.LFB311:
2152:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
2153:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /**
2154:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @brief  Transmission Mailbox 0 Cancellation callback.
2155:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
2156:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2157:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @retval None
2158:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
2159:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** __weak void HAL_CAN_TxMailbox0AbortCallback(CAN_HandleTypeDef *hcan)
2160:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** {
 2173              		.loc 1 2160 1 is_stmt 1 view -0
 2174              		.cfi_startproc
 2175              		@ args = 0, pretend = 0, frame = 0
 2176              		@ frame_needed = 0, uses_anonymous_args = 0
 2177              		@ link register save eliminated.
2161:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2162:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   UNUSED(hcan);
 2178              		.loc 1 2162 3 view .LVU721
2163:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
2164:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2165:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             the HAL_CAN_TxMailbox0AbortCallback could be implemented in the
2166:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             user file
2167:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****    */
2168:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** }
 2179              		.loc 1 2168 1 is_stmt 0 view .LVU722
 2180 0000 7047     		bx	lr
 2181              		.cfi_endproc
 2182              	.LFE311:
 2184              		.section	.text.HAL_CAN_TxMailbox1AbortCallback,"ax",%progbits
 2185              		.align	1
 2186              		.weak	HAL_CAN_TxMailbox1AbortCallback
 2187              		.syntax unified
 2188              		.thumb
 2189              		.thumb_func
 2191              	HAL_CAN_TxMailbox1AbortCallback:
 2192              	.LVL177:
 2193              	.LFB312:
2169:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
2170:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /**
2171:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @brief  Transmission Mailbox 1 Cancellation callback.
2172:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
2173:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2174:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @retval None
2175:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
2176:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** __weak void HAL_CAN_TxMailbox1AbortCallback(CAN_HandleTypeDef *hcan)
2177:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** {
 2194              		.loc 1 2177 1 is_stmt 1 view -0
 2195              		.cfi_startproc
 2196              		@ args = 0, pretend = 0, frame = 0
 2197              		@ frame_needed = 0, uses_anonymous_args = 0
 2198              		@ link register save eliminated.
2178:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 102


2179:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   UNUSED(hcan);
 2199              		.loc 1 2179 3 view .LVU724
2180:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
2181:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2182:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             the HAL_CAN_TxMailbox1AbortCallback could be implemented in the
2183:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             user file
2184:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****    */
2185:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** }
 2200              		.loc 1 2185 1 is_stmt 0 view .LVU725
 2201 0000 7047     		bx	lr
 2202              		.cfi_endproc
 2203              	.LFE312:
 2205              		.section	.text.HAL_CAN_TxMailbox2AbortCallback,"ax",%progbits
 2206              		.align	1
 2207              		.weak	HAL_CAN_TxMailbox2AbortCallback
 2208              		.syntax unified
 2209              		.thumb
 2210              		.thumb_func
 2212              	HAL_CAN_TxMailbox2AbortCallback:
 2213              	.LVL178:
 2214              	.LFB313:
2186:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
2187:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /**
2188:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @brief  Transmission Mailbox 2 Cancellation callback.
2189:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
2190:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2191:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @retval None
2192:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
2193:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** __weak void HAL_CAN_TxMailbox2AbortCallback(CAN_HandleTypeDef *hcan)
2194:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** {
 2215              		.loc 1 2194 1 is_stmt 1 view -0
 2216              		.cfi_startproc
 2217              		@ args = 0, pretend = 0, frame = 0
 2218              		@ frame_needed = 0, uses_anonymous_args = 0
 2219              		@ link register save eliminated.
2195:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2196:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   UNUSED(hcan);
 2220              		.loc 1 2196 3 view .LVU727
2197:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
2198:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2199:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             the HAL_CAN_TxMailbox2AbortCallback could be implemented in the
2200:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             user file
2201:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****    */
2202:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** }
 2221              		.loc 1 2202 1 is_stmt 0 view .LVU728
 2222 0000 7047     		bx	lr
 2223              		.cfi_endproc
 2224              	.LFE313:
 2226              		.section	.text.HAL_CAN_RxFifo0MsgPendingCallback,"ax",%progbits
 2227              		.align	1
 2228              		.weak	HAL_CAN_RxFifo0MsgPendingCallback
 2229              		.syntax unified
 2230              		.thumb
 2231              		.thumb_func
 2233              	HAL_CAN_RxFifo0MsgPendingCallback:
 2234              	.LVL179:
 2235              	.LFB314:
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 103


2203:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
2204:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /**
2205:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @brief  Rx FIFO 0 message pending callback.
2206:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2207:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2208:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @retval None
2209:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
2210:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** __weak void HAL_CAN_RxFifo0MsgPendingCallback(CAN_HandleTypeDef *hcan)
2211:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** {
 2236              		.loc 1 2211 1 is_stmt 1 view -0
 2237              		.cfi_startproc
 2238              		@ args = 0, pretend = 0, frame = 0
 2239              		@ frame_needed = 0, uses_anonymous_args = 0
 2240              		@ link register save eliminated.
2212:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2213:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   UNUSED(hcan);
 2241              		.loc 1 2213 3 view .LVU730
2214:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
2215:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             the HAL_CAN_RxFifo0MsgPendingCallback could be implemented in the
2217:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             user file
2218:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****    */
2219:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** }
 2242              		.loc 1 2219 1 is_stmt 0 view .LVU731
 2243 0000 7047     		bx	lr
 2244              		.cfi_endproc
 2245              	.LFE314:
 2247              		.section	.text.HAL_CAN_RxFifo0FullCallback,"ax",%progbits
 2248              		.align	1
 2249              		.weak	HAL_CAN_RxFifo0FullCallback
 2250              		.syntax unified
 2251              		.thumb
 2252              		.thumb_func
 2254              	HAL_CAN_RxFifo0FullCallback:
 2255              	.LVL180:
 2256              	.LFB315:
2220:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
2221:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /**
2222:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @brief  Rx FIFO 0 full callback.
2223:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2224:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2225:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @retval None
2226:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
2227:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** __weak void HAL_CAN_RxFifo0FullCallback(CAN_HandleTypeDef *hcan)
2228:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** {
 2257              		.loc 1 2228 1 is_stmt 1 view -0
 2258              		.cfi_startproc
 2259              		@ args = 0, pretend = 0, frame = 0
 2260              		@ frame_needed = 0, uses_anonymous_args = 0
 2261              		@ link register save eliminated.
2229:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2230:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   UNUSED(hcan);
 2262              		.loc 1 2230 3 view .LVU733
2231:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
2232:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2233:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             the HAL_CAN_RxFifo0FullCallback could be implemented in the user
2234:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             file
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 104


2235:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****    */
2236:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** }
 2263              		.loc 1 2236 1 is_stmt 0 view .LVU734
 2264 0000 7047     		bx	lr
 2265              		.cfi_endproc
 2266              	.LFE315:
 2268              		.section	.text.HAL_CAN_RxFifo1MsgPendingCallback,"ax",%progbits
 2269              		.align	1
 2270              		.weak	HAL_CAN_RxFifo1MsgPendingCallback
 2271              		.syntax unified
 2272              		.thumb
 2273              		.thumb_func
 2275              	HAL_CAN_RxFifo1MsgPendingCallback:
 2276              	.LVL181:
 2277              	.LFB316:
2237:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
2238:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /**
2239:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @brief  Rx FIFO 1 message pending callback.
2240:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2241:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2242:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @retval None
2243:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
2244:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** __weak void HAL_CAN_RxFifo1MsgPendingCallback(CAN_HandleTypeDef *hcan)
2245:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** {
 2278              		.loc 1 2245 1 is_stmt 1 view -0
 2279              		.cfi_startproc
 2280              		@ args = 0, pretend = 0, frame = 0
 2281              		@ frame_needed = 0, uses_anonymous_args = 0
 2282              		@ link register save eliminated.
2246:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2247:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   UNUSED(hcan);
 2283              		.loc 1 2247 3 view .LVU736
2248:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
2249:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2250:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             the HAL_CAN_RxFifo1MsgPendingCallback could be implemented in the
2251:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             user file
2252:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****    */
2253:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** }
 2284              		.loc 1 2253 1 is_stmt 0 view .LVU737
 2285 0000 7047     		bx	lr
 2286              		.cfi_endproc
 2287              	.LFE316:
 2289              		.section	.text.HAL_CAN_RxFifo1FullCallback,"ax",%progbits
 2290              		.align	1
 2291              		.weak	HAL_CAN_RxFifo1FullCallback
 2292              		.syntax unified
 2293              		.thumb
 2294              		.thumb_func
 2296              	HAL_CAN_RxFifo1FullCallback:
 2297              	.LVL182:
 2298              	.LFB317:
2254:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
2255:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /**
2256:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @brief  Rx FIFO 1 full callback.
2257:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2258:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2259:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @retval None
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 105


2260:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
2261:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** __weak void HAL_CAN_RxFifo1FullCallback(CAN_HandleTypeDef *hcan)
2262:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** {
 2299              		.loc 1 2262 1 is_stmt 1 view -0
 2300              		.cfi_startproc
 2301              		@ args = 0, pretend = 0, frame = 0
 2302              		@ frame_needed = 0, uses_anonymous_args = 0
 2303              		@ link register save eliminated.
2263:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2264:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   UNUSED(hcan);
 2304              		.loc 1 2264 3 view .LVU739
2265:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
2266:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2267:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             the HAL_CAN_RxFifo1FullCallback could be implemented in the user
2268:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             file
2269:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****    */
2270:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** }
 2305              		.loc 1 2270 1 is_stmt 0 view .LVU740
 2306 0000 7047     		bx	lr
 2307              		.cfi_endproc
 2308              	.LFE317:
 2310              		.section	.text.HAL_CAN_SleepCallback,"ax",%progbits
 2311              		.align	1
 2312              		.weak	HAL_CAN_SleepCallback
 2313              		.syntax unified
 2314              		.thumb
 2315              		.thumb_func
 2317              	HAL_CAN_SleepCallback:
 2318              	.LVL183:
 2319              	.LFB318:
2271:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
2272:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /**
2273:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @brief  Sleep callback.
2274:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2275:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2276:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @retval None
2277:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
2278:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** __weak void HAL_CAN_SleepCallback(CAN_HandleTypeDef *hcan)
2279:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** {
 2320              		.loc 1 2279 1 is_stmt 1 view -0
 2321              		.cfi_startproc
 2322              		@ args = 0, pretend = 0, frame = 0
 2323              		@ frame_needed = 0, uses_anonymous_args = 0
 2324              		@ link register save eliminated.
2280:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2281:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   UNUSED(hcan);
 2325              		.loc 1 2281 3 view .LVU742
2282:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
2283:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2284:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             the HAL_CAN_SleepCallback could be implemented in the user file
2285:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****    */
2286:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** }
 2326              		.loc 1 2286 1 is_stmt 0 view .LVU743
 2327 0000 7047     		bx	lr
 2328              		.cfi_endproc
 2329              	.LFE318:
 2331              		.section	.text.HAL_CAN_WakeUpFromRxMsgCallback,"ax",%progbits
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 106


 2332              		.align	1
 2333              		.weak	HAL_CAN_WakeUpFromRxMsgCallback
 2334              		.syntax unified
 2335              		.thumb
 2336              		.thumb_func
 2338              	HAL_CAN_WakeUpFromRxMsgCallback:
 2339              	.LVL184:
 2340              	.LFB319:
2287:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
2288:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /**
2289:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @brief  WakeUp from Rx message callback.
2290:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2291:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2292:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @retval None
2293:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
2294:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** __weak void HAL_CAN_WakeUpFromRxMsgCallback(CAN_HandleTypeDef *hcan)
2295:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** {
 2341              		.loc 1 2295 1 is_stmt 1 view -0
 2342              		.cfi_startproc
 2343              		@ args = 0, pretend = 0, frame = 0
 2344              		@ frame_needed = 0, uses_anonymous_args = 0
 2345              		@ link register save eliminated.
2296:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2297:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   UNUSED(hcan);
 2346              		.loc 1 2297 3 view .LVU745
2298:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
2299:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2300:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             the HAL_CAN_WakeUpFromRxMsgCallback could be implemented in the
2301:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             user file
2302:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****    */
2303:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** }
 2347              		.loc 1 2303 1 is_stmt 0 view .LVU746
 2348 0000 7047     		bx	lr
 2349              		.cfi_endproc
 2350              	.LFE319:
 2352              		.section	.text.HAL_CAN_ErrorCallback,"ax",%progbits
 2353              		.align	1
 2354              		.weak	HAL_CAN_ErrorCallback
 2355              		.syntax unified
 2356              		.thumb
 2357              		.thumb_func
 2359              	HAL_CAN_ErrorCallback:
 2360              	.LVL185:
 2361              	.LFB320:
2304:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
2305:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /**
2306:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @brief  Error CAN callback.
2307:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2308:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2309:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @retval None
2310:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
2311:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** __weak void HAL_CAN_ErrorCallback(CAN_HandleTypeDef *hcan)
2312:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** {
 2362              		.loc 1 2312 1 is_stmt 1 view -0
 2363              		.cfi_startproc
 2364              		@ args = 0, pretend = 0, frame = 0
 2365              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 107


 2366              		@ link register save eliminated.
2313:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2314:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   UNUSED(hcan);
 2367              		.loc 1 2314 3 view .LVU748
2315:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
2316:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2317:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             the HAL_CAN_ErrorCallback could be implemented in the user file
2318:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****    */
2319:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** }
 2368              		.loc 1 2319 1 is_stmt 0 view .LVU749
 2369 0000 7047     		bx	lr
 2370              		.cfi_endproc
 2371              	.LFE320:
 2373              		.section	.text.HAL_CAN_IRQHandler,"ax",%progbits
 2374              		.align	1
 2375              		.global	HAL_CAN_IRQHandler
 2376              		.syntax unified
 2377              		.thumb
 2378              		.thumb_func
 2380              	HAL_CAN_IRQHandler:
 2381              	.LVL186:
 2382              	.LFB307:
1698:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   uint32_t errorcode = HAL_CAN_ERROR_NONE;
 2383              		.loc 1 1698 1 is_stmt 1 view -0
 2384              		.cfi_startproc
 2385              		@ args = 0, pretend = 0, frame = 0
 2386              		@ frame_needed = 0, uses_anonymous_args = 0
1698:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   uint32_t errorcode = HAL_CAN_ERROR_NONE;
 2387              		.loc 1 1698 1 is_stmt 0 view .LVU751
 2388 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2389              		.cfi_def_cfa_offset 40
 2390              		.cfi_offset 3, -40
 2391              		.cfi_offset 4, -36
 2392              		.cfi_offset 5, -32
 2393              		.cfi_offset 6, -28
 2394              		.cfi_offset 7, -24
 2395              		.cfi_offset 8, -20
 2396              		.cfi_offset 9, -16
 2397              		.cfi_offset 10, -12
 2398              		.cfi_offset 11, -8
 2399              		.cfi_offset 14, -4
 2400 0004 0546     		mov	r5, r0
1699:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   uint32_t interrupts = READ_REG(hcan->Instance->IER);
 2401              		.loc 1 1699 3 is_stmt 1 view .LVU752
 2402              	.LVL187:
1700:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   uint32_t msrflags = READ_REG(hcan->Instance->MSR);
 2403              		.loc 1 1700 3 view .LVU753
1700:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   uint32_t msrflags = READ_REG(hcan->Instance->MSR);
 2404              		.loc 1 1700 25 is_stmt 0 view .LVU754
 2405 0006 0368     		ldr	r3, [r0]
1700:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   uint32_t msrflags = READ_REG(hcan->Instance->MSR);
 2406              		.loc 1 1700 12 view .LVU755
 2407 0008 5C69     		ldr	r4, [r3, #20]
 2408              	.LVL188:
1701:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   uint32_t tsrflags = READ_REG(hcan->Instance->TSR);
 2409              		.loc 1 1701 3 is_stmt 1 view .LVU756
1701:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   uint32_t tsrflags = READ_REG(hcan->Instance->TSR);
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 108


 2410              		.loc 1 1701 12 is_stmt 0 view .LVU757
 2411 000a D3F80480 		ldr	r8, [r3, #4]
 2412              	.LVL189:
1702:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   uint32_t rf0rflags = READ_REG(hcan->Instance->RF0R);
 2413              		.loc 1 1702 3 is_stmt 1 view .LVU758
1702:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   uint32_t rf0rflags = READ_REG(hcan->Instance->RF0R);
 2414              		.loc 1 1702 12 is_stmt 0 view .LVU759
 2415 000e 9F68     		ldr	r7, [r3, #8]
 2416              	.LVL190:
1703:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   uint32_t rf1rflags = READ_REG(hcan->Instance->RF1R);
 2417              		.loc 1 1703 3 is_stmt 1 view .LVU760
1703:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   uint32_t rf1rflags = READ_REG(hcan->Instance->RF1R);
 2418              		.loc 1 1703 12 is_stmt 0 view .LVU761
 2419 0010 D3F80CA0 		ldr	r10, [r3, #12]
 2420              	.LVL191:
1704:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   uint32_t esrflags = READ_REG(hcan->Instance->ESR);
 2421              		.loc 1 1704 3 is_stmt 1 view .LVU762
1704:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   uint32_t esrflags = READ_REG(hcan->Instance->ESR);
 2422              		.loc 1 1704 12 is_stmt 0 view .LVU763
 2423 0014 D3F81090 		ldr	r9, [r3, #16]
 2424              	.LVL192:
1705:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 2425              		.loc 1 1705 3 is_stmt 1 view .LVU764
1705:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 2426              		.loc 1 1705 12 is_stmt 0 view .LVU765
 2427 0018 D3F818B0 		ldr	fp, [r3, #24]
 2428              	.LVL193:
1708:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 2429              		.loc 1 1708 3 is_stmt 1 view .LVU766
1708:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 2430              		.loc 1 1708 6 is_stmt 0 view .LVU767
 2431 001c 14F00106 		ands	r6, r4, #1
 2432 0020 3BD0     		beq	.L171
1711:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 2433              		.loc 1 1711 5 is_stmt 1 view .LVU768
1711:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 2434              		.loc 1 1711 8 is_stmt 0 view .LVU769
 2435 0022 17F00106 		ands	r6, r7, #1
 2436 0026 16D0     		beq	.L172
1714:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 2437              		.loc 1 1714 7 is_stmt 1 view .LVU770
 2438 0028 0122     		movs	r2, #1
 2439 002a 9A60     		str	r2, [r3, #8]
1716:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       {
 2440              		.loc 1 1716 7 view .LVU771
1716:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       {
 2441              		.loc 1 1716 10 is_stmt 0 view .LVU772
 2442 002c 17F0020F 		tst	r7, #2
 2443 0030 08D1     		bne	.L206
1729:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         {
 2444              		.loc 1 1729 9 is_stmt 1 view .LVU773
1729:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         {
 2445              		.loc 1 1729 12 is_stmt 0 view .LVU774
 2446 0032 17F0040F 		tst	r7, #4
 2447 0036 0CD1     		bne	.L203
1734:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         {
 2448              		.loc 1 1734 14 is_stmt 1 view .LVU775
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 109


1734:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         {
 2449              		.loc 1 1734 17 is_stmt 0 view .LVU776
 2450 0038 17F00806 		ands	r6, r7, #8
 2451 003c 06D0     		beq	.L207
1737:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         }
 2452              		.loc 1 1737 21 view .LVU777
 2453 003e 4FF48056 		mov	r6, #4096
 2454 0042 08E0     		b	.L172
 2455              	.L206:
1724:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 2456              		.loc 1 1724 9 is_stmt 1 view .LVU778
 2457 0044 FFF7FEFF 		bl	HAL_CAN_TxMailbox0CompleteCallback
 2458              	.LVL194:
1699:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   uint32_t interrupts = READ_REG(hcan->Instance->IER);
 2459              		.loc 1 1699 12 is_stmt 0 view .LVU779
 2460 0048 0026     		movs	r6, #0
 2461 004a 04E0     		b	.L172
 2462              	.LVL195:
 2463              	.L207:
1747:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 2464              		.loc 1 1747 11 is_stmt 1 view .LVU780
 2465 004c FFF7FEFF 		bl	HAL_CAN_TxMailbox0AbortCallback
 2466              	.LVL196:
1747:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 2467              		.loc 1 1747 11 is_stmt 0 view .LVU781
 2468 0050 01E0     		b	.L172
 2469              	.LVL197:
 2470              	.L203:
1732:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         }
 2471              		.loc 1 1732 21 view .LVU782
 2472 0052 4FF40066 		mov	r6, #2048
 2473              	.LVL198:
 2474              	.L172:
1754:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 2475              		.loc 1 1754 5 is_stmt 1 view .LVU783
1754:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 2476              		.loc 1 1754 8 is_stmt 0 view .LVU784
 2477 0056 17F4807F 		tst	r7, #256
 2478 005a 0DD0     		beq	.L174
1757:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 2479              		.loc 1 1757 7 is_stmt 1 view .LVU785
 2480 005c 2B68     		ldr	r3, [r5]
 2481 005e 4FF48072 		mov	r2, #256
 2482 0062 9A60     		str	r2, [r3, #8]
1759:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       {
 2483              		.loc 1 1759 7 view .LVU786
1759:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       {
 2484              		.loc 1 1759 10 is_stmt 0 view .LVU787
 2485 0064 17F4007F 		tst	r7, #512
 2486 0068 40F09680 		bne	.L208
1772:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         {
 2487              		.loc 1 1772 9 is_stmt 1 view .LVU788
1772:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         {
 2488              		.loc 1 1772 12 is_stmt 0 view .LVU789
 2489 006c 17F4806F 		tst	r7, #1024
 2490 0070 00F09680 		beq	.L176
1775:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         }
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 110


 2491              		.loc 1 1775 11 is_stmt 1 view .LVU790
1775:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         }
 2492              		.loc 1 1775 21 is_stmt 0 view .LVU791
 2493 0074 46F40056 		orr	r6, r6, #8192
 2494              	.LVL199:
 2495              	.L174:
1797:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 2496              		.loc 1 1797 5 is_stmt 1 view .LVU792
1797:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 2497              		.loc 1 1797 8 is_stmt 0 view .LVU793
 2498 0078 17F4803F 		tst	r7, #65536
 2499 007c 0DD0     		beq	.L171
1800:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 2500              		.loc 1 1800 7 is_stmt 1 view .LVU794
 2501 007e 2B68     		ldr	r3, [r5]
 2502 0080 4FF48032 		mov	r2, #65536
 2503 0084 9A60     		str	r2, [r3, #8]
1802:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       {
 2504              		.loc 1 1802 7 view .LVU795
1802:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       {
 2505              		.loc 1 1802 10 is_stmt 0 view .LVU796
 2506 0086 17F4003F 		tst	r7, #131072
 2507 008a 40F09380 		bne	.L209
1815:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         {
 2508              		.loc 1 1815 9 is_stmt 1 view .LVU797
1815:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         {
 2509              		.loc 1 1815 12 is_stmt 0 view .LVU798
 2510 008e 17F4802F 		tst	r7, #262144
 2511 0092 00F09380 		beq	.L179
1818:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         }
 2512              		.loc 1 1818 11 is_stmt 1 view .LVU799
1818:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         }
 2513              		.loc 1 1818 21 is_stmt 0 view .LVU800
 2514 0096 46F40046 		orr	r6, r6, #32768
 2515              	.LVL200:
 2516              	.L171:
1841:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 2517              		.loc 1 1841 3 is_stmt 1 view .LVU801
1841:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 2518              		.loc 1 1841 6 is_stmt 0 view .LVU802
 2519 009a 14F0080F 		tst	r4, #8
 2520 009e 07D0     		beq	.L181
1843:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 2521              		.loc 1 1843 5 is_stmt 1 view .LVU803
1843:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 2522              		.loc 1 1843 8 is_stmt 0 view .LVU804
 2523 00a0 1AF0100F 		tst	r10, #16
 2524 00a4 04D0     		beq	.L181
1846:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 2525              		.loc 1 1846 7 is_stmt 1 view .LVU805
1846:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 2526              		.loc 1 1846 17 is_stmt 0 view .LVU806
 2527 00a6 46F40076 		orr	r6, r6, #512
 2528              	.LVL201:
1849:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 2529              		.loc 1 1849 7 is_stmt 1 view .LVU807
 2530 00aa 2B68     		ldr	r3, [r5]
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 111


 2531 00ac 1022     		movs	r2, #16
 2532 00ae DA60     		str	r2, [r3, #12]
 2533              	.L181:
1854:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 2534              		.loc 1 1854 3 view .LVU808
1854:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 2535              		.loc 1 1854 6 is_stmt 0 view .LVU809
 2536 00b0 14F0040F 		tst	r4, #4
 2537 00b4 03D0     		beq	.L182
1856:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 2538              		.loc 1 1856 5 is_stmt 1 view .LVU810
1856:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 2539              		.loc 1 1856 8 is_stmt 0 view .LVU811
 2540 00b6 1AF0080F 		tst	r10, #8
 2541 00ba 40F08980 		bne	.L210
 2542              	.L182:
1873:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 2543              		.loc 1 1873 3 is_stmt 1 view .LVU812
1873:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 2544              		.loc 1 1873 6 is_stmt 0 view .LVU813
 2545 00be 14F0020F 		tst	r4, #2
 2546 00c2 05D0     		beq	.L183
1876:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 2547              		.loc 1 1876 5 is_stmt 1 view .LVU814
1876:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 2548              		.loc 1 1876 14 is_stmt 0 view .LVU815
 2549 00c4 2B68     		ldr	r3, [r5]
1876:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 2550              		.loc 1 1876 24 view .LVU816
 2551 00c6 DB68     		ldr	r3, [r3, #12]
1876:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 2552              		.loc 1 1876 8 view .LVU817
 2553 00c8 13F0030F 		tst	r3, #3
 2554 00cc 40F08780 		bne	.L211
 2555              	.L183:
1890:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 2556              		.loc 1 1890 3 is_stmt 1 view .LVU818
1890:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 2557              		.loc 1 1890 6 is_stmt 0 view .LVU819
 2558 00d0 14F0400F 		tst	r4, #64
 2559 00d4 07D0     		beq	.L184
1892:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 2560              		.loc 1 1892 5 is_stmt 1 view .LVU820
1892:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 2561              		.loc 1 1892 8 is_stmt 0 view .LVU821
 2562 00d6 19F0100F 		tst	r9, #16
 2563 00da 04D0     		beq	.L184
1895:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 2564              		.loc 1 1895 7 is_stmt 1 view .LVU822
1895:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 2565              		.loc 1 1895 17 is_stmt 0 view .LVU823
 2566 00dc 46F48066 		orr	r6, r6, #1024
 2567              	.LVL202:
1898:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 2568              		.loc 1 1898 7 is_stmt 1 view .LVU824
 2569 00e0 2B68     		ldr	r3, [r5]
 2570 00e2 1022     		movs	r2, #16
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 112


 2571 00e4 1A61     		str	r2, [r3, #16]
 2572              	.L184:
1903:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 2573              		.loc 1 1903 3 view .LVU825
1903:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 2574              		.loc 1 1903 6 is_stmt 0 view .LVU826
 2575 00e6 14F0200F 		tst	r4, #32
 2576 00ea 02D0     		beq	.L185
1905:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 2577              		.loc 1 1905 5 is_stmt 1 view .LVU827
1905:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 2578              		.loc 1 1905 8 is_stmt 0 view .LVU828
 2579 00ec 19F0080F 		tst	r9, #8
 2580 00f0 79D1     		bne	.L212
 2581              	.L185:
1922:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 2582              		.loc 1 1922 3 is_stmt 1 view .LVU829
1922:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 2583              		.loc 1 1922 6 is_stmt 0 view .LVU830
 2584 00f2 14F0100F 		tst	r4, #16
 2585 00f6 04D0     		beq	.L186
1925:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 2586              		.loc 1 1925 5 is_stmt 1 view .LVU831
1925:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 2587              		.loc 1 1925 14 is_stmt 0 view .LVU832
 2588 00f8 2B68     		ldr	r3, [r5]
1925:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 2589              		.loc 1 1925 24 view .LVU833
 2590 00fa 1B69     		ldr	r3, [r3, #16]
1925:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 2591              		.loc 1 1925 8 view .LVU834
 2592 00fc 13F0030F 		tst	r3, #3
 2593 0100 78D1     		bne	.L213
 2594              	.L186:
1939:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 2595              		.loc 1 1939 3 is_stmt 1 view .LVU835
1939:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 2596              		.loc 1 1939 6 is_stmt 0 view .LVU836
 2597 0102 14F4003F 		tst	r4, #131072
 2598 0106 02D0     		beq	.L187
1941:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 2599              		.loc 1 1941 5 is_stmt 1 view .LVU837
1941:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 2600              		.loc 1 1941 8 is_stmt 0 view .LVU838
 2601 0108 18F0100F 		tst	r8, #16
 2602 010c 76D1     		bne	.L214
 2603              	.L187:
1958:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 2604              		.loc 1 1958 3 is_stmt 1 view .LVU839
1958:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 2605              		.loc 1 1958 6 is_stmt 0 view .LVU840
 2606 010e 14F4803F 		tst	r4, #65536
 2607 0112 02D0     		beq	.L188
1960:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 2608              		.loc 1 1960 5 is_stmt 1 view .LVU841
1960:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 2609              		.loc 1 1960 8 is_stmt 0 view .LVU842
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 113


 2610 0114 18F0080F 		tst	r8, #8
 2611 0118 77D1     		bne	.L215
 2612              	.L188:
1977:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 2613              		.loc 1 1977 3 is_stmt 1 view .LVU843
1977:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 2614              		.loc 1 1977 6 is_stmt 0 view .LVU844
 2615 011a 14F4004F 		tst	r4, #32768
 2616 011e 37D0     		beq	.L189
1979:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 2617              		.loc 1 1979 5 is_stmt 1 view .LVU845
1979:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 2618              		.loc 1 1979 8 is_stmt 0 view .LVU846
 2619 0120 18F0040F 		tst	r8, #4
 2620 0124 31D0     		beq	.L190
1982:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           ((esrflags & CAN_ESR_EWGF) != 0U))
 2621              		.loc 1 1982 7 is_stmt 1 view .LVU847
1982:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           ((esrflags & CAN_ESR_EWGF) != 0U))
 2622              		.loc 1 1982 10 is_stmt 0 view .LVU848
 2623 0126 14F4807F 		tst	r4, #256
 2624 012a 04D0     		beq	.L191
1982:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           ((esrflags & CAN_ESR_EWGF) != 0U))
 2625              		.loc 1 1982 55 discriminator 1 view .LVU849
 2626 012c 1BF0010F 		tst	fp, #1
 2627 0130 01D0     		beq	.L191
1986:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 2628              		.loc 1 1986 9 is_stmt 1 view .LVU850
1986:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 2629              		.loc 1 1986 19 is_stmt 0 view .LVU851
 2630 0132 46F00106 		orr	r6, r6, #1
 2631              	.LVL203:
 2632              	.L191:
1992:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           ((esrflags & CAN_ESR_EPVF) != 0U))
 2633              		.loc 1 1992 7 is_stmt 1 view .LVU852
1992:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           ((esrflags & CAN_ESR_EPVF) != 0U))
 2634              		.loc 1 1992 10 is_stmt 0 view .LVU853
 2635 0136 14F4007F 		tst	r4, #512
 2636 013a 04D0     		beq	.L192
1992:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           ((esrflags & CAN_ESR_EPVF) != 0U))
 2637              		.loc 1 1992 55 discriminator 1 view .LVU854
 2638 013c 1BF0020F 		tst	fp, #2
 2639 0140 01D0     		beq	.L192
1996:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 2640              		.loc 1 1996 9 is_stmt 1 view .LVU855
1996:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 2641              		.loc 1 1996 19 is_stmt 0 view .LVU856
 2642 0142 46F00206 		orr	r6, r6, #2
 2643              	.LVL204:
 2644              	.L192:
2002:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           ((esrflags & CAN_ESR_BOFF) != 0U))
 2645              		.loc 1 2002 7 is_stmt 1 view .LVU857
2002:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           ((esrflags & CAN_ESR_BOFF) != 0U))
 2646              		.loc 1 2002 10 is_stmt 0 view .LVU858
 2647 0146 14F4806F 		tst	r4, #1024
 2648 014a 04D0     		beq	.L193
2002:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           ((esrflags & CAN_ESR_BOFF) != 0U))
 2649              		.loc 1 2002 48 discriminator 1 view .LVU859
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 114


 2650 014c 1BF0040F 		tst	fp, #4
 2651 0150 01D0     		beq	.L193
2006:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 2652              		.loc 1 2006 9 is_stmt 1 view .LVU860
2006:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 2653              		.loc 1 2006 19 is_stmt 0 view .LVU861
 2654 0152 46F00406 		orr	r6, r6, #4
 2655              	.LVL205:
 2656              	.L193:
2012:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           ((esrflags & CAN_ESR_LEC) != 0U))
 2657              		.loc 1 2012 7 is_stmt 1 view .LVU862
2012:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           ((esrflags & CAN_ESR_LEC) != 0U))
 2658              		.loc 1 2012 10 is_stmt 0 view .LVU863
 2659 0156 14F4006F 		tst	r4, #2048
 2660 015a 16D0     		beq	.L190
2012:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           ((esrflags & CAN_ESR_LEC) != 0U))
 2661              		.loc 1 2012 57 discriminator 1 view .LVU864
 2662 015c 1BF0700B 		ands	fp, fp, #112
 2663              	.LVL206:
2012:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           ((esrflags & CAN_ESR_LEC) != 0U))
 2664              		.loc 1 2012 57 discriminator 1 view .LVU865
 2665 0160 13D0     		beq	.L190
2015:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         {
 2666              		.loc 1 2015 9 is_stmt 1 view .LVU866
 2667 0162 BBF1400F 		cmp	fp, #64
 2668 0166 66D0     		beq	.L194
 2669 0168 56D8     		bhi	.L195
 2670 016a BBF1200F 		cmp	fp, #32
 2671 016e 5CD0     		beq	.L196
 2672 0170 BBF1300F 		cmp	fp, #48
 2673 0174 5CD0     		beq	.L197
 2674 0176 BBF1100F 		cmp	fp, #16
 2675 017a 01D1     		bne	.L199
2019:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             break;
 2676              		.loc 1 2019 13 view .LVU867
2019:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             break;
 2677              		.loc 1 2019 23 is_stmt 0 view .LVU868
 2678 017c 46F00806 		orr	r6, r6, #8
 2679              	.LVL207:
2020:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           case (CAN_ESR_LEC_1):
 2680              		.loc 1 2020 13 is_stmt 1 view .LVU869
 2681              	.L199:
2046:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       }
 2682              		.loc 1 2046 9 view .LVU870
 2683 0180 2A68     		ldr	r2, [r5]
 2684 0182 9369     		ldr	r3, [r2, #24]
 2685 0184 23F07003 		bic	r3, r3, #112
 2686 0188 9361     		str	r3, [r2, #24]
 2687              	.L190:
2051:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 2688              		.loc 1 2051 5 view .LVU871
 2689 018a 2B68     		ldr	r3, [r5]
 2690 018c 0422     		movs	r2, #4
 2691 018e 5A60     		str	r2, [r3, #4]
 2692              	.L189:
2055:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 2693              		.loc 1 2055 3 view .LVU872
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 115


2055:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
 2694              		.loc 1 2055 6 is_stmt 0 view .LVU873
 2695 0190 002E     		cmp	r6, #0
 2696 0192 56D1     		bne	.L216
 2697              	.L170:
2069:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 2698              		.loc 1 2069 1 view .LVU874
 2699 0194 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2700              	.LVL208:
 2701              	.L208:
1767:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 2702              		.loc 1 1767 9 is_stmt 1 view .LVU875
 2703 0198 2846     		mov	r0, r5
 2704 019a FFF7FEFF 		bl	HAL_CAN_TxMailbox1CompleteCallback
 2705              	.LVL209:
 2706 019e 6BE7     		b	.L174
 2707              	.L176:
1777:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         {
 2708              		.loc 1 1777 14 view .LVU876
1777:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         {
 2709              		.loc 1 1777 17 is_stmt 0 view .LVU877
 2710 01a0 17F4006F 		tst	r7, #2048
 2711 01a4 02D0     		beq	.L177
1780:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         }
 2712              		.loc 1 1780 11 is_stmt 1 view .LVU878
1780:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         }
 2713              		.loc 1 1780 21 is_stmt 0 view .LVU879
 2714 01a6 46F48046 		orr	r6, r6, #16384
 2715              	.LVL210:
1780:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         }
 2716              		.loc 1 1780 21 view .LVU880
 2717 01aa 65E7     		b	.L174
 2718              	.L177:
1790:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 2719              		.loc 1 1790 11 is_stmt 1 view .LVU881
 2720 01ac 2846     		mov	r0, r5
 2721 01ae FFF7FEFF 		bl	HAL_CAN_TxMailbox1AbortCallback
 2722              	.LVL211:
 2723 01b2 61E7     		b	.L174
 2724              	.L209:
1810:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 2725              		.loc 1 1810 9 view .LVU882
 2726 01b4 2846     		mov	r0, r5
 2727 01b6 FFF7FEFF 		bl	HAL_CAN_TxMailbox2CompleteCallback
 2728              	.LVL212:
 2729 01ba 6EE7     		b	.L171
 2730              	.L179:
1820:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         {
 2731              		.loc 1 1820 14 view .LVU883
1820:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         {
 2732              		.loc 1 1820 17 is_stmt 0 view .LVU884
 2733 01bc 17F4002F 		tst	r7, #524288
 2734 01c0 02D0     		beq	.L180
1823:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         }
 2735              		.loc 1 1823 11 is_stmt 1 view .LVU885
1823:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         }
 2736              		.loc 1 1823 21 is_stmt 0 view .LVU886
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 116


 2737 01c2 46F48036 		orr	r6, r6, #65536
 2738              	.LVL213:
1823:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         }
 2739              		.loc 1 1823 21 view .LVU887
 2740 01c6 68E7     		b	.L171
 2741              	.L180:
1833:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 2742              		.loc 1 1833 11 is_stmt 1 view .LVU888
 2743 01c8 2846     		mov	r0, r5
 2744 01ca FFF7FEFF 		bl	HAL_CAN_TxMailbox2AbortCallback
 2745              	.LVL214:
 2746 01ce 64E7     		b	.L171
 2747              	.L210:
1859:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 2748              		.loc 1 1859 7 view .LVU889
 2749 01d0 2B68     		ldr	r3, [r5]
 2750 01d2 0822     		movs	r2, #8
 2751 01d4 DA60     		str	r2, [r3, #12]
1867:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 2752              		.loc 1 1867 7 view .LVU890
 2753 01d6 2846     		mov	r0, r5
 2754 01d8 FFF7FEFF 		bl	HAL_CAN_RxFifo0FullCallback
 2755              	.LVL215:
 2756 01dc 6FE7     		b	.L182
 2757              	.L211:
1884:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 2758              		.loc 1 1884 7 view .LVU891
 2759 01de 2846     		mov	r0, r5
 2760 01e0 FFF7FEFF 		bl	HAL_CAN_RxFifo0MsgPendingCallback
 2761              	.LVL216:
 2762 01e4 74E7     		b	.L183
 2763              	.L212:
1908:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 2764              		.loc 1 1908 7 view .LVU892
 2765 01e6 2B68     		ldr	r3, [r5]
 2766 01e8 0822     		movs	r2, #8
 2767 01ea 1A61     		str	r2, [r3, #16]
1916:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 2768              		.loc 1 1916 7 view .LVU893
 2769 01ec 2846     		mov	r0, r5
 2770 01ee FFF7FEFF 		bl	HAL_CAN_RxFifo1FullCallback
 2771              	.LVL217:
 2772 01f2 7EE7     		b	.L185
 2773              	.L213:
1933:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 2774              		.loc 1 1933 7 view .LVU894
 2775 01f4 2846     		mov	r0, r5
 2776 01f6 FFF7FEFF 		bl	HAL_CAN_RxFifo1MsgPendingCallback
 2777              	.LVL218:
 2778 01fa 82E7     		b	.L186
 2779              	.L214:
1944:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 2780              		.loc 1 1944 7 view .LVU895
 2781 01fc 2B68     		ldr	r3, [r5]
 2782 01fe 1022     		movs	r2, #16
 2783 0200 5A60     		str	r2, [r3, #4]
1952:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 117


 2784              		.loc 1 1952 7 view .LVU896
 2785 0202 2846     		mov	r0, r5
 2786 0204 FFF7FEFF 		bl	HAL_CAN_SleepCallback
 2787              	.LVL219:
 2788 0208 81E7     		b	.L187
 2789              	.L215:
1963:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 2790              		.loc 1 1963 7 view .LVU897
 2791 020a 2B68     		ldr	r3, [r5]
 2792 020c 0822     		movs	r2, #8
 2793 020e 5A60     		str	r2, [r3, #4]
1971:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 2794              		.loc 1 1971 7 view .LVU898
 2795 0210 2846     		mov	r0, r5
 2796 0212 FFF7FEFF 		bl	HAL_CAN_WakeUpFromRxMsgCallback
 2797              	.LVL220:
 2798 0216 80E7     		b	.L188
 2799              	.LVL221:
 2800              	.L195:
2015:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****         {
 2801              		.loc 1 2015 9 is_stmt 0 view .LVU899
 2802 0218 BBF1500F 		cmp	fp, #80
 2803 021c 0ED0     		beq	.L200
 2804 021e BBF1600F 		cmp	fp, #96
 2805 0222 ADD1     		bne	.L199
2039:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             break;
 2806              		.loc 1 2039 13 is_stmt 1 view .LVU900
2039:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             break;
 2807              		.loc 1 2039 23 is_stmt 0 view .LVU901
 2808 0224 46F48076 		orr	r6, r6, #256
 2809              	.LVL222:
2040:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           default:
 2810              		.loc 1 2040 13 is_stmt 1 view .LVU902
 2811 0228 AAE7     		b	.L199
 2812              	.L196:
2023:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             break;
 2813              		.loc 1 2023 13 view .LVU903
2023:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             break;
 2814              		.loc 1 2023 23 is_stmt 0 view .LVU904
 2815 022a 46F01006 		orr	r6, r6, #16
 2816              	.LVL223:
2024:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           case (CAN_ESR_LEC_1 | CAN_ESR_LEC_0):
 2817              		.loc 1 2024 13 is_stmt 1 view .LVU905
 2818 022e A7E7     		b	.L199
 2819              	.L197:
2027:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             break;
 2820              		.loc 1 2027 13 view .LVU906
2027:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             break;
 2821              		.loc 1 2027 23 is_stmt 0 view .LVU907
 2822 0230 46F02006 		orr	r6, r6, #32
 2823              	.LVL224:
2028:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           case (CAN_ESR_LEC_2):
 2824              		.loc 1 2028 13 is_stmt 1 view .LVU908
 2825 0234 A4E7     		b	.L199
 2826              	.L194:
2031:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             break;
 2827              		.loc 1 2031 13 view .LVU909
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 118


2031:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             break;
 2828              		.loc 1 2031 23 is_stmt 0 view .LVU910
 2829 0236 46F04006 		orr	r6, r6, #64
 2830              	.LVL225:
2032:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           case (CAN_ESR_LEC_2 | CAN_ESR_LEC_0):
 2831              		.loc 1 2032 13 is_stmt 1 view .LVU911
 2832 023a A1E7     		b	.L199
 2833              	.L200:
2035:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             break;
 2834              		.loc 1 2035 13 view .LVU912
2035:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             break;
 2835              		.loc 1 2035 23 is_stmt 0 view .LVU913
 2836 023c 46F08006 		orr	r6, r6, #128
 2837              	.LVL226:
2036:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****           case (CAN_ESR_LEC_2 | CAN_ESR_LEC_1):
 2838              		.loc 1 2036 13 is_stmt 1 view .LVU914
 2839 0240 9EE7     		b	.L199
 2840              	.L216:
2058:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 2841              		.loc 1 2058 5 view .LVU915
2058:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 2842              		.loc 1 2058 9 is_stmt 0 view .LVU916
 2843 0242 6B6A     		ldr	r3, [r5, #36]
2058:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 2844              		.loc 1 2058 21 view .LVU917
 2845 0244 3343     		orrs	r3, r3, r6
 2846 0246 6B62     		str	r3, [r5, #36]
2066:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 2847              		.loc 1 2066 5 is_stmt 1 view .LVU918
 2848 0248 2846     		mov	r0, r5
 2849 024a FFF7FEFF 		bl	HAL_CAN_ErrorCallback
 2850              	.LVL227:
2069:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
 2851              		.loc 1 2069 1 is_stmt 0 view .LVU919
 2852 024e A1E7     		b	.L170
 2853              		.cfi_endproc
 2854              	.LFE307:
 2856              		.section	.text.HAL_CAN_GetState,"ax",%progbits
 2857              		.align	1
 2858              		.global	HAL_CAN_GetState
 2859              		.syntax unified
 2860              		.thumb
 2861              		.thumb_func
 2863              	HAL_CAN_GetState:
 2864              	.LVL228:
 2865              	.LFB321:
2320:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
2321:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /**
2322:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @}
2323:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
2324:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
2325:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /** @defgroup CAN_Exported_Functions_Group6 Peripheral State and Error functions
2326:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @brief   CAN Peripheral State functions
2327:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *
2328:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** @verbatim
2329:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   ==============================================================================
2330:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****             ##### Peripheral State and Error functions #####
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 119


2331:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   ==============================================================================
2332:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     [..]
2333:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     This subsection provides functions allowing to :
2334:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (+) HAL_CAN_GetState()  : Return the CAN state.
2335:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (+) HAL_CAN_GetError()  : Return the CAN error codes if any.
2336:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (+) HAL_CAN_ResetError(): Reset the CAN error codes if any.
2337:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
2338:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** @endverbatim
2339:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @{
2340:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
2341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
2342:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /**
2343:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @brief  Return the CAN state.
2344:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2345:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2346:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @retval HAL state
2347:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
2348:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** HAL_CAN_StateTypeDef HAL_CAN_GetState(const CAN_HandleTypeDef *hcan)
2349:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** {
 2866              		.loc 1 2349 1 is_stmt 1 view -0
 2867              		.cfi_startproc
 2868              		@ args = 0, pretend = 0, frame = 0
 2869              		@ frame_needed = 0, uses_anonymous_args = 0
 2870              		@ link register save eliminated.
 2871              		.loc 1 2349 1 is_stmt 0 view .LVU921
 2872 0000 0246     		mov	r2, r0
2350:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 2873              		.loc 1 2350 3 is_stmt 1 view .LVU922
 2874              		.loc 1 2350 24 is_stmt 0 view .LVU923
 2875 0002 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 2876 0006 D8B2     		uxtb	r0, r3
 2877              	.LVL229:
2351:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
2352:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 2878              		.loc 1 2352 3 is_stmt 1 view .LVU924
 2879              		.loc 1 2352 38 is_stmt 0 view .LVU925
 2880 0008 013B     		subs	r3, r3, #1
 2881 000a DBB2     		uxtb	r3, r3
 2882              		.loc 1 2352 6 view .LVU926
 2883 000c 012B     		cmp	r3, #1
 2884 000e 00D9     		bls	.L221
 2885              	.LVL230:
 2886              	.L218:
2353:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
2354:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
2355:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Check sleep mode acknowledge flag */
2356:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     if ((hcan->Instance->MSR & CAN_MSR_SLAK) != 0U)
2357:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
2358:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Sleep mode is active */
2359:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       state = HAL_CAN_STATE_SLEEP_ACTIVE;
2360:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
2361:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Check sleep mode request flag */
2362:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     else if ((hcan->Instance->MCR & CAN_MCR_SLEEP) != 0U)
2363:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
2364:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Sleep mode request is pending */
2365:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       state = HAL_CAN_STATE_SLEEP_PENDING;
2366:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 120


2367:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     else
2368:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
2369:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       /* Neither sleep mode request nor sleep mode acknowledge */
2370:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 2887              		.loc 1 2370 5 is_stmt 1 view .LVU927
2371:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
2372:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
2373:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Return CAN state */
2374:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   return state;
 2888              		.loc 1 2374 3 view .LVU928
2375:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** }
 2889              		.loc 1 2375 1 is_stmt 0 view .LVU929
 2890 0010 7047     		bx	lr
 2891              	.LVL231:
 2892              	.L221:
2356:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 2893              		.loc 1 2356 5 is_stmt 1 view .LVU930
2356:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 2894              		.loc 1 2356 14 is_stmt 0 view .LVU931
 2895 0012 1368     		ldr	r3, [r2]
2356:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 2896              		.loc 1 2356 24 view .LVU932
 2897 0014 5A68     		ldr	r2, [r3, #4]
 2898              	.LVL232:
2356:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 2899              		.loc 1 2356 8 view .LVU933
 2900 0016 12F0020F 		tst	r2, #2
 2901 001a 05D1     		bne	.L219
2362:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 2902              		.loc 1 2362 10 is_stmt 1 view .LVU934
2362:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 2903              		.loc 1 2362 29 is_stmt 0 view .LVU935
 2904 001c 1B68     		ldr	r3, [r3]
2362:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     {
 2905              		.loc 1 2362 13 view .LVU936
 2906 001e 13F0020F 		tst	r3, #2
 2907 0022 F5D0     		beq	.L218
2365:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 2908              		.loc 1 2365 13 view .LVU937
 2909 0024 0320     		movs	r0, #3
 2910              	.LVL233:
2365:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 2911              		.loc 1 2365 13 view .LVU938
 2912 0026 F3E7     		b	.L218
 2913              	.LVL234:
 2914              	.L219:
2359:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 2915              		.loc 1 2359 13 view .LVU939
 2916 0028 0420     		movs	r0, #4
 2917              	.LVL235:
2359:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     }
 2918              		.loc 1 2359 13 view .LVU940
 2919 002a 7047     		bx	lr
 2920              		.cfi_endproc
 2921              	.LFE321:
 2923              		.section	.text.HAL_CAN_GetError,"ax",%progbits
 2924              		.align	1
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 121


 2925              		.global	HAL_CAN_GetError
 2926              		.syntax unified
 2927              		.thumb
 2928              		.thumb_func
 2930              	HAL_CAN_GetError:
 2931              	.LVL236:
 2932              	.LFB322:
2376:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
2377:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /**
2378:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @brief  Return the CAN error code.
2379:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2380:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2381:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @retval CAN Error Code
2382:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
2383:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** uint32_t HAL_CAN_GetError(const CAN_HandleTypeDef *hcan)
2384:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** {
 2933              		.loc 1 2384 1 is_stmt 1 view -0
 2934              		.cfi_startproc
 2935              		@ args = 0, pretend = 0, frame = 0
 2936              		@ frame_needed = 0, uses_anonymous_args = 0
 2937              		@ link register save eliminated.
2385:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Return CAN error code */
2386:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   return hcan->ErrorCode;
 2938              		.loc 1 2386 3 view .LVU942
 2939              		.loc 1 2386 14 is_stmt 0 view .LVU943
 2940 0000 406A     		ldr	r0, [r0, #36]
 2941              	.LVL237:
2387:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** }
 2942              		.loc 1 2387 1 view .LVU944
 2943 0002 7047     		bx	lr
 2944              		.cfi_endproc
 2945              	.LFE322:
 2947              		.section	.text.HAL_CAN_ResetError,"ax",%progbits
 2948              		.align	1
 2949              		.global	HAL_CAN_ResetError
 2950              		.syntax unified
 2951              		.thumb
 2952              		.thumb_func
 2954              	HAL_CAN_ResetError:
 2955              	.LVL238:
 2956              	.LFB323:
2388:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
2389:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** /**
2390:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @brief  Reset the CAN error code.
2391:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2392:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2393:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   * @retval HAL status
2394:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   */
2395:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_ResetError(CAN_HandleTypeDef *hcan)
2396:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** {
 2957              		.loc 1 2396 1 is_stmt 1 view -0
 2958              		.cfi_startproc
 2959              		@ args = 0, pretend = 0, frame = 0
 2960              		@ frame_needed = 0, uses_anonymous_args = 0
 2961              		@ link register save eliminated.
2397:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   HAL_StatusTypeDef status = HAL_OK;
 2962              		.loc 1 2397 3 view .LVU946
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 122


2398:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 2963              		.loc 1 2398 3 view .LVU947
 2964              		.loc 1 2398 24 is_stmt 0 view .LVU948
 2965 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 2966              	.LVL239:
2399:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
2400:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 2967              		.loc 1 2400 3 is_stmt 1 view .LVU949
 2968              		.loc 1 2400 38 is_stmt 0 view .LVU950
 2969 0004 013B     		subs	r3, r3, #1
 2970              	.LVL240:
 2971              		.loc 1 2400 38 view .LVU951
 2972 0006 DBB2     		uxtb	r3, r3
 2973              	.LVL241:
 2974              		.loc 1 2400 6 view .LVU952
 2975 0008 012B     		cmp	r3, #1
 2976 000a 05D9     		bls	.L226
2401:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
2402:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
2403:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Reset CAN error code */
2404:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     hcan->ErrorCode = 0U;
2405:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
2406:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   else
2407:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   {
2408:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     /* Update error code */
2409:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
 2977              		.loc 1 2409 5 is_stmt 1 view .LVU953
 2978              		.loc 1 2409 9 is_stmt 0 view .LVU954
 2979 000c 436A     		ldr	r3, [r0, #36]
 2980              		.loc 1 2409 21 view .LVU955
 2981 000e 43F48023 		orr	r3, r3, #262144
 2982 0012 4362     		str	r3, [r0, #36]
2410:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
2411:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****     status = HAL_ERROR;
 2983              		.loc 1 2411 5 is_stmt 1 view .LVU956
 2984              	.LVL242:
 2985              		.loc 1 2411 12 is_stmt 0 view .LVU957
 2986 0014 0120     		movs	r0, #1
 2987              	.LVL243:
2412:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
2413:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** 
2414:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   /* Return the status */
2415:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   return status;
 2988              		.loc 1 2415 3 is_stmt 1 view .LVU958
2416:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c **** }
 2989              		.loc 1 2416 1 is_stmt 0 view .LVU959
 2990 0016 7047     		bx	lr
 2991              	.LVL244:
 2992              	.L226:
2404:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 2993              		.loc 1 2404 5 is_stmt 1 view .LVU960
2404:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   }
 2994              		.loc 1 2404 21 is_stmt 0 view .LVU961
 2995 0018 0023     		movs	r3, #0
 2996 001a 4362     		str	r3, [r0, #36]
2397:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 2997              		.loc 1 2397 21 view .LVU962
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 123


 2998 001c 1846     		mov	r0, r3
 2999              	.LVL245:
2397:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 3000              		.loc 1 2397 21 view .LVU963
 3001 001e 7047     		bx	lr
 3002              		.cfi_endproc
 3003              	.LFE323:
 3005              		.text
 3006              	.Letext0:
 3007              		.file 3 "C:/Users/Ali/AppData/Roaming/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tool
 3008              		.file 4 "C:/Users/Ali/AppData/Roaming/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tool
 3009              		.file 5 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l432xx.h"
 3010              		.file 6 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l4xx.h"
 3011              		.file 7 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 3012              		.file 8 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_can.h"
 3013              		.file 9 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 124


DEFINED SYMBOLS
                            *ABS*:00000000 stm32l4xx_hal_can.c
C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s:21     .text.HAL_CAN_MspInit:00000000 $t
C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s:27     .text.HAL_CAN_MspInit:00000000 HAL_CAN_MspInit
C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s:42     .text.HAL_CAN_Init:00000000 $t
C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s:48     .text.HAL_CAN_Init:00000000 HAL_CAN_Init
C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s:338    .text.HAL_CAN_MspDeInit:00000000 $t
C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s:344    .text.HAL_CAN_MspDeInit:00000000 HAL_CAN_MspDeInit
C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s:359    .text.HAL_CAN_ConfigFilter:00000000 $t
C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s:365    .text.HAL_CAN_ConfigFilter:00000000 HAL_CAN_ConfigFilter
C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s:579    .text.HAL_CAN_Start:00000000 $t
C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s:585    .text.HAL_CAN_Start:00000000 HAL_CAN_Start
C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s:685    .text.HAL_CAN_Stop:00000000 $t
C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s:691    .text.HAL_CAN_Stop:00000000 HAL_CAN_Stop
C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s:790    .text.HAL_CAN_DeInit:00000000 $t
C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s:796    .text.HAL_CAN_DeInit:00000000 HAL_CAN_DeInit
C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s:850    .text.HAL_CAN_RequestSleep:00000000 $t
C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s:856    .text.HAL_CAN_RequestSleep:00000000 HAL_CAN_RequestSleep
C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s:907    .text.HAL_CAN_WakeUp:00000000 $t
C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s:913    .text.HAL_CAN_WakeUp:00000000 HAL_CAN_WakeUp
C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s:1009   .text.HAL_CAN_WakeUp:00000054 $d
C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s:1014   .text.HAL_CAN_IsSleepActive:00000000 $t
C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s:1020   .text.HAL_CAN_IsSleepActive:00000000 HAL_CAN_IsSleepActive
C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s:1071   .text.HAL_CAN_AddTxMessage:00000000 $t
C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s:1077   .text.HAL_CAN_AddTxMessage:00000000 HAL_CAN_AddTxMessage
C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s:1274   .text.HAL_CAN_AbortTxRequest:00000000 $t
C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s:1280   .text.HAL_CAN_AbortTxRequest:00000000 HAL_CAN_AbortTxRequest
C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s:1357   .text.HAL_CAN_GetTxMailboxesFreeLevel:00000000 $t
C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s:1363   .text.HAL_CAN_GetTxMailboxesFreeLevel:00000000 HAL_CAN_GetTxMailboxesFreeLevel
C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s:1435   .text.HAL_CAN_IsTxMessagePending:00000000 $t
C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s:1441   .text.HAL_CAN_IsTxMessagePending:00000000 HAL_CAN_IsTxMessagePending
C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s:1499   .text.HAL_CAN_GetTxTimestamp:00000000 $t
C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s:1505   .text.HAL_CAN_GetTxTimestamp:00000000 HAL_CAN_GetTxTimestamp
C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s:1602   .text.HAL_CAN_GetRxMessage:00000000 $t
C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s:1608   .text.HAL_CAN_GetRxMessage:00000000 HAL_CAN_GetRxMessage
C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s:1916   .text.HAL_CAN_GetRxFifoFillLevel:00000000 $t
C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s:1922   .text.HAL_CAN_GetRxFifoFillLevel:00000000 HAL_CAN_GetRxFifoFillLevel
C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s:1985   .text.HAL_CAN_ActivateNotification:00000000 $t
C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s:1991   .text.HAL_CAN_ActivateNotification:00000000 HAL_CAN_ActivateNotification
C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s:2043   .text.HAL_CAN_DeactivateNotification:00000000 $t
C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s:2049   .text.HAL_CAN_DeactivateNotification:00000000 HAL_CAN_DeactivateNotification
C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s:2101   .text.HAL_CAN_TxMailbox0CompleteCallback:00000000 $t
C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s:2107   .text.HAL_CAN_TxMailbox0CompleteCallback:00000000 HAL_CAN_TxMailbox0CompleteCallback
C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s:2122   .text.HAL_CAN_TxMailbox1CompleteCallback:00000000 $t
C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s:2128   .text.HAL_CAN_TxMailbox1CompleteCallback:00000000 HAL_CAN_TxMailbox1CompleteCallback
C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s:2143   .text.HAL_CAN_TxMailbox2CompleteCallback:00000000 $t
C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s:2149   .text.HAL_CAN_TxMailbox2CompleteCallback:00000000 HAL_CAN_TxMailbox2CompleteCallback
C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s:2164   .text.HAL_CAN_TxMailbox0AbortCallback:00000000 $t
C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s:2170   .text.HAL_CAN_TxMailbox0AbortCallback:00000000 HAL_CAN_TxMailbox0AbortCallback
C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s:2185   .text.HAL_CAN_TxMailbox1AbortCallback:00000000 $t
C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s:2191   .text.HAL_CAN_TxMailbox1AbortCallback:00000000 HAL_CAN_TxMailbox1AbortCallback
C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s:2206   .text.HAL_CAN_TxMailbox2AbortCallback:00000000 $t
C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s:2212   .text.HAL_CAN_TxMailbox2AbortCallback:00000000 HAL_CAN_TxMailbox2AbortCallback
C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s:2227   .text.HAL_CAN_RxFifo0MsgPendingCallback:00000000 $t
C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s:2233   .text.HAL_CAN_RxFifo0MsgPendingCallback:00000000 HAL_CAN_RxFifo0MsgPendingCallback
C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s:2248   .text.HAL_CAN_RxFifo0FullCallback:00000000 $t
C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s:2254   .text.HAL_CAN_RxFifo0FullCallback:00000000 HAL_CAN_RxFifo0FullCallback
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s 			page 125


C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s:2269   .text.HAL_CAN_RxFifo1MsgPendingCallback:00000000 $t
C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s:2275   .text.HAL_CAN_RxFifo1MsgPendingCallback:00000000 HAL_CAN_RxFifo1MsgPendingCallback
C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s:2290   .text.HAL_CAN_RxFifo1FullCallback:00000000 $t
C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s:2296   .text.HAL_CAN_RxFifo1FullCallback:00000000 HAL_CAN_RxFifo1FullCallback
C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s:2311   .text.HAL_CAN_SleepCallback:00000000 $t
C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s:2317   .text.HAL_CAN_SleepCallback:00000000 HAL_CAN_SleepCallback
C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s:2332   .text.HAL_CAN_WakeUpFromRxMsgCallback:00000000 $t
C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s:2338   .text.HAL_CAN_WakeUpFromRxMsgCallback:00000000 HAL_CAN_WakeUpFromRxMsgCallback
C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s:2353   .text.HAL_CAN_ErrorCallback:00000000 $t
C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s:2359   .text.HAL_CAN_ErrorCallback:00000000 HAL_CAN_ErrorCallback
C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s:2374   .text.HAL_CAN_IRQHandler:00000000 $t
C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s:2380   .text.HAL_CAN_IRQHandler:00000000 HAL_CAN_IRQHandler
C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s:2857   .text.HAL_CAN_GetState:00000000 $t
C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s:2863   .text.HAL_CAN_GetState:00000000 HAL_CAN_GetState
C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s:2924   .text.HAL_CAN_GetError:00000000 $t
C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s:2930   .text.HAL_CAN_GetError:00000000 HAL_CAN_GetError
C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s:2948   .text.HAL_CAN_ResetError:00000000 $t
C:\Users\Ali\AppData\Local\Temp\ccJov1b1.s:2954   .text.HAL_CAN_ResetError:00000000 HAL_CAN_ResetError

UNDEFINED SYMBOLS
HAL_GetTick
