ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccXf3slz.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"cell_temp_handler.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/cell_temp_handler.c"
  20              		.section	.text.CellTemp_IsADCEnabled,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	CellTemp_IsADCEnabled:
  27              	.LVL0:
  28              	.LFB299:
   1:Core/Src/cell_temp_handler.c **** /* USER CODE BEGIN Header */
   2:Core/Src/cell_temp_handler.c **** /**
   3:Core/Src/cell_temp_handler.c ****   ******************************************************************************
   4:Core/Src/cell_temp_handler.c ****   * @file           : cell_temp_handler.c
   5:Core/Src/cell_temp_handler.c ****   * @brief          : Cell temperature monitoring handler implementation
   6:Core/Src/cell_temp_handler.c ****   ******************************************************************************
   7:Core/Src/cell_temp_handler.c ****   * @attention
   8:Core/Src/cell_temp_handler.c ****   *
   9:Core/Src/cell_temp_handler.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/cell_temp_handler.c ****   * All rights reserved.
  11:Core/Src/cell_temp_handler.c ****   *
  12:Core/Src/cell_temp_handler.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/cell_temp_handler.c ****   * in root directory of this software component.
  14:Core/Src/cell_temp_handler.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/cell_temp_handler.c ****   *
  16:Core/Src/cell_temp_handler.c ****   ******************************************************************************
  17:Core/Src/cell_temp_handler.c ****   */
  18:Core/Src/cell_temp_handler.c **** /* USER CODE END Header */
  19:Core/Src/cell_temp_handler.c **** 
  20:Core/Src/cell_temp_handler.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/cell_temp_handler.c **** #include "cell_temp_handler.h"
  22:Core/Src/cell_temp_handler.c **** #include "can_manager.h"
  23:Core/Src/cell_temp_handler.c **** #include "error_manager.h"
  24:Core/Src/cell_temp_handler.c **** #include <string.h>
  25:Core/Src/cell_temp_handler.c **** 
  26:Core/Src/cell_temp_handler.c **** /* Private variables ---------------------------------------------------------*/
  27:Core/Src/cell_temp_handler.c **** static temp_monitor_state_t temp_state = {0};
  28:Core/Src/cell_temp_handler.c **** static const uint32_t adc_channels[NUM_ADC_CHANNELS] = {
  29:Core/Src/cell_temp_handler.c ****     ADC_CH_1, ADC_CH_2, ADC_CH_3, ADC_CH_4, ADC_CH_5, ADC_CH_6, ADC_CH_7
  30:Core/Src/cell_temp_handler.c **** };
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccXf3slz.s 			page 2


  31:Core/Src/cell_temp_handler.c **** 
  32:Core/Src/cell_temp_handler.c **** // ADC channel enabled flags - compile time configuration
  33:Core/Src/cell_temp_handler.c **** static const uint8_t adc_channel_enabled[NUM_ADC_CHANNELS] = {
  34:Core/Src/cell_temp_handler.c ****     ADC1_ENABLED, ADC2_ENABLED, ADC3_ENABLED, ADC4_ENABLED, 
  35:Core/Src/cell_temp_handler.c ****     ADC5_ENABLED, ADC6_ENABLED, ADC7_ENABLED
  36:Core/Src/cell_temp_handler.c **** };
  37:Core/Src/cell_temp_handler.c **** 
  38:Core/Src/cell_temp_handler.c **** /* Private function prototypes -----------------------------------------------*/
  39:Core/Src/cell_temp_handler.c **** static HAL_StatusTypeDef CellTemp_ConfigureADCChannel(uint32_t channel);
  40:Core/Src/cell_temp_handler.c **** static HAL_StatusTypeDef CellTemp_SendTemperatureMessage(uint8_t msg_index, uint8_t start_therm_idx
  41:Core/Src/cell_temp_handler.c **** static uint8_t CellTemp_IsADCEnabled(uint8_t adc_index);
  42:Core/Src/cell_temp_handler.c **** 
  43:Core/Src/cell_temp_handler.c **** /* Function Implementations --------------------------------------------------*/
  44:Core/Src/cell_temp_handler.c **** 
  45:Core/Src/cell_temp_handler.c **** /**
  46:Core/Src/cell_temp_handler.c ****   * @brief  Initialize cell temperature monitoring system
  47:Core/Src/cell_temp_handler.c ****   * @retval HAL_StatusTypeDef
  48:Core/Src/cell_temp_handler.c ****   */
  49:Core/Src/cell_temp_handler.c **** HAL_StatusTypeDef CellTemp_Init(void)
  50:Core/Src/cell_temp_handler.c **** {
  51:Core/Src/cell_temp_handler.c ****     // Initialize state structure
  52:Core/Src/cell_temp_handler.c ****     memset(&temp_state, 0, sizeof(temp_monitor_state_t));
  53:Core/Src/cell_temp_handler.c **** 
  54:Core/Src/cell_temp_handler.c ****     // Initialize thermistor data
  55:Core/Src/cell_temp_handler.c ****     for (uint8_t i = 0; i < TOTAL_THERMISTORS; i++) {
  56:Core/Src/cell_temp_handler.c ****         temp_state.thermistors[i].adc_index = i / MUX_CHANNELS;
  57:Core/Src/cell_temp_handler.c ****         temp_state.thermistors[i].mux_channel = i % MUX_CHANNELS;
  58:Core/Src/cell_temp_handler.c ****         temp_state.thermistors[i].temperature = -127.0f; // Invalid temperature marker
  59:Core/Src/cell_temp_handler.c ****         temp_state.thermistors[i].raw_adc = 0;
  60:Core/Src/cell_temp_handler.c ****         temp_state.thermistors[i].last_read_time = 0;
  61:Core/Src/cell_temp_handler.c ****         temp_state.thermistors[i].adc_accumulator = 0;
  62:Core/Src/cell_temp_handler.c ****         temp_state.thermistors[i].sample_count = 0;
  63:Core/Src/cell_temp_handler.c ****     }
  64:Core/Src/cell_temp_handler.c **** 
  65:Core/Src/cell_temp_handler.c ****     // Note: ADC calibration is already done in main() before RTOS starts
  66:Core/Src/cell_temp_handler.c **** 
  67:Core/Src/cell_temp_handler.c ****     // Initialize MUX control signals to 0 (without calling osDelay)
  68:Core/Src/cell_temp_handler.c ****     HAL_GPIO_WritePin(MUX_SIG1_PORT, MUX_SIG1_PIN, GPIO_PIN_RESET);
  69:Core/Src/cell_temp_handler.c ****     HAL_GPIO_WritePin(MUX_SIG2_PORT, MUX_SIG2_PIN, GPIO_PIN_RESET);
  70:Core/Src/cell_temp_handler.c ****     HAL_GPIO_WritePin(MUX_SIG3_PORT, MUX_SIG3_PIN, GPIO_PIN_RESET);
  71:Core/Src/cell_temp_handler.c **** 
  72:Core/Src/cell_temp_handler.c ****     return HAL_OK;
  73:Core/Src/cell_temp_handler.c **** }
  74:Core/Src/cell_temp_handler.c **** 
  75:Core/Src/cell_temp_handler.c **** /**
  76:Core/Src/cell_temp_handler.c ****   * @brief  Configure ADC for specific channel
  77:Core/Src/cell_temp_handler.c ****   * @param  channel: ADC channel to configure
  78:Core/Src/cell_temp_handler.c ****   * @retval HAL_StatusTypeDef
  79:Core/Src/cell_temp_handler.c ****   */
  80:Core/Src/cell_temp_handler.c **** static HAL_StatusTypeDef CellTemp_ConfigureADCChannel(uint32_t channel)
  81:Core/Src/cell_temp_handler.c **** {
  82:Core/Src/cell_temp_handler.c ****     ADC_ChannelConfTypeDef sConfig = {0};
  83:Core/Src/cell_temp_handler.c ****     
  84:Core/Src/cell_temp_handler.c ****     sConfig.Channel = channel;
  85:Core/Src/cell_temp_handler.c ****     sConfig.Rank = ADC_REGULAR_RANK_1;
  86:Core/Src/cell_temp_handler.c ****     sConfig.SamplingTime = ADC_SAMPLETIME_640CYCLES_5; // Long sampling for high impedance
  87:Core/Src/cell_temp_handler.c ****     sConfig.SingleDiff = ADC_SINGLE_ENDED;
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccXf3slz.s 			page 3


  88:Core/Src/cell_temp_handler.c ****     sConfig.OffsetNumber = ADC_OFFSET_NONE;
  89:Core/Src/cell_temp_handler.c ****     sConfig.Offset = 0;
  90:Core/Src/cell_temp_handler.c ****     
  91:Core/Src/cell_temp_handler.c ****     return HAL_ADC_ConfigChannel(&hadc1, &sConfig);
  92:Core/Src/cell_temp_handler.c **** }
  93:Core/Src/cell_temp_handler.c **** 
  94:Core/Src/cell_temp_handler.c **** /**
  95:Core/Src/cell_temp_handler.c ****   * @brief  Read single ADC value from specified channel
  96:Core/Src/cell_temp_handler.c ****   * @param  adc_channel: ADC channel to read
  97:Core/Src/cell_temp_handler.c ****   * @retval ADC value (0-4095)
  98:Core/Src/cell_temp_handler.c ****   */
  99:Core/Src/cell_temp_handler.c **** uint16_t CellTemp_ReadADC(uint32_t adc_channel)
 100:Core/Src/cell_temp_handler.c **** {
 101:Core/Src/cell_temp_handler.c ****     uint16_t adc_value = 0;
 102:Core/Src/cell_temp_handler.c ****     
 103:Core/Src/cell_temp_handler.c ****     // Configure ADC for the specified channel
 104:Core/Src/cell_temp_handler.c ****     if (CellTemp_ConfigureADCChannel(adc_channel) != HAL_OK) {
 105:Core/Src/cell_temp_handler.c ****         return 0;
 106:Core/Src/cell_temp_handler.c ****     }
 107:Core/Src/cell_temp_handler.c ****     
 108:Core/Src/cell_temp_handler.c ****     // Start ADC conversion
 109:Core/Src/cell_temp_handler.c ****     if (HAL_ADC_Start(&hadc1) == HAL_OK) {
 110:Core/Src/cell_temp_handler.c ****         // Wait for conversion to complete
 111:Core/Src/cell_temp_handler.c ****         if (HAL_ADC_PollForConversion(&hadc1, HAL_MAX_DELAY) == HAL_OK) {
 112:Core/Src/cell_temp_handler.c ****             // Get ADC value
 113:Core/Src/cell_temp_handler.c ****             adc_value = HAL_ADC_GetValue(&hadc1);
 114:Core/Src/cell_temp_handler.c ****         }
 115:Core/Src/cell_temp_handler.c ****         // Stop ADC
 116:Core/Src/cell_temp_handler.c ****         HAL_ADC_Stop(&hadc1);
 117:Core/Src/cell_temp_handler.c ****     }
 118:Core/Src/cell_temp_handler.c ****     
 119:Core/Src/cell_temp_handler.c ****     return adc_value;
 120:Core/Src/cell_temp_handler.c **** }
 121:Core/Src/cell_temp_handler.c **** 
 122:Core/Src/cell_temp_handler.c **** /**
 123:Core/Src/cell_temp_handler.c ****   * @brief  Set MUX channel using 3-bit digital control signals
 124:Core/Src/cell_temp_handler.c ****   * @param  channel: MUX channel to select (0-7)
 125:Core/Src/cell_temp_handler.c ****   * @retval None
 126:Core/Src/cell_temp_handler.c ****   */
 127:Core/Src/cell_temp_handler.c **** void CellTemp_SetMuxChannel(uint8_t channel)
 128:Core/Src/cell_temp_handler.c **** {
 129:Core/Src/cell_temp_handler.c ****     // Validate channel range
 130:Core/Src/cell_temp_handler.c ****     if (channel > 7) {
 131:Core/Src/cell_temp_handler.c ****         return;
 132:Core/Src/cell_temp_handler.c ****     }
 133:Core/Src/cell_temp_handler.c ****     
 134:Core/Src/cell_temp_handler.c ****     // Set MUX control signals based on 3-bit channel value
 135:Core/Src/cell_temp_handler.c ****     // MUX_SIG1 = bit 0
 136:Core/Src/cell_temp_handler.c ****     // MUX_SIG2 = bit 1  
 137:Core/Src/cell_temp_handler.c ****     // MUX_SIG3 = bit 2
 138:Core/Src/cell_temp_handler.c ****     
 139:Core/Src/cell_temp_handler.c ****     if (channel & 0x01) {
 140:Core/Src/cell_temp_handler.c ****         HAL_GPIO_WritePin(MUX_SIG1_PORT, MUX_SIG1_PIN, GPIO_PIN_SET);
 141:Core/Src/cell_temp_handler.c ****     } else {
 142:Core/Src/cell_temp_handler.c ****         HAL_GPIO_WritePin(MUX_SIG1_PORT, MUX_SIG1_PIN, GPIO_PIN_RESET);
 143:Core/Src/cell_temp_handler.c ****     }
 144:Core/Src/cell_temp_handler.c ****     
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccXf3slz.s 			page 4


 145:Core/Src/cell_temp_handler.c ****     if (channel & 0x02) {
 146:Core/Src/cell_temp_handler.c ****         HAL_GPIO_WritePin(MUX_SIG2_PORT, MUX_SIG2_PIN, GPIO_PIN_SET);
 147:Core/Src/cell_temp_handler.c ****     } else {
 148:Core/Src/cell_temp_handler.c ****         HAL_GPIO_WritePin(MUX_SIG2_PORT, MUX_SIG2_PIN, GPIO_PIN_RESET);
 149:Core/Src/cell_temp_handler.c ****     }
 150:Core/Src/cell_temp_handler.c ****     
 151:Core/Src/cell_temp_handler.c ****     if (channel & 0x04) {
 152:Core/Src/cell_temp_handler.c ****         HAL_GPIO_WritePin(MUX_SIG3_PORT, MUX_SIG3_PIN, GPIO_PIN_SET);
 153:Core/Src/cell_temp_handler.c ****     } else {
 154:Core/Src/cell_temp_handler.c ****         HAL_GPIO_WritePin(MUX_SIG3_PORT, MUX_SIG3_PIN, GPIO_PIN_RESET);
 155:Core/Src/cell_temp_handler.c ****     }
 156:Core/Src/cell_temp_handler.c ****     
 157:Core/Src/cell_temp_handler.c ****     // Allow time for MUX to settle (2 ticks = 2ms at default 1ms tick rate)
 158:Core/Src/cell_temp_handler.c ****     osDelay(2);
 159:Core/Src/cell_temp_handler.c **** }
 160:Core/Src/cell_temp_handler.c **** 
 161:Core/Src/cell_temp_handler.c **** /**
 162:Core/Src/cell_temp_handler.c ****   * @brief  Calculate temperature from thermistor ADC reading using B-parameter equation
 163:Core/Src/cell_temp_handler.c ****   * @param  adc_value: Raw ADC value (0-4095)
 164:Core/Src/cell_temp_handler.c ****   * @retval Temperature in degrees Celsius
 165:Core/Src/cell_temp_handler.c ****   */
 166:Core/Src/cell_temp_handler.c **** float CellTemp_CalculateTemperature(uint16_t adc_value)
 167:Core/Src/cell_temp_handler.c **** {
 168:Core/Src/cell_temp_handler.c ****     // Convert ADC value to voltage
 169:Core/Src/cell_temp_handler.c ****     float voltage = ((float)adc_value / ADC_RESOLUTION) * ADC_VREF;
 170:Core/Src/cell_temp_handler.c ****     
 171:Core/Src/cell_temp_handler.c ****     // Check for disconnected thermistor (very low ADC reading means low voltage = open circuit)
 172:Core/Src/cell_temp_handler.c ****     if (adc_value < 10) {  // Less than ~8mV indicates disconnected sensor
 173:Core/Src/cell_temp_handler.c ****         return -127.0f;  // Return obvious error value
 174:Core/Src/cell_temp_handler.c ****     }
 175:Core/Src/cell_temp_handler.c ****     
 176:Core/Src/cell_temp_handler.c ****     // Calculate thermistor resistance using voltage divider
 177:Core/Src/cell_temp_handler.c ****     // Circuit: 3.3V -> 10kΩ pullup -> ADC_input -> Thermistor -> GND
 178:Core/Src/cell_temp_handler.c ****     // Voltage divider: V_adc = 3.3V * (R_thermistor / (R_pullup + R_thermistor))
 179:Core/Src/cell_temp_handler.c ****     // Solving for R_thermistor: R_thermistor = (V_adc * R_pullup) / (3.3V - V_adc)
 180:Core/Src/cell_temp_handler.c ****     
 181:Core/Src/cell_temp_handler.c ****     float r_thermistor;
 182:Core/Src/cell_temp_handler.c ****     
 183:Core/Src/cell_temp_handler.c ****     if (voltage >= 3.29f) {  // Close to 3.3V limit, very high resistance (cold)
 184:Core/Src/cell_temp_handler.c ****         r_thermistor = PULLUP_RESISTOR * 100.0f;  // Assume very high resistance
 185:Core/Src/cell_temp_handler.c ****     } else {
 186:Core/Src/cell_temp_handler.c ****         // Normal calculation with 3.3V supply
 187:Core/Src/cell_temp_handler.c ****         r_thermistor = (voltage * PULLUP_RESISTOR) / (ADC_VREF - voltage);
 188:Core/Src/cell_temp_handler.c ****     }
 189:Core/Src/cell_temp_handler.c ****     
 190:Core/Src/cell_temp_handler.c ****     // Handle edge cases
 191:Core/Src/cell_temp_handler.c ****     if (r_thermistor <= 0) {
 192:Core/Src/cell_temp_handler.c ****         return 125.0f; // Return maximum temperature for very low resistance
 193:Core/Src/cell_temp_handler.c ****     }
 194:Core/Src/cell_temp_handler.c ****     
 195:Core/Src/cell_temp_handler.c ****     // Calculate temperature using B-parameter equation (derived from Steinhart-Hart)
 196:Core/Src/cell_temp_handler.c ****     // 1/T = 1/T0 + (1/B) * ln(R/R0)
 197:Core/Src/cell_temp_handler.c ****     // Where T0 = 298.15K (25°C), R0 = resistance at 25°C, B = B-value
 198:Core/Src/cell_temp_handler.c ****     float ln_ratio = logf(r_thermistor / THERMISTOR_R25);
 199:Core/Src/cell_temp_handler.c ****     float temp_kelvin = 1.0f / ((1.0f / REFERENCE_TEMP_K) + (ln_ratio / THERMISTOR_B_VALUE));
 200:Core/Src/cell_temp_handler.c ****     
 201:Core/Src/cell_temp_handler.c ****     // Convert to Celsius
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccXf3slz.s 			page 5


 202:Core/Src/cell_temp_handler.c ****     float temp_celsius = temp_kelvin - 273.15f;
 203:Core/Src/cell_temp_handler.c ****     
 204:Core/Src/cell_temp_handler.c ****     // Clamp to reasonable range
 205:Core/Src/cell_temp_handler.c ****     if (temp_celsius < -40.0f) {
 206:Core/Src/cell_temp_handler.c ****         temp_celsius = -40.0f;
 207:Core/Src/cell_temp_handler.c ****     } else if (temp_celsius > 125.0f) {
 208:Core/Src/cell_temp_handler.c ****         temp_celsius = 125.0f;
 209:Core/Src/cell_temp_handler.c ****     }
 210:Core/Src/cell_temp_handler.c ****     
 211:Core/Src/cell_temp_handler.c ****     return temp_celsius;
 212:Core/Src/cell_temp_handler.c **** }
 213:Core/Src/cell_temp_handler.c **** 
 214:Core/Src/cell_temp_handler.c **** /**
 215:Core/Src/cell_temp_handler.c ****   * @brief  Read temperature from specific thermistor
 216:Core/Src/cell_temp_handler.c ****   * @param  adc_index: ADC channel index (0-6)
 217:Core/Src/cell_temp_handler.c ****   * @param  mux_channel: MUX channel (0-7)
 218:Core/Src/cell_temp_handler.c ****   * @retval Temperature in degrees Celsius
 219:Core/Src/cell_temp_handler.c ****   */
 220:Core/Src/cell_temp_handler.c **** float CellTemp_ReadThermistor(uint8_t adc_index, uint8_t mux_channel)
 221:Core/Src/cell_temp_handler.c **** {
 222:Core/Src/cell_temp_handler.c ****     // Validate inputs
 223:Core/Src/cell_temp_handler.c ****     if (adc_index >= NUM_ADC_CHANNELS || mux_channel >= MUX_CHANNELS) {
 224:Core/Src/cell_temp_handler.c ****         return -127.0f;
 225:Core/Src/cell_temp_handler.c ****     }
 226:Core/Src/cell_temp_handler.c ****     
 227:Core/Src/cell_temp_handler.c ****     // Set MUX to desired channel
 228:Core/Src/cell_temp_handler.c ****     CellTemp_SetMuxChannel(mux_channel);
 229:Core/Src/cell_temp_handler.c ****     
 230:Core/Src/cell_temp_handler.c ****     // Read ADC value from the specified ADC channel
 231:Core/Src/cell_temp_handler.c ****     uint16_t adc_value = CellTemp_ReadADC(adc_channels[adc_index]);
 232:Core/Src/cell_temp_handler.c ****     
 233:Core/Src/cell_temp_handler.c ****     // Calculate temperature
 234:Core/Src/cell_temp_handler.c ****     return CellTemp_CalculateTemperature(adc_value);
 235:Core/Src/cell_temp_handler.c **** }
 236:Core/Src/cell_temp_handler.c **** 
 237:Core/Src/cell_temp_handler.c **** /**
 238:Core/Src/cell_temp_handler.c ****   * @brief  Main temperature monitoring task (to be called from ReadCellTemps)
 239:Core/Src/cell_temp_handler.c ****   * @param  argument: Not used
 240:Core/Src/cell_temp_handler.c ****   * @retval None
 241:Core/Src/cell_temp_handler.c ****   */
 242:Core/Src/cell_temp_handler.c **** void CellTemp_MonitorTask(void *argument)
 243:Core/Src/cell_temp_handler.c **** {
 244:Core/Src/cell_temp_handler.c ****     // Initialize the temperature monitoring system
 245:Core/Src/cell_temp_handler.c ****     if (CellTemp_Init() != HAL_OK) {
 246:Core/Src/cell_temp_handler.c ****         // Handle initialization error - blink would go here if we had an LED
 247:Core/Src/cell_temp_handler.c ****         while(1) {
 248:Core/Src/cell_temp_handler.c ****             osDelay(1000);  // Wait 1 second (1000 ticks at 1ms tick rate)
 249:Core/Src/cell_temp_handler.c ****         }
 250:Core/Src/cell_temp_handler.c ****     }
 251:Core/Src/cell_temp_handler.c ****     
 252:Core/Src/cell_temp_handler.c ****     // Strategy: Oversample each MUX channel for 125ms, then send CAN updates
 253:Core/Src/cell_temp_handler.c ****     // - Set MUX channel once
 254:Core/Src/cell_temp_handler.c ****     // - Sample all 7 ADC channels every 10ms for 125ms (12 samples each)
 255:Core/Src/cell_temp_handler.c ****     // - Average the samples to get accurate readings
 256:Core/Src/cell_temp_handler.c ****     // - Send CAN messages with updated values for all 7 ADCs
 257:Core/Src/cell_temp_handler.c ****     // - Move to next MUX channel and repeat
 258:Core/Src/cell_temp_handler.c ****     // Complete cycle time: 125ms × 8 MUX channels = 1 second
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccXf3slz.s 			page 6


 259:Core/Src/cell_temp_handler.c ****     
 260:Core/Src/cell_temp_handler.c ****     /* Infinite loop */
 261:Core/Src/cell_temp_handler.c ****     for(;;)
 262:Core/Src/cell_temp_handler.c ****     {
 263:Core/Src/cell_temp_handler.c ****         // Set the current MUX channel for all ADCs
 264:Core/Src/cell_temp_handler.c ****         CellTemp_SetMuxChannel(temp_state.current_mux);
 265:Core/Src/cell_temp_handler.c ****         
 266:Core/Src/cell_temp_handler.c ****         // Reset accumulators for this MUX channel (across all ADC channels)
 267:Core/Src/cell_temp_handler.c ****         for (uint8_t adc = 0; adc < NUM_ADC_CHANNELS; adc++) {
 268:Core/Src/cell_temp_handler.c ****             if (CellTemp_IsADCEnabled(adc)) {
 269:Core/Src/cell_temp_handler.c ****                 uint8_t therm_idx = adc * MUX_CHANNELS + temp_state.current_mux;
 270:Core/Src/cell_temp_handler.c ****                 temp_state.thermistors[therm_idx].adc_accumulator = 0;
 271:Core/Src/cell_temp_handler.c ****                 temp_state.thermistors[therm_idx].sample_count = 0;
 272:Core/Src/cell_temp_handler.c ****             }
 273:Core/Src/cell_temp_handler.c ****         }
 274:Core/Src/cell_temp_handler.c ****         
 275:Core/Src/cell_temp_handler.c ****         // Oversample for 500ms (50 samples at 10ms intervals)
 276:Core/Src/cell_temp_handler.c ****         for (uint16_t sample = 0; sample < TEMP_SAMPLES_PER_MUX; sample++) {
 277:Core/Src/cell_temp_handler.c ****             // Read all enabled ADC channels for current MUX channel
 278:Core/Src/cell_temp_handler.c ****             for (uint8_t adc = 0; adc < NUM_ADC_CHANNELS; adc++) {
 279:Core/Src/cell_temp_handler.c ****                 if (CellTemp_IsADCEnabled(adc)) {
 280:Core/Src/cell_temp_handler.c ****                     uint8_t therm_idx = adc * MUX_CHANNELS + temp_state.current_mux;
 281:Core/Src/cell_temp_handler.c ****                     thermistor_data_t *therm = &temp_state.thermistors[therm_idx];
 282:Core/Src/cell_temp_handler.c ****                     
 283:Core/Src/cell_temp_handler.c ****                     // Read ADC value
 284:Core/Src/cell_temp_handler.c ****                     uint16_t adc_value = CellTemp_ReadADC(adc_channels[adc]);
 285:Core/Src/cell_temp_handler.c ****                     
 286:Core/Src/cell_temp_handler.c ****                     // Accumulate sample (ignore obviously invalid readings)
 287:Core/Src/cell_temp_handler.c ****                     if (adc_value >= 10) {  // Valid reading threshold
 288:Core/Src/cell_temp_handler.c ****                         therm->adc_accumulator += adc_value;
 289:Core/Src/cell_temp_handler.c ****                         therm->sample_count++;
 290:Core/Src/cell_temp_handler.c ****                     }
 291:Core/Src/cell_temp_handler.c ****                 }
 292:Core/Src/cell_temp_handler.c ****             }
 293:Core/Src/cell_temp_handler.c ****             
 294:Core/Src/cell_temp_handler.c ****             // Wait 10ms before next sample
 295:Core/Src/cell_temp_handler.c ****             osDelay(TEMP_SAMPLE_INTERVAL_MS);
 296:Core/Src/cell_temp_handler.c ****         }
 297:Core/Src/cell_temp_handler.c ****         
 298:Core/Src/cell_temp_handler.c ****         // Calculate averaged values and temperatures for this MUX channel
 299:Core/Src/cell_temp_handler.c ****         uint32_t current_time = osKernelGetTickCount();
 300:Core/Src/cell_temp_handler.c ****         
 301:Core/Src/cell_temp_handler.c ****         for (uint8_t adc = 0; adc < NUM_ADC_CHANNELS; adc++) {
 302:Core/Src/cell_temp_handler.c ****             if (CellTemp_IsADCEnabled(adc)) {
 303:Core/Src/cell_temp_handler.c ****                 uint8_t therm_idx = adc * MUX_CHANNELS + temp_state.current_mux;
 304:Core/Src/cell_temp_handler.c ****                 thermistor_data_t *therm = &temp_state.thermistors[therm_idx];
 305:Core/Src/cell_temp_handler.c ****                 
 306:Core/Src/cell_temp_handler.c ****                 // Calculate average ADC value
 307:Core/Src/cell_temp_handler.c ****                 if (therm->sample_count > 0) {
 308:Core/Src/cell_temp_handler.c ****                     therm->raw_adc = (uint16_t)(therm->adc_accumulator / therm->sample_count);
 309:Core/Src/cell_temp_handler.c ****                     therm->temperature = CellTemp_CalculateTemperature(therm->raw_adc);
 310:Core/Src/cell_temp_handler.c ****                     therm->last_read_time = current_time;
 311:Core/Src/cell_temp_handler.c ****                     
 312:Core/Src/cell_temp_handler.c **** #if TEMP_FAULT_DETECTION_ENABLED
 313:Core/Src/cell_temp_handler.c ****                     // Check temperature limits and set error flags
 314:Core/Src/cell_temp_handler.c ****                     if (therm->temperature > -126.0f) {  // Valid temperature reading
 315:Core/Src/cell_temp_handler.c ****                         if (therm->temperature > TEMP_MAX_CELSIUS) {
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccXf3slz.s 			page 7


 316:Core/Src/cell_temp_handler.c ****                             ErrorMgr_SetError(ERROR_OVER_TEMP);
 317:Core/Src/cell_temp_handler.c ****                         } else if (therm->temperature < TEMP_MIN_CELSIUS) {
 318:Core/Src/cell_temp_handler.c ****                             ErrorMgr_SetError(ERROR_UNDER_TEMP);
 319:Core/Src/cell_temp_handler.c ****                         }
 320:Core/Src/cell_temp_handler.c ****                     } else {
 321:Core/Src/cell_temp_handler.c ****                         ErrorMgr_SetError(ERROR_TEMP_SENSOR_FAULT);
 322:Core/Src/cell_temp_handler.c ****                     }
 323:Core/Src/cell_temp_handler.c **** #endif
 324:Core/Src/cell_temp_handler.c ****                 } else {
 325:Core/Src/cell_temp_handler.c ****                     // No valid samples collected - sensor fault
 326:Core/Src/cell_temp_handler.c ****                     therm->raw_adc = 0;
 327:Core/Src/cell_temp_handler.c ****                     therm->temperature = -127.0f;
 328:Core/Src/cell_temp_handler.c **** #if TEMP_FAULT_DETECTION_ENABLED
 329:Core/Src/cell_temp_handler.c ****                     ErrorMgr_SetError(ERROR_TEMP_SENSOR_FAULT);
 330:Core/Src/cell_temp_handler.c **** #endif
 331:Core/Src/cell_temp_handler.c ****                 }
 332:Core/Src/cell_temp_handler.c ****             } else {
 333:Core/Src/cell_temp_handler.c ****                 // ADC disabled - mark thermistor as invalid
 334:Core/Src/cell_temp_handler.c ****                 uint8_t therm_idx = adc * MUX_CHANNELS + temp_state.current_mux;
 335:Core/Src/cell_temp_handler.c ****                 temp_state.thermistors[therm_idx].temperature = -127.0f;
 336:Core/Src/cell_temp_handler.c ****                 temp_state.thermistors[therm_idx].raw_adc = 0;
 337:Core/Src/cell_temp_handler.c ****             }
 338:Core/Src/cell_temp_handler.c ****         }
 339:Core/Src/cell_temp_handler.c ****         
 340:Core/Src/cell_temp_handler.c ****         // Send CAN messages only when all 4 thermistors in the message have been updated
 341:Core/Src/cell_temp_handler.c ****         // Each message covers 4 consecutive thermistors from the same ADC
 342:Core/Src/cell_temp_handler.c ****         // Message updates happen when MUX channels 3 and 7 complete
 343:Core/Src/cell_temp_handler.c ****         
 344:Core/Src/cell_temp_handler.c ****         if (temp_state.current_mux == 3 || temp_state.current_mux == 7) {
 345:Core/Src/cell_temp_handler.c ****             // Just completed MUX 0-3 or MUX 4-7, so we have all 4 temps for a message
 346:Core/Src/cell_temp_handler.c ****             for (uint8_t adc = 0; adc < NUM_ADC_CHANNELS; adc++) {
 347:Core/Src/cell_temp_handler.c ****                 if (CellTemp_IsADCEnabled(adc)) {
 348:Core/Src/cell_temp_handler.c ****                     // Determine which message to send based on current MUX
 349:Core/Src/cell_temp_handler.c ****                     if (temp_state.current_mux == 3) {
 350:Core/Src/cell_temp_handler.c ****                         // Send message 0 for this ADC (thermistors 0-3)
 351:Core/Src/cell_temp_handler.c ****                         uint8_t msg_idx = adc * 2;
 352:Core/Src/cell_temp_handler.c ****                         uint8_t start_therm_idx = adc * MUX_CHANNELS;
 353:Core/Src/cell_temp_handler.c ****                         CellTemp_SendTemperatureMessage(msg_idx, start_therm_idx);
 354:Core/Src/cell_temp_handler.c ****                         osDelay(2); // Small delay between messages
 355:Core/Src/cell_temp_handler.c ****                     } else {
 356:Core/Src/cell_temp_handler.c ****                         // Send message 1 for this ADC (thermistors 4-7)
 357:Core/Src/cell_temp_handler.c ****                         uint8_t msg_idx = adc * 2 + 1;
 358:Core/Src/cell_temp_handler.c ****                         uint8_t start_therm_idx = adc * MUX_CHANNELS + 4;
 359:Core/Src/cell_temp_handler.c ****                         CellTemp_SendTemperatureMessage(msg_idx, start_therm_idx);
 360:Core/Src/cell_temp_handler.c ****                         osDelay(2); // Small delay between messages
 361:Core/Src/cell_temp_handler.c ****                     }
 362:Core/Src/cell_temp_handler.c ****                 }
 363:Core/Src/cell_temp_handler.c ****             }
 364:Core/Src/cell_temp_handler.c ****         }
 365:Core/Src/cell_temp_handler.c ****         
 366:Core/Src/cell_temp_handler.c ****         // Move to next MUX channel
 367:Core/Src/cell_temp_handler.c ****         temp_state.current_mux++;
 368:Core/Src/cell_temp_handler.c ****         
 369:Core/Src/cell_temp_handler.c ****         // Check if we completed full cycle of all MUX channels
 370:Core/Src/cell_temp_handler.c ****         if (temp_state.current_mux >= MUX_CHANNELS) {
 371:Core/Src/cell_temp_handler.c ****             temp_state.current_mux = 0;
 372:Core/Src/cell_temp_handler.c ****             temp_state.cycle_count++;
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccXf3slz.s 			page 8


 373:Core/Src/cell_temp_handler.c ****             
 374:Core/Src/cell_temp_handler.c **** #if TEMP_FAULT_DETECTION_ENABLED
 375:Core/Src/cell_temp_handler.c ****             // After completing a full cycle, check if all thermistors are within limits
 376:Core/Src/cell_temp_handler.c ****             // If so, clear the error flags
 377:Core/Src/cell_temp_handler.c ****             uint8_t any_over_temp = 0;
 378:Core/Src/cell_temp_handler.c ****             uint8_t any_under_temp = 0;
 379:Core/Src/cell_temp_handler.c ****             uint8_t any_sensor_fault = 0;
 380:Core/Src/cell_temp_handler.c ****             
 381:Core/Src/cell_temp_handler.c ****             for (uint8_t i = 0; i < TOTAL_THERMISTORS; i++) {
 382:Core/Src/cell_temp_handler.c ****                 // Only check enabled ADC channels
 383:Core/Src/cell_temp_handler.c ****                 uint8_t therm_adc = i / MUX_CHANNELS;
 384:Core/Src/cell_temp_handler.c ****                 if (CellTemp_IsADCEnabled(therm_adc)) {
 385:Core/Src/cell_temp_handler.c ****                     float temp = temp_state.thermistors[i].temperature;
 386:Core/Src/cell_temp_handler.c ****                     
 387:Core/Src/cell_temp_handler.c ****                     if (temp <= -126.0f) {
 388:Core/Src/cell_temp_handler.c ****                         // Invalid reading - sensor fault
 389:Core/Src/cell_temp_handler.c ****                         any_sensor_fault = 1;
 390:Core/Src/cell_temp_handler.c ****                     } else if (temp > TEMP_MAX_CELSIUS) {
 391:Core/Src/cell_temp_handler.c ****                         // Over temperature
 392:Core/Src/cell_temp_handler.c ****                         any_over_temp = 1;
 393:Core/Src/cell_temp_handler.c ****                     } else if (temp < TEMP_MIN_CELSIUS) {
 394:Core/Src/cell_temp_handler.c ****                         // Under temperature
 395:Core/Src/cell_temp_handler.c ****                         any_under_temp = 1;
 396:Core/Src/cell_temp_handler.c ****                     }
 397:Core/Src/cell_temp_handler.c ****                 }
 398:Core/Src/cell_temp_handler.c ****             }
 399:Core/Src/cell_temp_handler.c ****             
 400:Core/Src/cell_temp_handler.c ****             // Clear error flags if all thermistors are within bounds
 401:Core/Src/cell_temp_handler.c ****             if (!any_over_temp) {
 402:Core/Src/cell_temp_handler.c ****                 ErrorMgr_ClearError(ERROR_OVER_TEMP);
 403:Core/Src/cell_temp_handler.c ****             }
 404:Core/Src/cell_temp_handler.c ****             if (!any_under_temp) {
 405:Core/Src/cell_temp_handler.c ****                 ErrorMgr_ClearError(ERROR_UNDER_TEMP);
 406:Core/Src/cell_temp_handler.c ****             }
 407:Core/Src/cell_temp_handler.c ****             if (!any_sensor_fault) {
 408:Core/Src/cell_temp_handler.c ****                 ErrorMgr_ClearError(ERROR_TEMP_SENSOR_FAULT);
 409:Core/Src/cell_temp_handler.c ****             }
 410:Core/Src/cell_temp_handler.c **** #endif
 411:Core/Src/cell_temp_handler.c ****         }
 412:Core/Src/cell_temp_handler.c ****     }
 413:Core/Src/cell_temp_handler.c **** }
 414:Core/Src/cell_temp_handler.c **** 
 415:Core/Src/cell_temp_handler.c **** /**
 416:Core/Src/cell_temp_handler.c ****   * @brief  Check if ADC channel is enabled
 417:Core/Src/cell_temp_handler.c ****   * @param  adc_index: ADC channel index (0-6)
 418:Core/Src/cell_temp_handler.c ****   * @retval 1 if enabled, 0 if disabled
 419:Core/Src/cell_temp_handler.c ****   */
 420:Core/Src/cell_temp_handler.c **** static uint8_t CellTemp_IsADCEnabled(uint8_t adc_index)
 421:Core/Src/cell_temp_handler.c **** {
  29              		.loc 1 421 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
 422:Core/Src/cell_temp_handler.c ****     if (adc_index >= NUM_ADC_CHANNELS) {
  34              		.loc 1 422 5 view .LVU1
  35              		.loc 1 422 8 is_stmt 0 view .LVU2
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccXf3slz.s 			page 9


  36 0000 0628     		cmp	r0, #6
  37 0002 02D8     		bhi	.L3
 423:Core/Src/cell_temp_handler.c ****         return 0;
 424:Core/Src/cell_temp_handler.c ****     }
 425:Core/Src/cell_temp_handler.c ****     return adc_channel_enabled[adc_index];
  38              		.loc 1 425 5 is_stmt 1 view .LVU3
  39              		.loc 1 425 31 is_stmt 0 view .LVU4
  40 0004 024B     		ldr	r3, .L4
  41 0006 185C     		ldrb	r0, [r3, r0]	@ zero_extendqisi2
  42              	.LVL1:
  43              		.loc 1 425 31 view .LVU5
  44 0008 7047     		bx	lr
  45              	.LVL2:
  46              	.L3:
 423:Core/Src/cell_temp_handler.c ****         return 0;
  47              		.loc 1 423 16 view .LVU6
  48 000a 0020     		movs	r0, #0
  49              	.LVL3:
 426:Core/Src/cell_temp_handler.c **** }
  50              		.loc 1 426 1 view .LVU7
  51 000c 7047     		bx	lr
  52              	.L5:
  53 000e 00BF     		.align	2
  54              	.L4:
  55 0010 00000000 		.word	adc_channel_enabled
  56              		.cfi_endproc
  57              	.LFE299:
  59              		.section	.text.CellTemp_ConfigureADCChannel,"ax",%progbits
  60              		.align	1
  61              		.syntax unified
  62              		.thumb
  63              		.thumb_func
  65              	CellTemp_ConfigureADCChannel:
  66              	.LVL4:
  67              	.LFB293:
  81:Core/Src/cell_temp_handler.c ****     ADC_ChannelConfTypeDef sConfig = {0};
  68              		.loc 1 81 1 is_stmt 1 view -0
  69              		.cfi_startproc
  70              		@ args = 0, pretend = 0, frame = 24
  71              		@ frame_needed = 0, uses_anonymous_args = 0
  81:Core/Src/cell_temp_handler.c ****     ADC_ChannelConfTypeDef sConfig = {0};
  72              		.loc 1 81 1 is_stmt 0 view .LVU9
  73 0000 00B5     		push	{lr}
  74              		.cfi_def_cfa_offset 4
  75              		.cfi_offset 14, -4
  76 0002 87B0     		sub	sp, sp, #28
  77              		.cfi_def_cfa_offset 32
  82:Core/Src/cell_temp_handler.c ****     
  78              		.loc 1 82 5 is_stmt 1 view .LVU10
  82:Core/Src/cell_temp_handler.c ****     
  79              		.loc 1 82 28 is_stmt 0 view .LVU11
  80 0004 6946     		mov	r1, sp
  81 0006 0023     		movs	r3, #0
  82 0008 0093     		str	r3, [sp]
  83 000a 0193     		str	r3, [sp, #4]
  84 000c 0293     		str	r3, [sp, #8]
  85 000e 0393     		str	r3, [sp, #12]
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccXf3slz.s 			page 10


  86 0010 0493     		str	r3, [sp, #16]
  87 0012 0593     		str	r3, [sp, #20]
  84:Core/Src/cell_temp_handler.c ****     sConfig.Rank = ADC_REGULAR_RANK_1;
  88              		.loc 1 84 5 is_stmt 1 view .LVU12
  84:Core/Src/cell_temp_handler.c ****     sConfig.Rank = ADC_REGULAR_RANK_1;
  89              		.loc 1 84 21 is_stmt 0 view .LVU13
  90 0014 0090     		str	r0, [sp]
  85:Core/Src/cell_temp_handler.c ****     sConfig.SamplingTime = ADC_SAMPLETIME_640CYCLES_5; // Long sampling for high impedance
  91              		.loc 1 85 5 is_stmt 1 view .LVU14
  85:Core/Src/cell_temp_handler.c ****     sConfig.SamplingTime = ADC_SAMPLETIME_640CYCLES_5; // Long sampling for high impedance
  92              		.loc 1 85 18 is_stmt 0 view .LVU15
  93 0016 0623     		movs	r3, #6
  94 0018 0193     		str	r3, [sp, #4]
  86:Core/Src/cell_temp_handler.c ****     sConfig.SingleDiff = ADC_SINGLE_ENDED;
  95              		.loc 1 86 5 is_stmt 1 view .LVU16
  86:Core/Src/cell_temp_handler.c ****     sConfig.SingleDiff = ADC_SINGLE_ENDED;
  96              		.loc 1 86 26 is_stmt 0 view .LVU17
  97 001a 0723     		movs	r3, #7
  98 001c 0293     		str	r3, [sp, #8]
  87:Core/Src/cell_temp_handler.c ****     sConfig.OffsetNumber = ADC_OFFSET_NONE;
  99              		.loc 1 87 5 is_stmt 1 view .LVU18
  87:Core/Src/cell_temp_handler.c ****     sConfig.OffsetNumber = ADC_OFFSET_NONE;
 100              		.loc 1 87 24 is_stmt 0 view .LVU19
 101 001e 7F23     		movs	r3, #127
 102 0020 0393     		str	r3, [sp, #12]
  88:Core/Src/cell_temp_handler.c ****     sConfig.Offset = 0;
 103              		.loc 1 88 5 is_stmt 1 view .LVU20
  88:Core/Src/cell_temp_handler.c ****     sConfig.Offset = 0;
 104              		.loc 1 88 26 is_stmt 0 view .LVU21
 105 0022 0423     		movs	r3, #4
 106 0024 0493     		str	r3, [sp, #16]
  89:Core/Src/cell_temp_handler.c ****     
 107              		.loc 1 89 5 is_stmt 1 view .LVU22
  91:Core/Src/cell_temp_handler.c **** }
 108              		.loc 1 91 5 view .LVU23
  91:Core/Src/cell_temp_handler.c **** }
 109              		.loc 1 91 12 is_stmt 0 view .LVU24
 110 0026 0348     		ldr	r0, .L8
 111              	.LVL5:
  91:Core/Src/cell_temp_handler.c **** }
 112              		.loc 1 91 12 view .LVU25
 113 0028 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 114              	.LVL6:
  92:Core/Src/cell_temp_handler.c **** 
 115              		.loc 1 92 1 view .LVU26
 116 002c 07B0     		add	sp, sp, #28
 117              		.cfi_def_cfa_offset 4
 118              		@ sp needed
 119 002e 5DF804FB 		ldr	pc, [sp], #4
 120              	.L9:
 121 0032 00BF     		.align	2
 122              	.L8:
 123 0034 00000000 		.word	hadc1
 124              		.cfi_endproc
 125              	.LFE293:
 127              		.section	.text.CellTemp_SendTemperatureMessage,"ax",%progbits
 128              		.align	1
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccXf3slz.s 			page 11


 129              		.syntax unified
 130              		.thumb
 131              		.thumb_func
 133              	CellTemp_SendTemperatureMessage:
 134              	.LVL7:
 135              	.LFB300:
 427:Core/Src/cell_temp_handler.c **** 
 428:Core/Src/cell_temp_handler.c **** /**
 429:Core/Src/cell_temp_handler.c ****   * @brief  Send single temperature CAN message
 430:Core/Src/cell_temp_handler.c ****   * @param  msg_index: Message index (0-13, for 14 messages total)
 431:Core/Src/cell_temp_handler.c ****   * @param  start_therm_idx: Starting thermistor index
 432:Core/Src/cell_temp_handler.c ****   * @retval HAL_StatusTypeDef
 433:Core/Src/cell_temp_handler.c ****   */
 434:Core/Src/cell_temp_handler.c **** static HAL_StatusTypeDef CellTemp_SendTemperatureMessage(uint8_t msg_index, uint8_t start_therm_idx
 435:Core/Src/cell_temp_handler.c **** {
 136              		.loc 1 435 1 is_stmt 1 view -0
 137              		.cfi_startproc
 138              		@ args = 0, pretend = 0, frame = 8
 139              		@ frame_needed = 0, uses_anonymous_args = 0
 140              		.loc 1 435 1 is_stmt 0 view .LVU28
 141 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 142              		.cfi_def_cfa_offset 20
 143              		.cfi_offset 4, -20
 144              		.cfi_offset 5, -16
 145              		.cfi_offset 6, -12
 146              		.cfi_offset 7, -8
 147              		.cfi_offset 14, -4
 148 0002 83B0     		sub	sp, sp, #12
 149              		.cfi_def_cfa_offset 32
 150 0004 0646     		mov	r6, r0
 151 0006 0D46     		mov	r5, r1
 436:Core/Src/cell_temp_handler.c ****     uint8_t TxData[8];
 152              		.loc 1 436 5 is_stmt 1 view .LVU29
 437:Core/Src/cell_temp_handler.c ****     
 438:Core/Src/cell_temp_handler.c ****     // Check if this message corresponds to a disabled ADC channel
 439:Core/Src/cell_temp_handler.c ****     // Each message covers 4 thermistors, determine which ADC channel(s) it uses
 440:Core/Src/cell_temp_handler.c ****     uint8_t first_adc = start_therm_idx / MUX_CHANNELS;
 153              		.loc 1 440 5 view .LVU30
 154              		.loc 1 440 13 is_stmt 0 view .LVU31
 155 0008 CC08     		lsrs	r4, r1, #3
 156              	.LVL8:
 441:Core/Src/cell_temp_handler.c ****     uint8_t last_adc = (start_therm_idx + 3) / MUX_CHANNELS;
 157              		.loc 1 441 5 is_stmt 1 view .LVU32
 158              		.loc 1 441 46 is_stmt 0 view .LVU33
 159 000a CF1C     		adds	r7, r1, #3
 160              		.loc 1 441 13 view .LVU34
 161 000c FF08     		lsrs	r7, r7, #3
 162              	.LVL9:
 442:Core/Src/cell_temp_handler.c ****     
 443:Core/Src/cell_temp_handler.c ****     // Skip message if all ADC channels for this message are disabled
 444:Core/Src/cell_temp_handler.c ****     uint8_t any_enabled = 0;
 163              		.loc 1 444 5 is_stmt 1 view .LVU35
 445:Core/Src/cell_temp_handler.c ****     for (uint8_t adc = first_adc; adc <= last_adc && adc < NUM_ADC_CHANNELS; adc++) {
 164              		.loc 1 445 5 view .LVU36
 165              	.LBB2:
 166              		.loc 1 445 10 view .LVU37
 167              		.loc 1 445 5 is_stmt 0 view .LVU38
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccXf3slz.s 			page 12


 168 000e 01E0     		b	.L12
 169              	.LVL10:
 170              	.L29:
 171              		.loc 1 445 81 is_stmt 1 discriminator 2 view .LVU39
 172 0010 0134     		adds	r4, r4, #1
 173              	.LVL11:
 174              		.loc 1 445 81 is_stmt 0 discriminator 2 view .LVU40
 175 0012 E4B2     		uxtb	r4, r4
 176              	.LVL12:
 177              	.L12:
 178              		.loc 1 445 51 is_stmt 1 discriminator 1 view .LVU41
 179 0014 BC42     		cmp	r4, r7
 180 0016 0AD8     		bhi	.L21
 181              		.loc 1 445 51 is_stmt 0 discriminator 3 view .LVU42
 182 0018 062C     		cmp	r4, #6
 183 001a 06D8     		bhi	.L28
 446:Core/Src/cell_temp_handler.c ****         if (CellTemp_IsADCEnabled(adc)) {
 184              		.loc 1 446 9 is_stmt 1 view .LVU43
 185              		.loc 1 446 13 is_stmt 0 view .LVU44
 186 001c 2046     		mov	r0, r4
 187 001e FFF7FEFF 		bl	CellTemp_IsADCEnabled
 188              	.LVL13:
 189              		.loc 1 446 12 discriminator 1 view .LVU45
 190 0022 0028     		cmp	r0, #0
 191 0024 F4D0     		beq	.L29
 447:Core/Src/cell_temp_handler.c ****             any_enabled = 1;
 192              		.loc 1 447 25 view .LVU46
 193 0026 0120     		movs	r0, #1
 194 0028 02E0     		b	.L13
 195              	.L28:
 196              	.LBE2:
 444:Core/Src/cell_temp_handler.c ****     for (uint8_t adc = first_adc; adc <= last_adc && adc < NUM_ADC_CHANNELS; adc++) {
 197              		.loc 1 444 13 view .LVU47
 198 002a 0020     		movs	r0, #0
 199              	.LBB3:
 200 002c 00E0     		b	.L13
 201              	.L21:
 202              	.LBE3:
 203 002e 0020     		movs	r0, #0
 204              	.L13:
 205              	.LVL14:
 448:Core/Src/cell_temp_handler.c ****             break;
 449:Core/Src/cell_temp_handler.c ****         }
 450:Core/Src/cell_temp_handler.c ****     }
 451:Core/Src/cell_temp_handler.c ****     
 452:Core/Src/cell_temp_handler.c ****     if (!any_enabled) {
 206              		.loc 1 452 5 is_stmt 1 view .LVU48
 207              		.loc 1 452 8 is_stmt 0 view .LVU49
 208 0030 0028     		cmp	r0, #0
 209 0032 3DD0     		beq	.L15
 210              	.LBB4:
 453:Core/Src/cell_temp_handler.c ****         return HAL_OK; // Skip sending this message
 454:Core/Src/cell_temp_handler.c ****     }
 455:Core/Src/cell_temp_handler.c ****     
 456:Core/Src/cell_temp_handler.c ****     // Prepare CAN message with 4 thermistor readings per message
 457:Core/Src/cell_temp_handler.c ****     // Temperature format: temp_celsius * 10 (0.1°C resolution), little endian
 458:Core/Src/cell_temp_handler.c ****     
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccXf3slz.s 			page 13


 459:Core/Src/cell_temp_handler.c ****     for (uint8_t i = 0; i < 4; i++) {
 211              		.loc 1 459 18 view .LVU50
 212 0034 0024     		movs	r4, #0
 213              	.LVL15:
 214              		.loc 1 459 18 view .LVU51
 215 0036 0DE0     		b	.L16
 216              	.LVL16:
 217              	.L22:
 218              	.LBB5:
 460:Core/Src/cell_temp_handler.c ****         uint8_t therm_idx = start_therm_idx + i;
 461:Core/Src/cell_temp_handler.c ****         int16_t temp_data = 0x8000; // Default invalid temperature marker
 219              		.loc 1 461 17 view .LVU52
 220 0038 1E4B     		ldr	r3, .L31
 221              	.LVL17:
 222              	.L17:
 462:Core/Src/cell_temp_handler.c ****         
 463:Core/Src/cell_temp_handler.c ****         // Check if this thermistor's ADC is enabled
 464:Core/Src/cell_temp_handler.c ****         if (therm_idx < TOTAL_THERMISTORS) {
 465:Core/Src/cell_temp_handler.c ****             uint8_t therm_adc = therm_idx / MUX_CHANNELS;
 466:Core/Src/cell_temp_handler.c ****             if (CellTemp_IsADCEnabled(therm_adc) && 
 467:Core/Src/cell_temp_handler.c ****                 temp_state.thermistors[therm_idx].temperature > -126.0f) {
 468:Core/Src/cell_temp_handler.c ****                 temp_data = (int16_t)(temp_state.thermistors[therm_idx].temperature * 10.0f);
 469:Core/Src/cell_temp_handler.c ****             }
 470:Core/Src/cell_temp_handler.c ****         }
 471:Core/Src/cell_temp_handler.c ****         
 472:Core/Src/cell_temp_handler.c ****         // Pack temperature data (little endian)
 473:Core/Src/cell_temp_handler.c ****         TxData[i * 2] = temp_data & 0xFF;         // LSB
 223              		.loc 1 473 9 is_stmt 1 view .LVU53
 224              		.loc 1 473 18 is_stmt 0 view .LVU54
 225 003a 6200     		lsls	r2, r4, #1
 226              		.loc 1 473 23 view .LVU55
 227 003c 02A9     		add	r1, sp, #8
 228 003e 01EB4401 		add	r1, r1, r4, lsl #1
 229 0042 01F8083C 		strb	r3, [r1, #-8]
 474:Core/Src/cell_temp_handler.c ****         TxData[i * 2 + 1] = (temp_data >> 8) & 0xFF; // MSB
 230              		.loc 1 474 9 is_stmt 1 view .LVU56
 231              		.loc 1 474 27 is_stmt 0 view .LVU57
 232 0046 0932     		adds	r2, r2, #9
 233 0048 6A44     		add	r2, sp, r2
 234 004a 1B12     		asrs	r3, r3, #8
 235              	.LVL18:
 236              		.loc 1 474 27 view .LVU58
 237 004c 02F8083C 		strb	r3, [r2, #-8]
 238              	.LBE5:
 459:Core/Src/cell_temp_handler.c ****         uint8_t therm_idx = start_therm_idx + i;
 239              		.loc 1 459 33 is_stmt 1 discriminator 2 view .LVU59
 240 0050 0134     		adds	r4, r4, #1
 241              	.LVL19:
 459:Core/Src/cell_temp_handler.c ****         uint8_t therm_idx = start_therm_idx + i;
 242              		.loc 1 459 33 is_stmt 0 discriminator 2 view .LVU60
 243 0052 E4B2     		uxtb	r4, r4
 244              	.LVL20:
 245              	.L16:
 459:Core/Src/cell_temp_handler.c ****         uint8_t therm_idx = start_therm_idx + i;
 246              		.loc 1 459 27 is_stmt 1 discriminator 1 view .LVU61
 247 0054 032C     		cmp	r4, #3
 248 0056 23D8     		bhi	.L30
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccXf3slz.s 			page 14


 249              	.LBB7:
 460:Core/Src/cell_temp_handler.c ****         int16_t temp_data = 0x8000; // Default invalid temperature marker
 250              		.loc 1 460 9 view .LVU62
 460:Core/Src/cell_temp_handler.c ****         int16_t temp_data = 0x8000; // Default invalid temperature marker
 251              		.loc 1 460 17 is_stmt 0 view .LVU63
 252 0058 6719     		adds	r7, r4, r5
 253 005a FFB2     		uxtb	r7, r7
 254              	.LVL21:
 461:Core/Src/cell_temp_handler.c ****         
 255              		.loc 1 461 9 is_stmt 1 view .LVU64
 464:Core/Src/cell_temp_handler.c ****             uint8_t therm_adc = therm_idx / MUX_CHANNELS;
 256              		.loc 1 464 9 view .LVU65
 464:Core/Src/cell_temp_handler.c ****             uint8_t therm_adc = therm_idx / MUX_CHANNELS;
 257              		.loc 1 464 12 is_stmt 0 view .LVU66
 258 005c 372F     		cmp	r7, #55
 259 005e EBD8     		bhi	.L22
 260              	.LBB6:
 465:Core/Src/cell_temp_handler.c ****             if (CellTemp_IsADCEnabled(therm_adc) && 
 261              		.loc 1 465 13 is_stmt 1 view .LVU67
 262              	.LVL22:
 466:Core/Src/cell_temp_handler.c ****                 temp_state.thermistors[therm_idx].temperature > -126.0f) {
 263              		.loc 1 466 13 view .LVU68
 466:Core/Src/cell_temp_handler.c ****                 temp_state.thermistors[therm_idx].temperature > -126.0f) {
 264              		.loc 1 466 17 is_stmt 0 view .LVU69
 265 0060 F808     		lsrs	r0, r7, #3
 266 0062 FFF7FEFF 		bl	CellTemp_IsADCEnabled
 267              	.LVL23:
 466:Core/Src/cell_temp_handler.c ****                 temp_state.thermistors[therm_idx].temperature > -126.0f) {
 268              		.loc 1 466 16 discriminator 1 view .LVU70
 269 0066 B8B1     		cbz	r0, .L23
 467:Core/Src/cell_temp_handler.c ****                 temp_data = (int16_t)(temp_state.thermistors[therm_idx].temperature * 10.0f);
 270              		.loc 1 467 50 view .LVU71
 271 0068 07EB4707 		add	r7, r7, r7, lsl #1
 272              	.LVL24:
 467:Core/Src/cell_temp_handler.c ****                 temp_data = (int16_t)(temp_state.thermistors[therm_idx].temperature * 10.0f);
 273              		.loc 1 467 50 view .LVU72
 274 006c 124B     		ldr	r3, .L31+4
 275 006e 03EBC703 		add	r3, r3, r7, lsl #3
 276 0072 D3ED017A 		vldr.32	s15, [r3, #4]
 466:Core/Src/cell_temp_handler.c ****                 temp_state.thermistors[therm_idx].temperature > -126.0f) {
 277              		.loc 1 466 50 discriminator 1 view .LVU73
 278 0076 9FED117A 		vldr.32	s14, .L31+8
 279 007a F4EEC77A 		vcmpe.f32	s15, s14
 280 007e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 281 0082 0BDD     		ble	.L26
 468:Core/Src/cell_temp_handler.c ****             }
 282              		.loc 1 468 17 is_stmt 1 view .LVU74
 468:Core/Src/cell_temp_handler.c ****             }
 283              		.loc 1 468 85 is_stmt 0 view .LVU75
 284 0084 B2EE047A 		vmov.f32	s14, #1.0e+1
 285 0088 67EE877A 		vmul.f32	s15, s15, s14
 468:Core/Src/cell_temp_handler.c ****             }
 286              		.loc 1 468 27 view .LVU76
 287 008c FDEEE77A 		vcvt.s32.f32	s15, s15
 288 0090 17EE903A 		vmov	r3, s15	@ int
 289 0094 1BB2     		sxth	r3, r3
 290              	.LVL25:
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccXf3slz.s 			page 15


 468:Core/Src/cell_temp_handler.c ****             }
 291              		.loc 1 468 27 view .LVU77
 292 0096 D0E7     		b	.L17
 293              	.LVL26:
 294              	.L23:
 468:Core/Src/cell_temp_handler.c ****             }
 295              		.loc 1 468 27 view .LVU78
 296              	.LBE6:
 461:Core/Src/cell_temp_handler.c ****         
 297              		.loc 1 461 17 view .LVU79
 298 0098 064B     		ldr	r3, .L31
 299 009a CEE7     		b	.L17
 300              	.LVL27:
 301              	.L26:
 461:Core/Src/cell_temp_handler.c ****         
 302              		.loc 1 461 17 view .LVU80
 303 009c 054B     		ldr	r3, .L31
 304 009e CCE7     		b	.L17
 305              	.LVL28:
 306              	.L30:
 461:Core/Src/cell_temp_handler.c ****         
 307              		.loc 1 461 17 view .LVU81
 308              	.LBE7:
 309              	.LBE4:
 475:Core/Src/cell_temp_handler.c ****     }
 476:Core/Src/cell_temp_handler.c ****     
 477:Core/Src/cell_temp_handler.c ****     // Send via CAN Manager (non-blocking, queued)
 478:Core/Src/cell_temp_handler.c ****     // CAN_TEMP_ID already has module offset applied from Config_Init()
 479:Core/Src/cell_temp_handler.c ****     uint32_t can_id = CAN_TEMP_ID + msg_index;
 310              		.loc 1 479 5 is_stmt 1 view .LVU82
 311              		.loc 1 479 35 is_stmt 0 view .LVU83
 312 00a0 074B     		ldr	r3, .L31+12
 313 00a2 1868     		ldr	r0, [r3]
 314              	.LVL29:
 480:Core/Src/cell_temp_handler.c ****     return CAN_SendMessage(can_id, TxData, 8, CAN_PRIORITY_NORMAL);
 315              		.loc 1 480 5 is_stmt 1 view .LVU84
 316              		.loc 1 480 12 is_stmt 0 view .LVU85
 317 00a4 0223     		movs	r3, #2
 318 00a6 0822     		movs	r2, #8
 319 00a8 6946     		mov	r1, sp
 320 00aa 3044     		add	r0, r0, r6
 321              	.LVL30:
 322              		.loc 1 480 12 view .LVU86
 323 00ac FFF7FEFF 		bl	CAN_SendMessage
 324              	.LVL31:
 325              	.L15:
 481:Core/Src/cell_temp_handler.c **** }
 326              		.loc 1 481 1 view .LVU87
 327 00b0 03B0     		add	sp, sp, #12
 328              		.cfi_def_cfa_offset 20
 329              		@ sp needed
 330 00b2 F0BD     		pop	{r4, r5, r6, r7, pc}
 331              	.LVL32:
 332              	.L32:
 333              		.loc 1 481 1 view .LVU88
 334              		.align	2
 335              	.L31:
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccXf3slz.s 			page 16


 336 00b4 0080FFFF 		.word	-32768
 337 00b8 00000000 		.word	temp_state
 338 00bc 0000FCC2 		.word	-1023672320
 339 00c0 00000000 		.word	CAN_TEMP_ID
 340              		.cfi_endproc
 341              	.LFE300:
 343              		.section	.text.CellTemp_Init,"ax",%progbits
 344              		.align	1
 345              		.global	CellTemp_Init
 346              		.syntax unified
 347              		.thumb
 348              		.thumb_func
 350              	CellTemp_Init:
 351              	.LFB292:
  50:Core/Src/cell_temp_handler.c ****     // Initialize state structure
 352              		.loc 1 50 1 is_stmt 1 view -0
 353              		.cfi_startproc
 354              		@ args = 0, pretend = 0, frame = 0
 355              		@ frame_needed = 0, uses_anonymous_args = 0
 356 0000 10B5     		push	{r4, lr}
 357              		.cfi_def_cfa_offset 8
 358              		.cfi_offset 4, -8
 359              		.cfi_offset 14, -4
  52:Core/Src/cell_temp_handler.c **** 
 360              		.loc 1 52 5 view .LVU90
 361 0002 40F24C52 		movw	r2, #1356
 362 0006 0021     		movs	r1, #0
 363 0008 1A48     		ldr	r0, .L37
 364 000a FFF7FEFF 		bl	memset
 365              	.LVL33:
  55:Core/Src/cell_temp_handler.c ****         temp_state.thermistors[i].adc_index = i / MUX_CHANNELS;
 366              		.loc 1 55 5 view .LVU91
 367              	.LBB8:
  55:Core/Src/cell_temp_handler.c ****         temp_state.thermistors[i].adc_index = i / MUX_CHANNELS;
 368              		.loc 1 55 10 view .LVU92
  55:Core/Src/cell_temp_handler.c ****         temp_state.thermistors[i].adc_index = i / MUX_CHANNELS;
 369              		.loc 1 55 18 is_stmt 0 view .LVU93
 370 000e 0023     		movs	r3, #0
  55:Core/Src/cell_temp_handler.c ****         temp_state.thermistors[i].adc_index = i / MUX_CHANNELS;
 371              		.loc 1 55 5 view .LVU94
 372 0010 19E0     		b	.L34
 373              	.LVL34:
 374              	.L35:
  56:Core/Src/cell_temp_handler.c ****         temp_state.thermistors[i].mux_channel = i % MUX_CHANNELS;
 375              		.loc 1 56 9 is_stmt 1 view .LVU95
  56:Core/Src/cell_temp_handler.c ****         temp_state.thermistors[i].mux_channel = i % MUX_CHANNELS;
 376              		.loc 1 56 45 is_stmt 0 view .LVU96
 377 0012 184A     		ldr	r2, .L37
 378 0014 03EB4301 		add	r1, r3, r3, lsl #1
 379 0018 C800     		lsls	r0, r1, #3
 380 001a 1118     		adds	r1, r2, r0
 381 001c 4FEAD30C 		lsr	ip, r3, #3
 382 0020 02F800C0 		strb	ip, [r2, r0]
  57:Core/Src/cell_temp_handler.c ****         temp_state.thermistors[i].temperature = -127.0f; // Invalid temperature marker
 383              		.loc 1 57 9 is_stmt 1 view .LVU97
  57:Core/Src/cell_temp_handler.c ****         temp_state.thermistors[i].temperature = -127.0f; // Invalid temperature marker
 384              		.loc 1 57 51 is_stmt 0 view .LVU98
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccXf3slz.s 			page 17


 385 0024 03F00700 		and	r0, r3, #7
  57:Core/Src/cell_temp_handler.c ****         temp_state.thermistors[i].temperature = -127.0f; // Invalid temperature marker
 386              		.loc 1 57 47 view .LVU99
 387 0028 4870     		strb	r0, [r1, #1]
  58:Core/Src/cell_temp_handler.c ****         temp_state.thermistors[i].raw_adc = 0;
 388              		.loc 1 58 9 is_stmt 1 view .LVU100
  58:Core/Src/cell_temp_handler.c ****         temp_state.thermistors[i].raw_adc = 0;
 389              		.loc 1 58 47 is_stmt 0 view .LVU101
 390 002a 1348     		ldr	r0, .L37+4
 391 002c 4860     		str	r0, [r1, #4]	@ float
  59:Core/Src/cell_temp_handler.c ****         temp_state.thermistors[i].last_read_time = 0;
 392              		.loc 1 59 9 is_stmt 1 view .LVU102
  59:Core/Src/cell_temp_handler.c ****         temp_state.thermistors[i].last_read_time = 0;
 393              		.loc 1 59 43 is_stmt 0 view .LVU103
 394 002e 0020     		movs	r0, #0
 395 0030 0881     		strh	r0, [r1, #8]	@ movhi
  60:Core/Src/cell_temp_handler.c ****         temp_state.thermistors[i].adc_accumulator = 0;
 396              		.loc 1 60 9 is_stmt 1 view .LVU104
  60:Core/Src/cell_temp_handler.c ****         temp_state.thermistors[i].adc_accumulator = 0;
 397              		.loc 1 60 50 is_stmt 0 view .LVU105
 398 0032 C860     		str	r0, [r1, #12]
  61:Core/Src/cell_temp_handler.c ****         temp_state.thermistors[i].sample_count = 0;
 399              		.loc 1 61 9 is_stmt 1 view .LVU106
  61:Core/Src/cell_temp_handler.c ****         temp_state.thermistors[i].sample_count = 0;
 400              		.loc 1 61 51 is_stmt 0 view .LVU107
 401 0034 0861     		str	r0, [r1, #16]
  62:Core/Src/cell_temp_handler.c ****     }
 402              		.loc 1 62 9 is_stmt 1 view .LVU108
  62:Core/Src/cell_temp_handler.c ****     }
 403              		.loc 1 62 48 is_stmt 0 view .LVU109
 404 0036 03EB430C 		add	ip, r3, r3, lsl #1
 405 003a 4FEACC01 		lsl	r1, ip, #3
 406 003e 0A44     		add	r2, r2, r1
 407 0040 9082     		strh	r0, [r2, #20]	@ movhi
  55:Core/Src/cell_temp_handler.c ****         temp_state.thermistors[i].adc_index = i / MUX_CHANNELS;
 408              		.loc 1 55 49 is_stmt 1 discriminator 3 view .LVU110
 409 0042 0133     		adds	r3, r3, #1
 410              	.LVL35:
  55:Core/Src/cell_temp_handler.c ****         temp_state.thermistors[i].adc_index = i / MUX_CHANNELS;
 411              		.loc 1 55 49 is_stmt 0 discriminator 3 view .LVU111
 412 0044 DBB2     		uxtb	r3, r3
 413              	.LVL36:
 414              	.L34:
  55:Core/Src/cell_temp_handler.c ****         temp_state.thermistors[i].adc_index = i / MUX_CHANNELS;
 415              		.loc 1 55 27 is_stmt 1 discriminator 1 view .LVU112
 416 0046 372B     		cmp	r3, #55
 417 0048 E3D9     		bls	.L35
 418              	.LBE8:
  68:Core/Src/cell_temp_handler.c ****     HAL_GPIO_WritePin(MUX_SIG2_PORT, MUX_SIG2_PIN, GPIO_PIN_RESET);
 419              		.loc 1 68 5 view .LVU113
 420 004a 0C4C     		ldr	r4, .L37+8
 421 004c 0022     		movs	r2, #0
 422 004e 0221     		movs	r1, #2
 423 0050 2046     		mov	r0, r4
 424 0052 FFF7FEFF 		bl	HAL_GPIO_WritePin
 425              	.LVL37:
  69:Core/Src/cell_temp_handler.c ****     HAL_GPIO_WritePin(MUX_SIG3_PORT, MUX_SIG3_PIN, GPIO_PIN_RESET);
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccXf3slz.s 			page 18


 426              		.loc 1 69 5 view .LVU114
 427 0056 0022     		movs	r2, #0
 428 0058 4FF48071 		mov	r1, #256
 429 005c 4FF09040 		mov	r0, #1207959552
 430 0060 FFF7FEFF 		bl	HAL_GPIO_WritePin
 431              	.LVL38:
  70:Core/Src/cell_temp_handler.c **** 
 432              		.loc 1 70 5 view .LVU115
 433 0064 0022     		movs	r2, #0
 434 0066 2021     		movs	r1, #32
 435 0068 2046     		mov	r0, r4
 436 006a FFF7FEFF 		bl	HAL_GPIO_WritePin
 437              	.LVL39:
  72:Core/Src/cell_temp_handler.c **** }
 438              		.loc 1 72 5 view .LVU116
  73:Core/Src/cell_temp_handler.c **** 
 439              		.loc 1 73 1 is_stmt 0 view .LVU117
 440 006e 0020     		movs	r0, #0
 441 0070 10BD     		pop	{r4, pc}
 442              	.L38:
 443 0072 00BF     		.align	2
 444              	.L37:
 445 0074 00000000 		.word	temp_state
 446 0078 0000FEC2 		.word	-1023541248
 447 007c 00040048 		.word	1207960576
 448              		.cfi_endproc
 449              	.LFE292:
 451              		.section	.text.CellTemp_ReadADC,"ax",%progbits
 452              		.align	1
 453              		.global	CellTemp_ReadADC
 454              		.syntax unified
 455              		.thumb
 456              		.thumb_func
 458              	CellTemp_ReadADC:
 459              	.LVL40:
 460              	.LFB294:
 100:Core/Src/cell_temp_handler.c ****     uint16_t adc_value = 0;
 461              		.loc 1 100 1 is_stmt 1 view -0
 462              		.cfi_startproc
 463              		@ args = 0, pretend = 0, frame = 0
 464              		@ frame_needed = 0, uses_anonymous_args = 0
 100:Core/Src/cell_temp_handler.c ****     uint16_t adc_value = 0;
 465              		.loc 1 100 1 is_stmt 0 view .LVU119
 466 0000 10B5     		push	{r4, lr}
 467              		.cfi_def_cfa_offset 8
 468              		.cfi_offset 4, -8
 469              		.cfi_offset 14, -4
 101:Core/Src/cell_temp_handler.c ****     
 470              		.loc 1 101 5 is_stmt 1 view .LVU120
 471              	.LVL41:
 104:Core/Src/cell_temp_handler.c ****         return 0;
 472              		.loc 1 104 5 view .LVU121
 104:Core/Src/cell_temp_handler.c ****         return 0;
 473              		.loc 1 104 9 is_stmt 0 view .LVU122
 474 0002 FFF7FEFF 		bl	CellTemp_ConfigureADCChannel
 475              	.LVL42:
 104:Core/Src/cell_temp_handler.c ****         return 0;
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccXf3slz.s 			page 19


 476              		.loc 1 104 8 discriminator 1 view .LVU123
 477 0006 10B1     		cbz	r0, .L46
 105:Core/Src/cell_temp_handler.c ****     }
 478              		.loc 1 105 16 view .LVU124
 479 0008 0024     		movs	r4, #0
 480              	.LVL43:
 481              	.L40:
 120:Core/Src/cell_temp_handler.c **** 
 482              		.loc 1 120 1 view .LVU125
 483 000a 2046     		mov	r0, r4
 484 000c 10BD     		pop	{r4, pc}
 485              	.LVL44:
 486              	.L46:
 109:Core/Src/cell_temp_handler.c ****         // Wait for conversion to complete
 487              		.loc 1 109 5 is_stmt 1 view .LVU126
 109:Core/Src/cell_temp_handler.c ****         // Wait for conversion to complete
 488              		.loc 1 109 9 is_stmt 0 view .LVU127
 489 000e 0B48     		ldr	r0, .L49
 490 0010 FFF7FEFF 		bl	HAL_ADC_Start
 491              	.LVL45:
 109:Core/Src/cell_temp_handler.c ****         // Wait for conversion to complete
 492              		.loc 1 109 8 discriminator 1 view .LVU128
 493 0014 08B1     		cbz	r0, .L47
 101:Core/Src/cell_temp_handler.c ****     
 494              		.loc 1 101 14 view .LVU129
 495 0016 0024     		movs	r4, #0
 496 0018 F7E7     		b	.L40
 497              	.L47:
 111:Core/Src/cell_temp_handler.c ****             // Get ADC value
 498              		.loc 1 111 9 is_stmt 1 view .LVU130
 111:Core/Src/cell_temp_handler.c ****             // Get ADC value
 499              		.loc 1 111 13 is_stmt 0 view .LVU131
 500 001a 4FF0FF31 		mov	r1, #-1
 501 001e 0748     		ldr	r0, .L49
 502 0020 FFF7FEFF 		bl	HAL_ADC_PollForConversion
 503              	.LVL46:
 111:Core/Src/cell_temp_handler.c ****             // Get ADC value
 504              		.loc 1 111 12 discriminator 1 view .LVU132
 505 0024 20B1     		cbz	r0, .L48
 101:Core/Src/cell_temp_handler.c ****     
 506              		.loc 1 101 14 view .LVU133
 507 0026 0024     		movs	r4, #0
 508              	.LVL47:
 509              	.L41:
 116:Core/Src/cell_temp_handler.c ****     }
 510              		.loc 1 116 9 is_stmt 1 view .LVU134
 511 0028 0448     		ldr	r0, .L49
 512 002a FFF7FEFF 		bl	HAL_ADC_Stop
 513              	.LVL48:
 514 002e ECE7     		b	.L40
 515              	.LVL49:
 516              	.L48:
 113:Core/Src/cell_temp_handler.c ****         }
 517              		.loc 1 113 13 view .LVU135
 113:Core/Src/cell_temp_handler.c ****         }
 518              		.loc 1 113 25 is_stmt 0 view .LVU136
 519 0030 0248     		ldr	r0, .L49
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccXf3slz.s 			page 20


 520 0032 FFF7FEFF 		bl	HAL_ADC_GetValue
 521              	.LVL50:
 113:Core/Src/cell_temp_handler.c ****         }
 522              		.loc 1 113 23 discriminator 1 view .LVU137
 523 0036 84B2     		uxth	r4, r0
 524              	.LVL51:
 113:Core/Src/cell_temp_handler.c ****         }
 525              		.loc 1 113 23 discriminator 1 view .LVU138
 526 0038 F6E7     		b	.L41
 527              	.L50:
 528 003a 00BF     		.align	2
 529              	.L49:
 530 003c 00000000 		.word	hadc1
 531              		.cfi_endproc
 532              	.LFE294:
 534              		.section	.text.CellTemp_SetMuxChannel,"ax",%progbits
 535              		.align	1
 536              		.global	CellTemp_SetMuxChannel
 537              		.syntax unified
 538              		.thumb
 539              		.thumb_func
 541              	CellTemp_SetMuxChannel:
 542              	.LVL52:
 543              	.LFB295:
 128:Core/Src/cell_temp_handler.c ****     // Validate channel range
 544              		.loc 1 128 1 is_stmt 1 view -0
 545              		.cfi_startproc
 546              		@ args = 0, pretend = 0, frame = 0
 547              		@ frame_needed = 0, uses_anonymous_args = 0
 130:Core/Src/cell_temp_handler.c ****         return;
 548              		.loc 1 130 5 view .LVU140
 130:Core/Src/cell_temp_handler.c ****         return;
 549              		.loc 1 130 8 is_stmt 0 view .LVU141
 550 0000 0728     		cmp	r0, #7
 551 0002 33D8     		bhi	.L60
 128:Core/Src/cell_temp_handler.c ****     // Validate channel range
 552              		.loc 1 128 1 view .LVU142
 553 0004 10B5     		push	{r4, lr}
 554              		.cfi_def_cfa_offset 8
 555              		.cfi_offset 4, -8
 556              		.cfi_offset 14, -4
 557 0006 0446     		mov	r4, r0
 139:Core/Src/cell_temp_handler.c ****         HAL_GPIO_WritePin(MUX_SIG1_PORT, MUX_SIG1_PIN, GPIO_PIN_SET);
 558              		.loc 1 139 5 is_stmt 1 view .LVU143
 139:Core/Src/cell_temp_handler.c ****         HAL_GPIO_WritePin(MUX_SIG1_PORT, MUX_SIG1_PIN, GPIO_PIN_SET);
 559              		.loc 1 139 8 is_stmt 0 view .LVU144
 560 0008 10F0010F 		tst	r0, #1
 561 000c 1AD0     		beq	.L53
 140:Core/Src/cell_temp_handler.c ****     } else {
 562              		.loc 1 140 9 is_stmt 1 view .LVU145
 563 000e 0122     		movs	r2, #1
 564 0010 0221     		movs	r1, #2
 565 0012 1748     		ldr	r0, .L63
 566              	.LVL53:
 140:Core/Src/cell_temp_handler.c ****     } else {
 567              		.loc 1 140 9 is_stmt 0 view .LVU146
 568 0014 FFF7FEFF 		bl	HAL_GPIO_WritePin
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccXf3slz.s 			page 21


 569              	.LVL54:
 570              	.L54:
 145:Core/Src/cell_temp_handler.c ****         HAL_GPIO_WritePin(MUX_SIG2_PORT, MUX_SIG2_PIN, GPIO_PIN_SET);
 571              		.loc 1 145 5 is_stmt 1 view .LVU147
 145:Core/Src/cell_temp_handler.c ****         HAL_GPIO_WritePin(MUX_SIG2_PORT, MUX_SIG2_PIN, GPIO_PIN_SET);
 572              		.loc 1 145 8 is_stmt 0 view .LVU148
 573 0018 14F0020F 		tst	r4, #2
 574 001c 18D0     		beq	.L55
 146:Core/Src/cell_temp_handler.c ****     } else {
 575              		.loc 1 146 9 is_stmt 1 view .LVU149
 576 001e 0122     		movs	r2, #1
 577 0020 4FF48071 		mov	r1, #256
 578 0024 4FF09040 		mov	r0, #1207959552
 579 0028 FFF7FEFF 		bl	HAL_GPIO_WritePin
 580              	.LVL55:
 581              	.L56:
 151:Core/Src/cell_temp_handler.c ****         HAL_GPIO_WritePin(MUX_SIG3_PORT, MUX_SIG3_PIN, GPIO_PIN_SET);
 582              		.loc 1 151 5 view .LVU150
 151:Core/Src/cell_temp_handler.c ****         HAL_GPIO_WritePin(MUX_SIG3_PORT, MUX_SIG3_PIN, GPIO_PIN_SET);
 583              		.loc 1 151 8 is_stmt 0 view .LVU151
 584 002c 14F0040F 		tst	r4, #4
 585 0030 16D0     		beq	.L57
 152:Core/Src/cell_temp_handler.c ****     } else {
 586              		.loc 1 152 9 is_stmt 1 view .LVU152
 587 0032 0122     		movs	r2, #1
 588 0034 2021     		movs	r1, #32
 589 0036 0E48     		ldr	r0, .L63
 590 0038 FFF7FEFF 		bl	HAL_GPIO_WritePin
 591              	.LVL56:
 592              	.L58:
 158:Core/Src/cell_temp_handler.c **** }
 593              		.loc 1 158 5 view .LVU153
 594 003c 0220     		movs	r0, #2
 595 003e FFF7FEFF 		bl	osDelay
 596              	.LVL57:
 159:Core/Src/cell_temp_handler.c **** 
 597              		.loc 1 159 1 is_stmt 0 view .LVU154
 598 0042 10BD     		pop	{r4, pc}
 599              	.LVL58:
 600              	.L53:
 142:Core/Src/cell_temp_handler.c ****     }
 601              		.loc 1 142 9 is_stmt 1 view .LVU155
 602 0044 0022     		movs	r2, #0
 603 0046 0221     		movs	r1, #2
 604 0048 0948     		ldr	r0, .L63
 605              	.LVL59:
 142:Core/Src/cell_temp_handler.c ****     }
 606              		.loc 1 142 9 is_stmt 0 view .LVU156
 607 004a FFF7FEFF 		bl	HAL_GPIO_WritePin
 608              	.LVL60:
 609 004e E3E7     		b	.L54
 610              	.L55:
 148:Core/Src/cell_temp_handler.c ****     }
 611              		.loc 1 148 9 is_stmt 1 view .LVU157
 612 0050 0022     		movs	r2, #0
 613 0052 4FF48071 		mov	r1, #256
 614 0056 4FF09040 		mov	r0, #1207959552
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccXf3slz.s 			page 22


 615 005a FFF7FEFF 		bl	HAL_GPIO_WritePin
 616              	.LVL61:
 617 005e E5E7     		b	.L56
 618              	.L57:
 154:Core/Src/cell_temp_handler.c ****     }
 619              		.loc 1 154 9 view .LVU158
 620 0060 0022     		movs	r2, #0
 621 0062 2021     		movs	r1, #32
 622 0064 0248     		ldr	r0, .L63
 623 0066 FFF7FEFF 		bl	HAL_GPIO_WritePin
 624              	.LVL62:
 625 006a E7E7     		b	.L58
 626              	.LVL63:
 627              	.L60:
 628              		.cfi_def_cfa_offset 0
 629              		.cfi_restore 4
 630              		.cfi_restore 14
 154:Core/Src/cell_temp_handler.c ****     }
 631              		.loc 1 154 9 is_stmt 0 view .LVU159
 632 006c 7047     		bx	lr
 633              	.L64:
 634 006e 00BF     		.align	2
 635              	.L63:
 636 0070 00040048 		.word	1207960576
 637              		.cfi_endproc
 638              	.LFE295:
 640              		.section	.text.CellTemp_CalculateTemperature,"ax",%progbits
 641              		.align	1
 642              		.global	CellTemp_CalculateTemperature
 643              		.syntax unified
 644              		.thumb
 645              		.thumb_func
 647              	CellTemp_CalculateTemperature:
 648              	.LVL64:
 649              	.LFB296:
 167:Core/Src/cell_temp_handler.c ****     // Convert ADC value to voltage
 650              		.loc 1 167 1 is_stmt 1 view -0
 651              		.cfi_startproc
 652              		@ args = 0, pretend = 0, frame = 0
 653              		@ frame_needed = 0, uses_anonymous_args = 0
 169:Core/Src/cell_temp_handler.c ****     
 654              		.loc 1 169 5 view .LVU161
 169:Core/Src/cell_temp_handler.c ****     
 655              		.loc 1 169 22 is_stmt 0 view .LVU162
 656 0000 07EE900A 		vmov	s15, r0	@ int
 657 0004 F8EE676A 		vcvt.f32.u32	s13, s15
 169:Core/Src/cell_temp_handler.c ****     
 658              		.loc 1 169 39 view .LVU163
 659 0008 9FED297A 		vldr.32	s14, .L77
 660 000c C6EE877A 		vdiv.f32	s15, s13, s14
 169:Core/Src/cell_temp_handler.c ****     
 661              		.loc 1 169 11 view .LVU164
 662 0010 9FED287A 		vldr.32	s14, .L77+4
 663 0014 67EE877A 		vmul.f32	s15, s15, s14
 664              	.LVL65:
 172:Core/Src/cell_temp_handler.c ****         return -127.0f;  // Return obvious error value
 665              		.loc 1 172 5 is_stmt 1 view .LVU165
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccXf3slz.s 			page 23


 172:Core/Src/cell_temp_handler.c ****         return -127.0f;  // Return obvious error value
 666              		.loc 1 172 8 is_stmt 0 view .LVU166
 667 0018 0928     		cmp	r0, #9
 668 001a 40D9     		bls	.L68
 181:Core/Src/cell_temp_handler.c ****     
 669              		.loc 1 181 5 is_stmt 1 view .LVU167
 183:Core/Src/cell_temp_handler.c ****         r_thermistor = PULLUP_RESISTOR * 100.0f;  // Assume very high resistance
 670              		.loc 1 183 5 view .LVU168
 183:Core/Src/cell_temp_handler.c ****         r_thermistor = PULLUP_RESISTOR * 100.0f;  // Assume very high resistance
 671              		.loc 1 183 8 is_stmt 0 view .LVU169
 672 001c 9FED267A 		vldr.32	s14, .L77+8
 673 0020 F4EEC77A 		vcmpe.f32	s15, s14
 674 0024 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 675 0028 36DA     		bge	.L69
 187:Core/Src/cell_temp_handler.c ****     }
 676              		.loc 1 187 9 is_stmt 1 view .LVU170
 187:Core/Src/cell_temp_handler.c ****     }
 677              		.loc 1 187 33 is_stmt 0 view .LVU171
 678 002a DFED246A 		vldr.32	s13, .L77+12
 679 002e 67EEA66A 		vmul.f32	s13, s15, s13
 187:Core/Src/cell_temp_handler.c ****     }
 680              		.loc 1 187 64 view .LVU172
 681 0032 9FED207A 		vldr.32	s14, .L77+4
 682 0036 77EE677A 		vsub.f32	s15, s14, s15
 683              	.LVL66:
 187:Core/Src/cell_temp_handler.c ****     }
 684              		.loc 1 187 22 view .LVU173
 685 003a 86EEA77A 		vdiv.f32	s14, s13, s15
 686              	.LVL67:
 191:Core/Src/cell_temp_handler.c ****         return 125.0f; // Return maximum temperature for very low resistance
 687              		.loc 1 191 5 is_stmt 1 view .LVU174
 191:Core/Src/cell_temp_handler.c ****         return 125.0f; // Return maximum temperature for very low resistance
 688              		.loc 1 191 8 is_stmt 0 view .LVU175
 689 003e B5EEC07A 		vcmpe.f32	s14, #0
 690 0042 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 691 0046 2DD9     		bls	.L76
 692              	.LVL68:
 693              	.L67:
 167:Core/Src/cell_temp_handler.c ****     // Convert ADC value to voltage
 694              		.loc 1 167 1 view .LVU176
 695 0048 08B5     		push	{r3, lr}
 696              		.cfi_def_cfa_offset 8
 697              		.cfi_offset 3, -8
 698              		.cfi_offset 14, -4
 198:Core/Src/cell_temp_handler.c ****     float temp_kelvin = 1.0f / ((1.0f / REFERENCE_TEMP_K) + (ln_ratio / THERMISTOR_B_VALUE));
 699              		.loc 1 198 5 is_stmt 1 view .LVU177
 198:Core/Src/cell_temp_handler.c ****     float temp_kelvin = 1.0f / ((1.0f / REFERENCE_TEMP_K) + (ln_ratio / THERMISTOR_B_VALUE));
 700              		.loc 1 198 22 is_stmt 0 view .LVU178
 701 004a 9FED1C0A 		vldr.32	s0, .L77+12
 702 004e 87EE000A 		vdiv.f32	s0, s14, s0
 703 0052 FFF7FEFF 		bl	logf
 704              	.LVL69:
 199:Core/Src/cell_temp_handler.c ****     
 705              		.loc 1 199 5 is_stmt 1 view .LVU179
 199:Core/Src/cell_temp_handler.c ****     
 706              		.loc 1 199 71 is_stmt 0 view .LVU180
 707 0056 9FED1A7A 		vldr.32	s14, .L77+16
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccXf3slz.s 			page 24


 708 005a C0EE077A 		vdiv.f32	s15, s0, s14
 199:Core/Src/cell_temp_handler.c ****     
 709              		.loc 1 199 59 view .LVU181
 710 005e 9FED197A 		vldr.32	s14, .L77+20
 711 0062 77EE877A 		vadd.f32	s15, s15, s14
 199:Core/Src/cell_temp_handler.c ****     
 712              		.loc 1 199 11 view .LVU182
 713 0066 B7EE007A 		vmov.f32	s14, #1.0e+0
 714 006a 87EE270A 		vdiv.f32	s0, s14, s15
 715              	.LVL70:
 202:Core/Src/cell_temp_handler.c ****     
 716              		.loc 1 202 5 is_stmt 1 view .LVU183
 202:Core/Src/cell_temp_handler.c ****     
 717              		.loc 1 202 11 is_stmt 0 view .LVU184
 718 006e DFED167A 		vldr.32	s15, .L77+24
 719 0072 30EE670A 		vsub.f32	s0, s0, s15
 720              	.LVL71:
 205:Core/Src/cell_temp_handler.c ****         temp_celsius = -40.0f;
 721              		.loc 1 205 5 is_stmt 1 view .LVU185
 205:Core/Src/cell_temp_handler.c ****         temp_celsius = -40.0f;
 722              		.loc 1 205 8 is_stmt 0 view .LVU186
 723 0076 DFED157A 		vldr.32	s15, .L77+28
 724 007a B4EEE70A 		vcmpe.f32	s0, s15
 725 007e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 726 0082 12D4     		bmi	.L71
 207:Core/Src/cell_temp_handler.c ****         temp_celsius = 125.0f;
 727              		.loc 1 207 12 is_stmt 1 view .LVU187
 207:Core/Src/cell_temp_handler.c ****         temp_celsius = 125.0f;
 728              		.loc 1 207 15 is_stmt 0 view .LVU188
 729 0084 DFED127A 		vldr.32	s15, .L77+32
 730 0088 B4EEE70A 		vcmpe.f32	s0, s15
 731 008c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 732 0090 0DDD     		ble	.L65
 208:Core/Src/cell_temp_handler.c ****     }
 733              		.loc 1 208 22 view .LVU189
 734 0092 9FED0F0A 		vldr.32	s0, .L77+32
 735              	.LVL72:
 208:Core/Src/cell_temp_handler.c ****     }
 736              		.loc 1 208 22 view .LVU190
 737 0096 0AE0     		b	.L65
 738              	.LVL73:
 739              	.L69:
 740              		.cfi_def_cfa_offset 0
 741              		.cfi_restore 3
 742              		.cfi_restore 14
 184:Core/Src/cell_temp_handler.c ****     } else {
 743              		.loc 1 184 22 view .LVU191
 744 0098 9FED0E7A 		vldr.32	s14, .L77+36
 745 009c D4E7     		b	.L67
 746              	.L68:
 173:Core/Src/cell_temp_handler.c ****     }
 747              		.loc 1 173 16 view .LVU192
 748 009e 9FED0E0A 		vldr.32	s0, .L77+40
 749 00a2 7047     		bx	lr
 750              	.LVL74:
 751              	.L76:
 192:Core/Src/cell_temp_handler.c ****     }
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccXf3slz.s 			page 25


 752              		.loc 1 192 16 view .LVU193
 753 00a4 9FED0A0A 		vldr.32	s0, .L77+32
 212:Core/Src/cell_temp_handler.c **** 
 754              		.loc 1 212 1 view .LVU194
 755 00a8 7047     		bx	lr
 756              	.LVL75:
 757              	.L71:
 758              		.cfi_def_cfa_offset 8
 759              		.cfi_offset 3, -8
 760              		.cfi_offset 14, -4
 206:Core/Src/cell_temp_handler.c ****     } else if (temp_celsius > 125.0f) {
 761              		.loc 1 206 22 view .LVU195
 762 00aa 9FED080A 		vldr.32	s0, .L77+28
 763              	.LVL76:
 764              	.L65:
 212:Core/Src/cell_temp_handler.c **** 
 765              		.loc 1 212 1 view .LVU196
 766 00ae 08BD     		pop	{r3, pc}
 767              	.L78:
 768              		.align	2
 769              	.L77:
 770 00b0 00F07F45 		.word	1166012416
 771 00b4 33335340 		.word	1079194419
 772 00b8 5C8F5240 		.word	1079152476
 773 00bc 00401C46 		.word	1176256512
 774 00c0 00B05645 		.word	1163309056
 775 00c4 0FCF5B3B 		.word	995872527
 776 00c8 33938843 		.word	1133024051
 777 00cc 000020C2 		.word	-1038090240
 778 00d0 0000FA42 		.word	1123680256
 779 00d4 00247449 		.word	1232348160
 780 00d8 0000FEC2 		.word	-1023541248
 781              		.cfi_endproc
 782              	.LFE296:
 784              		.section	.text.CellTemp_ReadThermistor,"ax",%progbits
 785              		.align	1
 786              		.global	CellTemp_ReadThermistor
 787              		.syntax unified
 788              		.thumb
 789              		.thumb_func
 791              	CellTemp_ReadThermistor:
 792              	.LVL77:
 793              	.LFB297:
 221:Core/Src/cell_temp_handler.c ****     // Validate inputs
 794              		.loc 1 221 1 is_stmt 1 view -0
 795              		.cfi_startproc
 796              		@ args = 0, pretend = 0, frame = 0
 797              		@ frame_needed = 0, uses_anonymous_args = 0
 223:Core/Src/cell_temp_handler.c ****         return -127.0f;
 798              		.loc 1 223 5 view .LVU198
 223:Core/Src/cell_temp_handler.c ****         return -127.0f;
 799              		.loc 1 223 8 is_stmt 0 view .LVU199
 800 0000 0628     		cmp	r0, #6
 801 0002 11D8     		bhi	.L81
 221:Core/Src/cell_temp_handler.c ****     // Validate inputs
 802              		.loc 1 221 1 view .LVU200
 803 0004 10B5     		push	{r4, lr}
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccXf3slz.s 			page 26


 804              		.cfi_def_cfa_offset 8
 805              		.cfi_offset 4, -8
 806              		.cfi_offset 14, -4
 807 0006 0446     		mov	r4, r0
 223:Core/Src/cell_temp_handler.c ****         return -127.0f;
 808              		.loc 1 223 39 discriminator 1 view .LVU201
 809 0008 0729     		cmp	r1, #7
 810 000a 02D9     		bls	.L87
 224:Core/Src/cell_temp_handler.c ****     }
 811              		.loc 1 224 16 view .LVU202
 812 000c 9FED080A 		vldr.32	s0, .L88
 813              	.LVL78:
 814              	.L79:
 235:Core/Src/cell_temp_handler.c **** 
 815              		.loc 1 235 1 view .LVU203
 816 0010 10BD     		pop	{r4, pc}
 817              	.LVL79:
 818              	.L87:
 228:Core/Src/cell_temp_handler.c ****     
 819              		.loc 1 228 5 is_stmt 1 view .LVU204
 820 0012 0846     		mov	r0, r1
 821              	.LVL80:
 228:Core/Src/cell_temp_handler.c ****     
 822              		.loc 1 228 5 is_stmt 0 view .LVU205
 823 0014 FFF7FEFF 		bl	CellTemp_SetMuxChannel
 824              	.LVL81:
 231:Core/Src/cell_temp_handler.c ****     
 825              		.loc 1 231 5 is_stmt 1 view .LVU206
 231:Core/Src/cell_temp_handler.c ****     
 826              		.loc 1 231 26 is_stmt 0 view .LVU207
 827 0018 064B     		ldr	r3, .L88+4
 828 001a 53F82400 		ldr	r0, [r3, r4, lsl #2]
 829 001e FFF7FEFF 		bl	CellTemp_ReadADC
 830              	.LVL82:
 234:Core/Src/cell_temp_handler.c **** }
 831              		.loc 1 234 5 is_stmt 1 view .LVU208
 234:Core/Src/cell_temp_handler.c **** }
 832              		.loc 1 234 12 is_stmt 0 view .LVU209
 833 0022 FFF7FEFF 		bl	CellTemp_CalculateTemperature
 834              	.LVL83:
 234:Core/Src/cell_temp_handler.c **** }
 835              		.loc 1 234 12 view .LVU210
 836 0026 F3E7     		b	.L79
 837              	.LVL84:
 838              	.L81:
 839              		.cfi_def_cfa_offset 0
 840              		.cfi_restore 4
 841              		.cfi_restore 14
 224:Core/Src/cell_temp_handler.c ****     }
 842              		.loc 1 224 16 view .LVU211
 843 0028 9FED010A 		vldr.32	s0, .L88
 235:Core/Src/cell_temp_handler.c **** 
 844              		.loc 1 235 1 view .LVU212
 845 002c 7047     		bx	lr
 846              	.L89:
 847 002e 00BF     		.align	2
 848              	.L88:
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccXf3slz.s 			page 27


 849 0030 0000FEC2 		.word	-1023541248
 850 0034 00000000 		.word	adc_channels
 851              		.cfi_endproc
 852              	.LFE297:
 854              		.section	.text.CellTemp_MonitorTask,"ax",%progbits
 855              		.align	1
 856              		.global	CellTemp_MonitorTask
 857              		.syntax unified
 858              		.thumb
 859              		.thumb_func
 861              	CellTemp_MonitorTask:
 862              	.LVL85:
 863              	.LFB298:
 243:Core/Src/cell_temp_handler.c ****     // Initialize the temperature monitoring system
 864              		.loc 1 243 1 is_stmt 1 view -0
 865              		.cfi_startproc
 866              		@ args = 0, pretend = 0, frame = 0
 867              		@ frame_needed = 0, uses_anonymous_args = 0
 243:Core/Src/cell_temp_handler.c ****     // Initialize the temperature monitoring system
 868              		.loc 1 243 1 is_stmt 0 view .LVU214
 869 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 870              		.cfi_def_cfa_offset 32
 871              		.cfi_offset 4, -32
 872              		.cfi_offset 5, -28
 873              		.cfi_offset 6, -24
 874              		.cfi_offset 7, -20
 875              		.cfi_offset 8, -16
 876              		.cfi_offset 9, -12
 877              		.cfi_offset 10, -8
 878              		.cfi_offset 14, -4
 245:Core/Src/cell_temp_handler.c ****         // Handle initialization error - blink would go here if we had an LED
 879              		.loc 1 245 5 is_stmt 1 view .LVU215
 245:Core/Src/cell_temp_handler.c ****         // Handle initialization error - blink would go here if we had an LED
 880              		.loc 1 245 9 is_stmt 0 view .LVU216
 881 0004 FFF7FEFF 		bl	CellTemp_Init
 882              	.LVL86:
 245:Core/Src/cell_temp_handler.c ****         // Handle initialization error - blink would go here if we had an LED
 883              		.loc 1 245 8 discriminator 1 view .LVU217
 884 0008 0746     		mov	r7, r0
 885 000a 0028     		cmp	r0, #0
 886 000c 00F0AC80 		beq	.L111
 887              	.L92:
 247:Core/Src/cell_temp_handler.c ****             osDelay(1000);  // Wait 1 second (1000 ticks at 1ms tick rate)
 888              		.loc 1 247 9 is_stmt 1 view .LVU218
 248:Core/Src/cell_temp_handler.c ****         }
 889              		.loc 1 248 13 discriminator 1 view .LVU219
 890 0010 4FF47A70 		mov	r0, #1000
 891 0014 FFF7FEFF 		bl	osDelay
 892              	.LVL87:
 247:Core/Src/cell_temp_handler.c ****             osDelay(1000);  // Wait 1 second (1000 ticks at 1ms tick rate)
 893              		.loc 1 247 14 view .LVU220
 894 0018 FAE7     		b	.L92
 895              	.LVL88:
 896              	.L94:
 897              	.LBB9:
 898              	.LBB10:
 267:Core/Src/cell_temp_handler.c ****             if (CellTemp_IsADCEnabled(adc)) {
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccXf3slz.s 			page 28


 899              		.loc 1 267 58 discriminator 2 view .LVU221
 900 001a 0134     		adds	r4, r4, #1
 901              	.LVL89:
 267:Core/Src/cell_temp_handler.c ****             if (CellTemp_IsADCEnabled(adc)) {
 902              		.loc 1 267 58 is_stmt 0 discriminator 2 view .LVU222
 903 001c E4B2     		uxtb	r4, r4
 904              	.LVL90:
 905              	.L93:
 267:Core/Src/cell_temp_handler.c ****             if (CellTemp_IsADCEnabled(adc)) {
 906              		.loc 1 267 35 is_stmt 1 discriminator 1 view .LVU223
 907 001e 062C     		cmp	r4, #6
 908 0020 13D8     		bhi	.L116
 268:Core/Src/cell_temp_handler.c ****                 uint8_t therm_idx = adc * MUX_CHANNELS + temp_state.current_mux;
 909              		.loc 1 268 13 view .LVU224
 268:Core/Src/cell_temp_handler.c ****                 uint8_t therm_idx = adc * MUX_CHANNELS + temp_state.current_mux;
 910              		.loc 1 268 17 is_stmt 0 view .LVU225
 911 0022 2046     		mov	r0, r4
 912 0024 FFF7FEFF 		bl	CellTemp_IsADCEnabled
 913              	.LVL91:
 268:Core/Src/cell_temp_handler.c ****                 uint8_t therm_idx = adc * MUX_CHANNELS + temp_state.current_mux;
 914              		.loc 1 268 16 discriminator 1 view .LVU226
 915 0028 0028     		cmp	r0, #0
 916 002a F6D0     		beq	.L94
 917              	.LBB11:
 269:Core/Src/cell_temp_handler.c ****                 temp_state.thermistors[therm_idx].adc_accumulator = 0;
 918              		.loc 1 269 17 is_stmt 1 view .LVU227
 269:Core/Src/cell_temp_handler.c ****                 temp_state.thermistors[therm_idx].adc_accumulator = 0;
 919              		.loc 1 269 56 is_stmt 0 view .LVU228
 920 002c E300     		lsls	r3, r4, #3
 921 002e DBB2     		uxtb	r3, r3
 269:Core/Src/cell_temp_handler.c ****                 temp_state.thermistors[therm_idx].adc_accumulator = 0;
 922              		.loc 1 269 68 view .LVU229
 923 0030 674A     		ldr	r2, .L123
 924 0032 92F84115 		ldrb	r1, [r2, #1345]	@ zero_extendqisi2
 269:Core/Src/cell_temp_handler.c ****                 temp_state.thermistors[therm_idx].adc_accumulator = 0;
 925              		.loc 1 269 25 view .LVU230
 926 0036 0B44     		add	r3, r3, r1
 927 0038 DBB2     		uxtb	r3, r3
 928              	.LVL92:
 270:Core/Src/cell_temp_handler.c ****                 temp_state.thermistors[therm_idx].sample_count = 0;
 929              		.loc 1 270 17 is_stmt 1 view .LVU231
 270:Core/Src/cell_temp_handler.c ****                 temp_state.thermistors[therm_idx].sample_count = 0;
 930              		.loc 1 270 67 is_stmt 0 view .LVU232
 931 003a 03EB4301 		add	r1, r3, r3, lsl #1
 932 003e 02EBC101 		add	r1, r2, r1, lsl #3
 933 0042 0020     		movs	r0, #0
 934 0044 0861     		str	r0, [r1, #16]
 271:Core/Src/cell_temp_handler.c ****             }
 935              		.loc 1 271 17 is_stmt 1 view .LVU233
 271:Core/Src/cell_temp_handler.c ****             }
 936              		.loc 1 271 64 is_stmt 0 view .LVU234
 937 0046 8882     		strh	r0, [r1, #20]	@ movhi
 938 0048 E7E7     		b	.L94
 939              	.LVL93:
 940              	.L116:
 271:Core/Src/cell_temp_handler.c ****             }
 941              		.loc 1 271 64 view .LVU235
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccXf3slz.s 			page 29


 942              	.LBE11:
 943              	.LBE10:
 944              	.LBB12:
 276:Core/Src/cell_temp_handler.c ****             // Read all enabled ADC channels for current MUX channel
 945              		.loc 1 276 23 view .LVU236
 946 004a 0026     		movs	r6, #0
 947 004c 2BE0     		b	.L96
 948              	.LVL94:
 949              	.L97:
 950              	.LBB13:
 278:Core/Src/cell_temp_handler.c ****                 if (CellTemp_IsADCEnabled(adc)) {
 951              		.loc 1 278 62 is_stmt 1 discriminator 2 view .LVU237
 952 004e 0134     		adds	r4, r4, #1
 953              	.LVL95:
 278:Core/Src/cell_temp_handler.c ****                 if (CellTemp_IsADCEnabled(adc)) {
 954              		.loc 1 278 62 is_stmt 0 discriminator 2 view .LVU238
 955 0050 E4B2     		uxtb	r4, r4
 956              	.LVL96:
 957              	.L99:
 278:Core/Src/cell_temp_handler.c ****                 if (CellTemp_IsADCEnabled(adc)) {
 958              		.loc 1 278 39 is_stmt 1 discriminator 1 view .LVU239
 959 0052 062C     		cmp	r4, #6
 960 0054 22D8     		bhi	.L117
 279:Core/Src/cell_temp_handler.c ****                     uint8_t therm_idx = adc * MUX_CHANNELS + temp_state.current_mux;
 961              		.loc 1 279 17 view .LVU240
 279:Core/Src/cell_temp_handler.c ****                     uint8_t therm_idx = adc * MUX_CHANNELS + temp_state.current_mux;
 962              		.loc 1 279 21 is_stmt 0 view .LVU241
 963 0056 2046     		mov	r0, r4
 964 0058 FFF7FEFF 		bl	CellTemp_IsADCEnabled
 965              	.LVL97:
 279:Core/Src/cell_temp_handler.c ****                     uint8_t therm_idx = adc * MUX_CHANNELS + temp_state.current_mux;
 966              		.loc 1 279 20 discriminator 1 view .LVU242
 967 005c 0028     		cmp	r0, #0
 968 005e F6D0     		beq	.L97
 969              	.LBB14:
 280:Core/Src/cell_temp_handler.c ****                     thermistor_data_t *therm = &temp_state.thermistors[therm_idx];
 970              		.loc 1 280 21 is_stmt 1 view .LVU243
 280:Core/Src/cell_temp_handler.c ****                     thermistor_data_t *therm = &temp_state.thermistors[therm_idx];
 971              		.loc 1 280 60 is_stmt 0 view .LVU244
 972 0060 E500     		lsls	r5, r4, #3
 973 0062 EDB2     		uxtb	r5, r5
 280:Core/Src/cell_temp_handler.c ****                     thermistor_data_t *therm = &temp_state.thermistors[therm_idx];
 974              		.loc 1 280 72 view .LVU245
 975 0064 5A4B     		ldr	r3, .L123
 976 0066 93F84135 		ldrb	r3, [r3, #1345]	@ zero_extendqisi2
 280:Core/Src/cell_temp_handler.c ****                     thermistor_data_t *therm = &temp_state.thermistors[therm_idx];
 977              		.loc 1 280 29 view .LVU246
 978 006a 1D44     		add	r5, r5, r3
 979 006c EDB2     		uxtb	r5, r5
 980              	.LVL98:
 281:Core/Src/cell_temp_handler.c ****                     
 981              		.loc 1 281 21 is_stmt 1 view .LVU247
 284:Core/Src/cell_temp_handler.c ****                     
 982              		.loc 1 284 21 view .LVU248
 284:Core/Src/cell_temp_handler.c ****                     
 983              		.loc 1 284 42 is_stmt 0 view .LVU249
 984 006e 594B     		ldr	r3, .L123+4
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccXf3slz.s 			page 30


 985 0070 53F82400 		ldr	r0, [r3, r4, lsl #2]
 986 0074 FFF7FEFF 		bl	CellTemp_ReadADC
 987              	.LVL99:
 287:Core/Src/cell_temp_handler.c ****                         therm->adc_accumulator += adc_value;
 988              		.loc 1 287 21 is_stmt 1 view .LVU250
 287:Core/Src/cell_temp_handler.c ****                         therm->adc_accumulator += adc_value;
 989              		.loc 1 287 24 is_stmt 0 view .LVU251
 990 0078 0928     		cmp	r0, #9
 991 007a E8D9     		bls	.L97
 288:Core/Src/cell_temp_handler.c ****                         therm->sample_count++;
 992              		.loc 1 288 25 is_stmt 1 view .LVU252
 288:Core/Src/cell_temp_handler.c ****                         therm->sample_count++;
 993              		.loc 1 288 30 is_stmt 0 view .LVU253
 994 007c 544A     		ldr	r2, .L123
 995 007e 05EB4503 		add	r3, r5, r5, lsl #1
 996 0082 02EBC303 		add	r3, r2, r3, lsl #3
 997 0086 1969     		ldr	r1, [r3, #16]
 288:Core/Src/cell_temp_handler.c ****                         therm->sample_count++;
 998              		.loc 1 288 48 view .LVU254
 999 0088 0844     		add	r0, r0, r1
 1000              	.LVL100:
 288:Core/Src/cell_temp_handler.c ****                         therm->sample_count++;
 1001              		.loc 1 288 48 view .LVU255
 1002 008a 1861     		str	r0, [r3, #16]
 289:Core/Src/cell_temp_handler.c ****                     }
 1003              		.loc 1 289 25 is_stmt 1 view .LVU256
 289:Core/Src/cell_temp_handler.c ****                     }
 1004              		.loc 1 289 30 is_stmt 0 view .LVU257
 1005 008c 9B8A     		ldrh	r3, [r3, #20]
 289:Core/Src/cell_temp_handler.c ****                     }
 1006              		.loc 1 289 44 view .LVU258
 1007 008e 05EB4505 		add	r5, r5, r5, lsl #1
 1008              	.LVL101:
 289:Core/Src/cell_temp_handler.c ****                     }
 1009              		.loc 1 289 44 view .LVU259
 1010 0092 02EBC502 		add	r2, r2, r5, lsl #3
 1011 0096 0133     		adds	r3, r3, #1
 1012 0098 9382     		strh	r3, [r2, #20]	@ movhi
 1013 009a D8E7     		b	.L97
 1014              	.LVL102:
 1015              	.L117:
 289:Core/Src/cell_temp_handler.c ****                     }
 1016              		.loc 1 289 44 view .LVU260
 1017              	.LBE14:
 1018              	.LBE13:
 295:Core/Src/cell_temp_handler.c ****         }
 1019              		.loc 1 295 13 is_stmt 1 view .LVU261
 1020 009c 0A20     		movs	r0, #10
 1021 009e FFF7FEFF 		bl	osDelay
 1022              	.LVL103:
 276:Core/Src/cell_temp_handler.c ****             // Read all enabled ADC channels for current MUX channel
 1023              		.loc 1 276 72 discriminator 2 view .LVU262
 1024 00a2 0136     		adds	r6, r6, #1
 1025              	.LVL104:
 276:Core/Src/cell_temp_handler.c ****             // Read all enabled ADC channels for current MUX channel
 1026              		.loc 1 276 72 is_stmt 0 discriminator 2 view .LVU263
 1027 00a4 B6B2     		uxth	r6, r6
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccXf3slz.s 			page 31


 1028              	.LVL105:
 1029              	.L96:
 276:Core/Src/cell_temp_handler.c ****             // Read all enabled ADC channels for current MUX channel
 1030              		.loc 1 276 42 is_stmt 1 discriminator 1 view .LVU264
 1031 00a6 0B2E     		cmp	r6, #11
 1032 00a8 01D8     		bhi	.L118
 1033              	.LBB15:
 278:Core/Src/cell_temp_handler.c ****                 if (CellTemp_IsADCEnabled(adc)) {
 1034              		.loc 1 278 26 is_stmt 0 view .LVU265
 1035 00aa 3C46     		mov	r4, r7
 1036 00ac D1E7     		b	.L99
 1037              	.L118:
 1038              	.LBE15:
 1039              	.LBE12:
 299:Core/Src/cell_temp_handler.c ****         
 1040              		.loc 1 299 9 is_stmt 1 view .LVU266
 299:Core/Src/cell_temp_handler.c ****         
 1041              		.loc 1 299 33 is_stmt 0 view .LVU267
 1042 00ae FFF7FEFF 		bl	osKernelGetTickCount
 1043              	.LVL106:
 1044 00b2 0646     		mov	r6, r0
 1045              	.LVL107:
 301:Core/Src/cell_temp_handler.c ****             if (CellTemp_IsADCEnabled(adc)) {
 1046              		.loc 1 301 9 is_stmt 1 view .LVU268
 1047              	.LBB16:
 301:Core/Src/cell_temp_handler.c ****             if (CellTemp_IsADCEnabled(adc)) {
 1048              		.loc 1 301 14 view .LVU269
 301:Core/Src/cell_temp_handler.c ****             if (CellTemp_IsADCEnabled(adc)) {
 1049              		.loc 1 301 22 is_stmt 0 view .LVU270
 1050 00b4 3C46     		mov	r4, r7
 301:Core/Src/cell_temp_handler.c ****             if (CellTemp_IsADCEnabled(adc)) {
 1051              		.loc 1 301 9 view .LVU271
 1052 00b6 1EE0     		b	.L100
 1053              	.LVL108:
 1054              	.L120:
 1055              	.LBB17:
 308:Core/Src/cell_temp_handler.c ****                     therm->temperature = CellTemp_CalculateTemperature(therm->raw_adc);
 1056              		.loc 1 308 21 is_stmt 1 view .LVU272
 308:Core/Src/cell_temp_handler.c ****                     therm->temperature = CellTemp_CalculateTemperature(therm->raw_adc);
 1057              		.loc 1 308 54 is_stmt 0 view .LVU273
 1058 00b8 9846     		mov	r8, r3
 1059 00ba 1B69     		ldr	r3, [r3, #16]
 308:Core/Src/cell_temp_handler.c ****                     therm->temperature = CellTemp_CalculateTemperature(therm->raw_adc);
 1060              		.loc 1 308 72 view .LVU274
 1061 00bc B3FBF2F3 		udiv	r3, r3, r2
 308:Core/Src/cell_temp_handler.c ****                     therm->temperature = CellTemp_CalculateTemperature(therm->raw_adc);
 1062              		.loc 1 308 38 view .LVU275
 1063 00c0 98B2     		uxth	r0, r3
 308:Core/Src/cell_temp_handler.c ****                     therm->temperature = CellTemp_CalculateTemperature(therm->raw_adc);
 1064              		.loc 1 308 36 view .LVU276
 1065 00c2 A8F80800 		strh	r0, [r8, #8]	@ movhi
 309:Core/Src/cell_temp_handler.c ****                     therm->last_read_time = current_time;
 1066              		.loc 1 309 21 is_stmt 1 view .LVU277
 309:Core/Src/cell_temp_handler.c ****                     therm->last_read_time = current_time;
 1067              		.loc 1 309 42 is_stmt 0 view .LVU278
 1068 00c6 FFF7FEFF 		bl	CellTemp_CalculateTemperature
 1069              	.LVL109:
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccXf3slz.s 			page 32


 309:Core/Src/cell_temp_handler.c ****                     therm->last_read_time = current_time;
 1070              		.loc 1 309 40 discriminator 1 view .LVU279
 1071 00ca 88ED010A 		vstr.32	s0, [r8, #4]
 310:Core/Src/cell_temp_handler.c ****                     
 1072              		.loc 1 310 21 is_stmt 1 view .LVU280
 310:Core/Src/cell_temp_handler.c ****                     
 1073              		.loc 1 310 43 is_stmt 0 view .LVU281
 1074 00ce C8F80C60 		str	r6, [r8, #12]
 1075 00d2 0EE0     		b	.L103
 1076              	.LVL110:
 1077              	.L101:
 310:Core/Src/cell_temp_handler.c ****                     
 1078              		.loc 1 310 43 view .LVU282
 1079              	.LBE17:
 1080              	.LBB18:
 334:Core/Src/cell_temp_handler.c ****                 temp_state.thermistors[therm_idx].temperature = -127.0f;
 1081              		.loc 1 334 17 is_stmt 1 view .LVU283
 334:Core/Src/cell_temp_handler.c ****                 temp_state.thermistors[therm_idx].temperature = -127.0f;
 1082              		.loc 1 334 56 is_stmt 0 view .LVU284
 1083 00d4 E300     		lsls	r3, r4, #3
 1084 00d6 DBB2     		uxtb	r3, r3
 334:Core/Src/cell_temp_handler.c ****                 temp_state.thermistors[therm_idx].temperature = -127.0f;
 1085              		.loc 1 334 68 view .LVU285
 1086 00d8 3D4A     		ldr	r2, .L123
 1087 00da 92F84115 		ldrb	r1, [r2, #1345]	@ zero_extendqisi2
 334:Core/Src/cell_temp_handler.c ****                 temp_state.thermistors[therm_idx].temperature = -127.0f;
 1088              		.loc 1 334 25 view .LVU286
 1089 00de 0B44     		add	r3, r3, r1
 1090 00e0 DBB2     		uxtb	r3, r3
 1091              	.LVL111:
 335:Core/Src/cell_temp_handler.c ****                 temp_state.thermistors[therm_idx].raw_adc = 0;
 1092              		.loc 1 335 17 is_stmt 1 view .LVU287
 335:Core/Src/cell_temp_handler.c ****                 temp_state.thermistors[therm_idx].raw_adc = 0;
 1093              		.loc 1 335 63 is_stmt 0 view .LVU288
 1094 00e2 03EB4301 		add	r1, r3, r3, lsl #1
 1095 00e6 02EBC101 		add	r1, r2, r1, lsl #3
 1096 00ea 3B48     		ldr	r0, .L123+8
 1097 00ec 4860     		str	r0, [r1, #4]	@ float
 336:Core/Src/cell_temp_handler.c ****             }
 1098              		.loc 1 336 17 is_stmt 1 view .LVU289
 336:Core/Src/cell_temp_handler.c ****             }
 1099              		.loc 1 336 59 is_stmt 0 view .LVU290
 1100 00ee 0023     		movs	r3, #0
 1101              	.LVL112:
 336:Core/Src/cell_temp_handler.c ****             }
 1102              		.loc 1 336 59 view .LVU291
 1103 00f0 0B81     		strh	r3, [r1, #8]	@ movhi
 1104              	.LVL113:
 1105              	.L103:
 336:Core/Src/cell_temp_handler.c ****             }
 1106              		.loc 1 336 59 view .LVU292
 1107              	.LBE18:
 301:Core/Src/cell_temp_handler.c ****             if (CellTemp_IsADCEnabled(adc)) {
 1108              		.loc 1 301 58 is_stmt 1 discriminator 2 view .LVU293
 1109 00f2 0134     		adds	r4, r4, #1
 1110              	.LVL114:
 301:Core/Src/cell_temp_handler.c ****             if (CellTemp_IsADCEnabled(adc)) {
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccXf3slz.s 			page 33


 1111              		.loc 1 301 58 is_stmt 0 discriminator 2 view .LVU294
 1112 00f4 E4B2     		uxtb	r4, r4
 1113              	.LVL115:
 1114              	.L100:
 301:Core/Src/cell_temp_handler.c ****             if (CellTemp_IsADCEnabled(adc)) {
 1115              		.loc 1 301 35 is_stmt 1 discriminator 1 view .LVU295
 1116 00f6 062C     		cmp	r4, #6
 1117 00f8 1DD8     		bhi	.L119
 302:Core/Src/cell_temp_handler.c ****                 uint8_t therm_idx = adc * MUX_CHANNELS + temp_state.current_mux;
 1118              		.loc 1 302 13 view .LVU296
 302:Core/Src/cell_temp_handler.c ****                 uint8_t therm_idx = adc * MUX_CHANNELS + temp_state.current_mux;
 1119              		.loc 1 302 17 is_stmt 0 view .LVU297
 1120 00fa 2046     		mov	r0, r4
 1121 00fc FFF7FEFF 		bl	CellTemp_IsADCEnabled
 1122              	.LVL116:
 302:Core/Src/cell_temp_handler.c ****                 uint8_t therm_idx = adc * MUX_CHANNELS + temp_state.current_mux;
 1123              		.loc 1 302 16 discriminator 1 view .LVU298
 1124 0100 0028     		cmp	r0, #0
 1125 0102 E7D0     		beq	.L101
 1126              	.LBB19:
 303:Core/Src/cell_temp_handler.c ****                 thermistor_data_t *therm = &temp_state.thermistors[therm_idx];
 1127              		.loc 1 303 17 is_stmt 1 view .LVU299
 303:Core/Src/cell_temp_handler.c ****                 thermistor_data_t *therm = &temp_state.thermistors[therm_idx];
 1128              		.loc 1 303 56 is_stmt 0 view .LVU300
 1129 0104 E500     		lsls	r5, r4, #3
 1130 0106 EDB2     		uxtb	r5, r5
 303:Core/Src/cell_temp_handler.c ****                 thermistor_data_t *therm = &temp_state.thermistors[therm_idx];
 1131              		.loc 1 303 68 view .LVU301
 1132 0108 314B     		ldr	r3, .L123
 1133 010a 93F84125 		ldrb	r2, [r3, #1345]	@ zero_extendqisi2
 303:Core/Src/cell_temp_handler.c ****                 thermistor_data_t *therm = &temp_state.thermistors[therm_idx];
 1134              		.loc 1 303 25 view .LVU302
 1135 010e 1544     		add	r5, r5, r2
 1136 0110 EDB2     		uxtb	r5, r5
 1137              	.LVL117:
 304:Core/Src/cell_temp_handler.c ****                 
 1138              		.loc 1 304 17 is_stmt 1 view .LVU303
 307:Core/Src/cell_temp_handler.c ****                     therm->raw_adc = (uint16_t)(therm->adc_accumulator / therm->sample_count);
 1139              		.loc 1 307 17 view .LVU304
 307:Core/Src/cell_temp_handler.c ****                     therm->raw_adc = (uint16_t)(therm->adc_accumulator / therm->sample_count);
 1140              		.loc 1 307 26 is_stmt 0 view .LVU305
 1141 0112 05EB4502 		add	r2, r5, r5, lsl #1
 1142 0116 03EBC203 		add	r3, r3, r2, lsl #3
 1143 011a 9A8A     		ldrh	r2, [r3, #20]
 307:Core/Src/cell_temp_handler.c ****                     therm->raw_adc = (uint16_t)(therm->adc_accumulator / therm->sample_count);
 1144              		.loc 1 307 20 view .LVU306
 1145 011c 002A     		cmp	r2, #0
 1146 011e CBD1     		bne	.L120
 326:Core/Src/cell_temp_handler.c ****                     therm->temperature = -127.0f;
 1147              		.loc 1 326 21 is_stmt 1 view .LVU307
 326:Core/Src/cell_temp_handler.c ****                     therm->temperature = -127.0f;
 1148              		.loc 1 326 36 is_stmt 0 view .LVU308
 1149 0120 2B4B     		ldr	r3, .L123
 1150 0122 05EB4502 		add	r2, r5, r5, lsl #1
 1151 0126 03EBC202 		add	r2, r3, r2, lsl #3
 1152 012a 0021     		movs	r1, #0
 1153 012c 1181     		strh	r1, [r2, #8]	@ movhi
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccXf3slz.s 			page 34


 327:Core/Src/cell_temp_handler.c **** #if TEMP_FAULT_DETECTION_ENABLED
 1154              		.loc 1 327 21 is_stmt 1 view .LVU309
 327:Core/Src/cell_temp_handler.c **** #if TEMP_FAULT_DETECTION_ENABLED
 1155              		.loc 1 327 40 is_stmt 0 view .LVU310
 1156 012e 1346     		mov	r3, r2
 1157 0130 294A     		ldr	r2, .L123+8
 1158 0132 5A60     		str	r2, [r3, #4]	@ float
 1159 0134 DDE7     		b	.L103
 1160              	.LVL118:
 1161              	.L119:
 327:Core/Src/cell_temp_handler.c **** #if TEMP_FAULT_DETECTION_ENABLED
 1162              		.loc 1 327 40 view .LVU311
 1163              	.LBE19:
 1164              	.LBE16:
 344:Core/Src/cell_temp_handler.c ****             // Just completed MUX 0-3 or MUX 4-7, so we have all 4 temps for a message
 1165              		.loc 1 344 9 is_stmt 1 view .LVU312
 344:Core/Src/cell_temp_handler.c ****             // Just completed MUX 0-3 or MUX 4-7, so we have all 4 temps for a message
 1166              		.loc 1 344 23 is_stmt 0 view .LVU313
 1167 0136 264B     		ldr	r3, .L123
 1168 0138 93F84135 		ldrb	r3, [r3, #1345]	@ zero_extendqisi2
 344:Core/Src/cell_temp_handler.c ****             // Just completed MUX 0-3 or MUX 4-7, so we have all 4 temps for a message
 1169              		.loc 1 344 12 view .LVU314
 1170 013c 032B     		cmp	r3, #3
 1171 013e 42D0     		beq	.L113
 344:Core/Src/cell_temp_handler.c ****             // Just completed MUX 0-3 or MUX 4-7, so we have all 4 temps for a message
 1172              		.loc 1 344 41 discriminator 1 view .LVU315
 1173 0140 072B     		cmp	r3, #7
 1174 0142 42D0     		beq	.L121
 1175              	.LVL119:
 1176              	.L106:
 367:Core/Src/cell_temp_handler.c ****         
 1177              		.loc 1 367 9 is_stmt 1 view .LVU316
 367:Core/Src/cell_temp_handler.c ****         
 1178              		.loc 1 367 19 is_stmt 0 view .LVU317
 1179 0144 224A     		ldr	r2, .L123
 1180 0146 92F84135 		ldrb	r3, [r2, #1345]	@ zero_extendqisi2
 367:Core/Src/cell_temp_handler.c ****         
 1181              		.loc 1 367 31 view .LVU318
 1182 014a 0133     		adds	r3, r3, #1
 1183 014c DBB2     		uxtb	r3, r3
 1184 014e 82F84135 		strb	r3, [r2, #1345]
 370:Core/Src/cell_temp_handler.c ****             temp_state.current_mux = 0;
 1185              		.loc 1 370 9 is_stmt 1 view .LVU319
 370:Core/Src/cell_temp_handler.c ****             temp_state.current_mux = 0;
 1186              		.loc 1 370 12 is_stmt 0 view .LVU320
 1187 0152 072B     		cmp	r3, #7
 1188 0154 08D9     		bls	.L111
 371:Core/Src/cell_temp_handler.c ****             temp_state.cycle_count++;
 1189              		.loc 1 371 13 is_stmt 1 view .LVU321
 371:Core/Src/cell_temp_handler.c ****             temp_state.cycle_count++;
 1190              		.loc 1 371 36 is_stmt 0 view .LVU322
 1191 0156 1346     		mov	r3, r2
 1192 0158 0022     		movs	r2, #0
 1193 015a 83F84125 		strb	r2, [r3, #1345]
 372:Core/Src/cell_temp_handler.c ****             
 1194              		.loc 1 372 13 is_stmt 1 view .LVU323
 372:Core/Src/cell_temp_handler.c ****             
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccXf3slz.s 			page 35


 1195              		.loc 1 372 23 is_stmt 0 view .LVU324
 1196 015e D3F84425 		ldr	r2, [r3, #1348]
 372:Core/Src/cell_temp_handler.c ****             
 1197              		.loc 1 372 35 view .LVU325
 1198 0162 0132     		adds	r2, r2, #1
 1199 0164 C3F84425 		str	r2, [r3, #1348]
 1200              	.LVL120:
 1201              	.L111:
 372:Core/Src/cell_temp_handler.c ****             
 1202              		.loc 1 372 35 view .LVU326
 1203              	.LBE9:
 261:Core/Src/cell_temp_handler.c ****     {
 1204              		.loc 1 261 5 is_stmt 1 view .LVU327
 1205              	.LBB24:
 264:Core/Src/cell_temp_handler.c ****         
 1206              		.loc 1 264 9 view .LVU328
 1207 0168 194B     		ldr	r3, .L123
 1208 016a 93F84105 		ldrb	r0, [r3, #1345]	@ zero_extendqisi2
 1209 016e FFF7FEFF 		bl	CellTemp_SetMuxChannel
 1210              	.LVL121:
 267:Core/Src/cell_temp_handler.c ****             if (CellTemp_IsADCEnabled(adc)) {
 1211              		.loc 1 267 9 view .LVU329
 1212              	.LBB20:
 267:Core/Src/cell_temp_handler.c ****             if (CellTemp_IsADCEnabled(adc)) {
 1213              		.loc 1 267 14 view .LVU330
 267:Core/Src/cell_temp_handler.c ****             if (CellTemp_IsADCEnabled(adc)) {
 1214              		.loc 1 267 22 is_stmt 0 view .LVU331
 1215 0172 3C46     		mov	r4, r7
 267:Core/Src/cell_temp_handler.c ****             if (CellTemp_IsADCEnabled(adc)) {
 1216              		.loc 1 267 9 view .LVU332
 1217 0174 53E7     		b	.L93
 1218              	.LVL122:
 1219              	.L122:
 267:Core/Src/cell_temp_handler.c ****             if (CellTemp_IsADCEnabled(adc)) {
 1220              		.loc 1 267 9 view .LVU333
 1221              	.LBE20:
 1222              	.LBB21:
 1223              	.LBB22:
 351:Core/Src/cell_temp_handler.c ****                         uint8_t start_therm_idx = adc * MUX_CHANNELS;
 1224              		.loc 1 351 25 is_stmt 1 view .LVU334
 351:Core/Src/cell_temp_handler.c ****                         uint8_t start_therm_idx = adc * MUX_CHANNELS;
 1225              		.loc 1 351 33 is_stmt 0 view .LVU335
 1226 0176 6000     		lsls	r0, r4, #1
 352:Core/Src/cell_temp_handler.c ****                         CellTemp_SendTemperatureMessage(msg_idx, start_therm_idx);
 1227              		.loc 1 352 25 is_stmt 1 view .LVU336
 352:Core/Src/cell_temp_handler.c ****                         CellTemp_SendTemperatureMessage(msg_idx, start_therm_idx);
 1228              		.loc 1 352 33 is_stmt 0 view .LVU337
 1229 0178 E100     		lsls	r1, r4, #3
 1230              	.LVL123:
 353:Core/Src/cell_temp_handler.c ****                         osDelay(2); // Small delay between messages
 1231              		.loc 1 353 25 is_stmt 1 view .LVU338
 1232 017a 01F0F801 		and	r1, r1, #248
 1233              	.LVL124:
 353:Core/Src/cell_temp_handler.c ****                         osDelay(2); // Small delay between messages
 1234              		.loc 1 353 25 is_stmt 0 view .LVU339
 1235 017e 00F0FE00 		and	r0, r0, #254
 1236 0182 FFF7FEFF 		bl	CellTemp_SendTemperatureMessage
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccXf3slz.s 			page 36


 1237              	.LVL125:
 354:Core/Src/cell_temp_handler.c ****                     } else {
 1238              		.loc 1 354 25 is_stmt 1 view .LVU340
 1239 0186 0220     		movs	r0, #2
 1240 0188 FFF7FEFF 		bl	osDelay
 1241              	.LVL126:
 1242              	.L107:
 354:Core/Src/cell_temp_handler.c ****                     } else {
 1243              		.loc 1 354 25 is_stmt 0 view .LVU341
 1244              	.LBE22:
 346:Core/Src/cell_temp_handler.c ****                 if (CellTemp_IsADCEnabled(adc)) {
 1245              		.loc 1 346 62 is_stmt 1 discriminator 2 view .LVU342
 1246 018c 0134     		adds	r4, r4, #1
 1247              	.LVL127:
 346:Core/Src/cell_temp_handler.c ****                 if (CellTemp_IsADCEnabled(adc)) {
 1248              		.loc 1 346 62 is_stmt 0 discriminator 2 view .LVU343
 1249 018e E4B2     		uxtb	r4, r4
 1250              	.LVL128:
 1251              	.L109:
 346:Core/Src/cell_temp_handler.c ****                 if (CellTemp_IsADCEnabled(adc)) {
 1252              		.loc 1 346 39 is_stmt 1 discriminator 1 view .LVU344
 1253 0190 062C     		cmp	r4, #6
 1254 0192 D7D8     		bhi	.L106
 347:Core/Src/cell_temp_handler.c ****                     // Determine which message to send based on current MUX
 1255              		.loc 1 347 17 view .LVU345
 347:Core/Src/cell_temp_handler.c ****                     // Determine which message to send based on current MUX
 1256              		.loc 1 347 21 is_stmt 0 view .LVU346
 1257 0194 2046     		mov	r0, r4
 1258 0196 FFF7FEFF 		bl	CellTemp_IsADCEnabled
 1259              	.LVL129:
 347:Core/Src/cell_temp_handler.c ****                     // Determine which message to send based on current MUX
 1260              		.loc 1 347 20 discriminator 1 view .LVU347
 1261 019a 0028     		cmp	r0, #0
 1262 019c F6D0     		beq	.L107
 349:Core/Src/cell_temp_handler.c ****                         // Send message 0 for this ADC (thermistors 0-3)
 1263              		.loc 1 349 21 is_stmt 1 view .LVU348
 349:Core/Src/cell_temp_handler.c ****                         // Send message 0 for this ADC (thermistors 0-3)
 1264              		.loc 1 349 35 is_stmt 0 view .LVU349
 1265 019e 0C4B     		ldr	r3, .L123
 1266 01a0 93F84135 		ldrb	r3, [r3, #1345]	@ zero_extendqisi2
 349:Core/Src/cell_temp_handler.c ****                         // Send message 0 for this ADC (thermistors 0-3)
 1267              		.loc 1 349 24 view .LVU350
 1268 01a4 032B     		cmp	r3, #3
 1269 01a6 E6D0     		beq	.L122
 1270              	.LBB23:
 357:Core/Src/cell_temp_handler.c ****                         uint8_t start_therm_idx = adc * MUX_CHANNELS + 4;
 1271              		.loc 1 357 25 is_stmt 1 view .LVU351
 357:Core/Src/cell_temp_handler.c ****                         uint8_t start_therm_idx = adc * MUX_CHANNELS + 4;
 1272              		.loc 1 357 51 is_stmt 0 view .LVU352
 1273 01a8 6000     		lsls	r0, r4, #1
 1274 01aa C0B2     		uxtb	r0, r0
 357:Core/Src/cell_temp_handler.c ****                         uint8_t start_therm_idx = adc * MUX_CHANNELS + 4;
 1275              		.loc 1 357 33 view .LVU353
 1276 01ac 0130     		adds	r0, r0, #1
 1277              	.LVL130:
 358:Core/Src/cell_temp_handler.c ****                         CellTemp_SendTemperatureMessage(msg_idx, start_therm_idx);
 1278              		.loc 1 358 25 is_stmt 1 view .LVU354
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccXf3slz.s 			page 37


 358:Core/Src/cell_temp_handler.c ****                         CellTemp_SendTemperatureMessage(msg_idx, start_therm_idx);
 1279              		.loc 1 358 70 is_stmt 0 view .LVU355
 1280 01ae E100     		lsls	r1, r4, #3
 1281 01b0 C9B2     		uxtb	r1, r1
 358:Core/Src/cell_temp_handler.c ****                         CellTemp_SendTemperatureMessage(msg_idx, start_therm_idx);
 1282              		.loc 1 358 33 view .LVU356
 1283 01b2 0431     		adds	r1, r1, #4
 1284              	.LVL131:
 359:Core/Src/cell_temp_handler.c ****                         osDelay(2); // Small delay between messages
 1285              		.loc 1 359 25 is_stmt 1 view .LVU357
 1286 01b4 01F0FC01 		and	r1, r1, #252
 1287              	.LVL132:
 359:Core/Src/cell_temp_handler.c ****                         osDelay(2); // Small delay between messages
 1288              		.loc 1 359 25 is_stmt 0 view .LVU358
 1289 01b8 C0B2     		uxtb	r0, r0
 359:Core/Src/cell_temp_handler.c ****                         osDelay(2); // Small delay between messages
 1290              		.loc 1 359 25 view .LVU359
 1291 01ba FFF7FEFF 		bl	CellTemp_SendTemperatureMessage
 1292              	.LVL133:
 360:Core/Src/cell_temp_handler.c ****                     }
 1293              		.loc 1 360 25 is_stmt 1 view .LVU360
 1294 01be 0220     		movs	r0, #2
 1295 01c0 FFF7FEFF 		bl	osDelay
 1296              	.LVL134:
 1297 01c4 E2E7     		b	.L107
 1298              	.LVL135:
 1299              	.L113:
 360:Core/Src/cell_temp_handler.c ****                     }
 1300              		.loc 1 360 25 is_stmt 0 view .LVU361
 1301              	.LBE23:
 1302              	.LBE21:
 1303 01c6 3C46     		mov	r4, r7
 1304              	.LVL136:
 360:Core/Src/cell_temp_handler.c ****                     }
 1305              		.loc 1 360 25 view .LVU362
 1306 01c8 E2E7     		b	.L109
 1307              	.LVL137:
 1308              	.L121:
 360:Core/Src/cell_temp_handler.c ****                     }
 1309              		.loc 1 360 25 view .LVU363
 1310 01ca 3C46     		mov	r4, r7
 1311              	.LVL138:
 360:Core/Src/cell_temp_handler.c ****                     }
 1312              		.loc 1 360 25 view .LVU364
 1313 01cc E0E7     		b	.L109
 1314              	.L124:
 1315 01ce 00BF     		.align	2
 1316              	.L123:
 1317 01d0 00000000 		.word	temp_state
 1318 01d4 00000000 		.word	adc_channels
 1319 01d8 0000FEC2 		.word	-1023541248
 1320              	.LBE24:
 1321              		.cfi_endproc
 1322              	.LFE298:
 1324              		.section	.text.CellTemp_SendCANData,"ax",%progbits
 1325              		.align	1
 1326              		.global	CellTemp_SendCANData
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccXf3slz.s 			page 38


 1327              		.syntax unified
 1328              		.thumb
 1329              		.thumb_func
 1331              	CellTemp_SendCANData:
 1332              	.LFB301:
 482:Core/Src/cell_temp_handler.c **** 
 483:Core/Src/cell_temp_handler.c **** /**
 484:Core/Src/cell_temp_handler.c ****   * @brief  Send temperature data over CAN bus (manual/on-demand)
 485:Core/Src/cell_temp_handler.c ****   * @note   In normal operation, CAN messages are sent automatically after each
 486:Core/Src/cell_temp_handler.c ****   *         ADC completes its 8 MUX readings (once per second per enabled ADC).
 487:Core/Src/cell_temp_handler.c ****   *         This function can be called manually to send all messages at once.
 488:Core/Src/cell_temp_handler.c ****   * @retval HAL_StatusTypeDef
 489:Core/Src/cell_temp_handler.c ****   */
 490:Core/Src/cell_temp_handler.c **** HAL_StatusTypeDef CellTemp_SendCANData(void)
 491:Core/Src/cell_temp_handler.c **** {
 1333              		.loc 1 491 1 is_stmt 1 view -0
 1334              		.cfi_startproc
 1335              		@ args = 0, pretend = 0, frame = 0
 1336              		@ frame_needed = 0, uses_anonymous_args = 0
 1337 0000 38B5     		push	{r3, r4, r5, lr}
 1338              		.cfi_def_cfa_offset 16
 1339              		.cfi_offset 3, -16
 1340              		.cfi_offset 4, -12
 1341              		.cfi_offset 5, -8
 1342              		.cfi_offset 14, -4
 492:Core/Src/cell_temp_handler.c ****     HAL_StatusTypeDef result = HAL_OK;
 1343              		.loc 1 492 5 view .LVU366
 1344              	.LVL139:
 493:Core/Src/cell_temp_handler.c ****     
 494:Core/Src/cell_temp_handler.c ****     // Send 14 CAN messages to cover all 56 thermistors (4 per message)
 495:Core/Src/cell_temp_handler.c ****     // Only enabled ADC channels will have their messages sent
 496:Core/Src/cell_temp_handler.c ****     for (uint8_t msg = 0; msg < 14; msg++) {
 1345              		.loc 1 496 5 view .LVU367
 1346              	.LBB25:
 1347              		.loc 1 496 10 view .LVU368
 1348              		.loc 1 496 18 is_stmt 0 view .LVU369
 1349 0002 0024     		movs	r4, #0
 1350              	.LBE25:
 492:Core/Src/cell_temp_handler.c ****     HAL_StatusTypeDef result = HAL_OK;
 1351              		.loc 1 492 23 view .LVU370
 1352 0004 2546     		mov	r5, r4
 1353              	.LBB28:
 1354              		.loc 1 496 5 view .LVU371
 1355 0006 04E0     		b	.L126
 1356              	.LVL140:
 1357              	.L127:
 1358              	.LBB26:
 497:Core/Src/cell_temp_handler.c ****         uint8_t start_idx = msg * 4;
 498:Core/Src/cell_temp_handler.c ****         
 499:Core/Src/cell_temp_handler.c ****         if (CellTemp_SendTemperatureMessage(msg, start_idx) != HAL_OK) {
 500:Core/Src/cell_temp_handler.c ****             result = HAL_ERROR;
 501:Core/Src/cell_temp_handler.c ****         }
 502:Core/Src/cell_temp_handler.c ****         
 503:Core/Src/cell_temp_handler.c ****         // Small delay between messages to avoid bus congestion (5ms)
 504:Core/Src/cell_temp_handler.c ****         osDelay(5);
 1359              		.loc 1 504 9 is_stmt 1 view .LVU372
 1360 0008 0520     		movs	r0, #5
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccXf3slz.s 			page 39


 1361 000a FFF7FEFF 		bl	osDelay
 1362              	.LVL141:
 1363              	.LBE26:
 496:Core/Src/cell_temp_handler.c ****         uint8_t start_idx = msg * 4;
 1364              		.loc 1 496 40 discriminator 2 view .LVU373
 1365 000e 0134     		adds	r4, r4, #1
 1366              	.LVL142:
 496:Core/Src/cell_temp_handler.c ****         uint8_t start_idx = msg * 4;
 1367              		.loc 1 496 40 is_stmt 0 discriminator 2 view .LVU374
 1368 0010 E4B2     		uxtb	r4, r4
 1369              	.LVL143:
 1370              	.L126:
 496:Core/Src/cell_temp_handler.c ****         uint8_t start_idx = msg * 4;
 1371              		.loc 1 496 31 is_stmt 1 discriminator 1 view .LVU375
 1372 0012 0D2C     		cmp	r4, #13
 1373 0014 09D8     		bhi	.L131
 1374              	.LBB27:
 497:Core/Src/cell_temp_handler.c ****         uint8_t start_idx = msg * 4;
 1375              		.loc 1 497 9 view .LVU376
 497:Core/Src/cell_temp_handler.c ****         uint8_t start_idx = msg * 4;
 1376              		.loc 1 497 17 is_stmt 0 view .LVU377
 1377 0016 A100     		lsls	r1, r4, #2
 1378              	.LVL144:
 499:Core/Src/cell_temp_handler.c ****             result = HAL_ERROR;
 1379              		.loc 1 499 9 is_stmt 1 view .LVU378
 499:Core/Src/cell_temp_handler.c ****             result = HAL_ERROR;
 1380              		.loc 1 499 13 is_stmt 0 view .LVU379
 1381 0018 01F0FC01 		and	r1, r1, #252
 1382              	.LVL145:
 499:Core/Src/cell_temp_handler.c ****             result = HAL_ERROR;
 1383              		.loc 1 499 13 view .LVU380
 1384 001c 2046     		mov	r0, r4
 1385 001e FFF7FEFF 		bl	CellTemp_SendTemperatureMessage
 1386              	.LVL146:
 499:Core/Src/cell_temp_handler.c ****             result = HAL_ERROR;
 1387              		.loc 1 499 12 discriminator 1 view .LVU381
 1388 0022 0028     		cmp	r0, #0
 1389 0024 F0D0     		beq	.L127
 500:Core/Src/cell_temp_handler.c ****         }
 1390              		.loc 1 500 20 view .LVU382
 1391 0026 0125     		movs	r5, #1
 1392              	.LVL147:
 500:Core/Src/cell_temp_handler.c ****         }
 1393              		.loc 1 500 20 view .LVU383
 1394 0028 EEE7     		b	.L127
 1395              	.LVL148:
 1396              	.L131:
 500:Core/Src/cell_temp_handler.c ****         }
 1397              		.loc 1 500 20 view .LVU384
 1398              	.LBE27:
 1399              	.LBE28:
 505:Core/Src/cell_temp_handler.c ****     }
 506:Core/Src/cell_temp_handler.c ****     
 507:Core/Src/cell_temp_handler.c ****     return result;
 1400              		.loc 1 507 5 is_stmt 1 view .LVU385
 508:Core/Src/cell_temp_handler.c **** }
 1401              		.loc 1 508 1 is_stmt 0 view .LVU386
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccXf3slz.s 			page 40


 1402 002a 2846     		mov	r0, r5
 1403 002c 38BD     		pop	{r3, r4, r5, pc}
 1404              		.loc 1 508 1 view .LVU387
 1405              		.cfi_endproc
 1406              	.LFE301:
 1408              		.section	.text.CellTemp_GetTemperatures,"ax",%progbits
 1409              		.align	1
 1410              		.global	CellTemp_GetTemperatures
 1411              		.syntax unified
 1412              		.thumb
 1413              		.thumb_func
 1415              	CellTemp_GetTemperatures:
 1416              	.LVL149:
 1417              	.LFB302:
 509:Core/Src/cell_temp_handler.c **** 
 510:Core/Src/cell_temp_handler.c **** /**
 511:Core/Src/cell_temp_handler.c ****   * @brief  Get current temperature readings
 512:Core/Src/cell_temp_handler.c ****   * @param  temperatures: Array to store temperature readings
 513:Core/Src/cell_temp_handler.c ****   * @param  size: Size of array (should be TOTAL_THERMISTORS)
 514:Core/Src/cell_temp_handler.c ****   * @retval Number of valid readings
 515:Core/Src/cell_temp_handler.c ****   */
 516:Core/Src/cell_temp_handler.c **** uint8_t CellTemp_GetTemperatures(float *temperatures, uint8_t size)
 517:Core/Src/cell_temp_handler.c **** {
 1418              		.loc 1 517 1 is_stmt 1 view -0
 1419              		.cfi_startproc
 1420              		@ args = 0, pretend = 0, frame = 0
 1421              		@ frame_needed = 0, uses_anonymous_args = 0
 1422              		.loc 1 517 1 is_stmt 0 view .LVU389
 1423 0000 10B5     		push	{r4, lr}
 1424              		.cfi_def_cfa_offset 8
 1425              		.cfi_offset 4, -8
 1426              		.cfi_offset 14, -4
 1427 0002 8646     		mov	lr, r0
 518:Core/Src/cell_temp_handler.c ****     uint8_t valid_count = 0;
 1428              		.loc 1 518 5 is_stmt 1 view .LVU390
 1429              	.LVL150:
 519:Core/Src/cell_temp_handler.c ****     uint8_t max_count = (size < TOTAL_THERMISTORS) ? size : TOTAL_THERMISTORS;
 1430              		.loc 1 519 5 view .LVU391
 1431              		.loc 1 519 13 is_stmt 0 view .LVU392
 1432 0004 3829     		cmp	r1, #56
 1433 0006 28BF     		it	cs
 1434 0008 3821     		movcs	r1, #56
 1435              	.LVL151:
 520:Core/Src/cell_temp_handler.c ****     
 521:Core/Src/cell_temp_handler.c ****     for (uint8_t i = 0; i < max_count; i++) {
 1436              		.loc 1 521 5 is_stmt 1 view .LVU393
 1437              	.LBB29:
 1438              		.loc 1 521 10 view .LVU394
 1439              		.loc 1 521 18 is_stmt 0 view .LVU395
 1440 000a 0023     		movs	r3, #0
 1441              	.LBE29:
 518:Core/Src/cell_temp_handler.c ****     uint8_t max_count = (size < TOTAL_THERMISTORS) ? size : TOTAL_THERMISTORS;
 1442              		.loc 1 518 13 view .LVU396
 1443 000c 1846     		mov	r0, r3
 1444              	.LVL152:
 1445              	.LBB30:
 1446              		.loc 1 521 5 view .LVU397
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccXf3slz.s 			page 41


 1447 000e 01E0     		b	.L133
 1448              	.LVL153:
 1449              	.L134:
 1450              		.loc 1 521 41 is_stmt 1 discriminator 2 view .LVU398
 1451 0010 0133     		adds	r3, r3, #1
 1452              	.LVL154:
 1453              		.loc 1 521 41 is_stmt 0 discriminator 2 view .LVU399
 1454 0012 DBB2     		uxtb	r3, r3
 1455              	.LVL155:
 1456              	.L133:
 1457              		.loc 1 521 27 is_stmt 1 discriminator 1 view .LVU400
 1458 0014 8B42     		cmp	r3, r1
 1459 0016 14D2     		bcs	.L139
 522:Core/Src/cell_temp_handler.c ****         temperatures[i] = temp_state.thermistors[i].temperature;
 1460              		.loc 1 522 9 view .LVU401
 1461              		.loc 1 522 21 is_stmt 0 view .LVU402
 1462 0018 0EEB8302 		add	r2, lr, r3, lsl #2
 1463              		.loc 1 522 52 view .LVU403
 1464 001c 03EB430C 		add	ip, r3, r3, lsl #1
 1465 0020 084C     		ldr	r4, .L140
 1466 0022 04EBCC0C 		add	ip, r4, ip, lsl #3
 1467 0026 DCED017A 		vldr.32	s15, [ip, #4]
 1468              		.loc 1 522 25 view .LVU404
 1469 002a C2ED007A 		vstr.32	s15, [r2]
 523:Core/Src/cell_temp_handler.c ****         if (temperatures[i] > -126.0f) {
 1470              		.loc 1 523 9 is_stmt 1 view .LVU405
 1471              		.loc 1 523 12 is_stmt 0 view .LVU406
 1472 002e 9FED067A 		vldr.32	s14, .L140+4
 1473 0032 F4EEC77A 		vcmpe.f32	s15, s14
 1474 0036 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1475 003a E9DD     		ble	.L134
 524:Core/Src/cell_temp_handler.c ****             valid_count++;
 1476              		.loc 1 524 13 is_stmt 1 view .LVU407
 1477              		.loc 1 524 24 is_stmt 0 view .LVU408
 1478 003c 0130     		adds	r0, r0, #1
 1479              	.LVL156:
 1480              		.loc 1 524 24 view .LVU409
 1481 003e C0B2     		uxtb	r0, r0
 1482              	.LVL157:
 1483              		.loc 1 524 24 view .LVU410
 1484 0040 E6E7     		b	.L134
 1485              	.LVL158:
 1486              	.L139:
 1487              		.loc 1 524 24 view .LVU411
 1488              	.LBE30:
 525:Core/Src/cell_temp_handler.c ****         }
 526:Core/Src/cell_temp_handler.c ****     }
 527:Core/Src/cell_temp_handler.c ****     
 528:Core/Src/cell_temp_handler.c ****     return valid_count;
 1489              		.loc 1 528 5 is_stmt 1 view .LVU412
 529:Core/Src/cell_temp_handler.c **** }
 1490              		.loc 1 529 1 is_stmt 0 view .LVU413
 1491 0042 10BD     		pop	{r4, pc}
 1492              	.L141:
 1493              		.align	2
 1494              	.L140:
 1495 0044 00000000 		.word	temp_state
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccXf3slz.s 			page 42


 1496 0048 0000FCC2 		.word	-1023672320
 1497              		.cfi_endproc
 1498              	.LFE302:
 1500              		.section	.text.CellTemp_GetStats,"ax",%progbits
 1501              		.align	1
 1502              		.global	CellTemp_GetStats
 1503              		.syntax unified
 1504              		.thumb
 1505              		.thumb_func
 1507              	CellTemp_GetStats:
 1508              	.LVL159:
 1509              	.LFB303:
 530:Core/Src/cell_temp_handler.c **** 
 531:Core/Src/cell_temp_handler.c **** /**
 532:Core/Src/cell_temp_handler.c ****   * @brief  Get monitoring statistics
 533:Core/Src/cell_temp_handler.c ****   * @param  cycle_count: Pointer to store cycle count
 534:Core/Src/cell_temp_handler.c ****   * @param  current_index: Pointer to store current thermistor index
 535:Core/Src/cell_temp_handler.c ****   * @retval None
 536:Core/Src/cell_temp_handler.c ****   */
 537:Core/Src/cell_temp_handler.c **** void CellTemp_GetStats(uint32_t *cycle_count, uint8_t *current_index)
 538:Core/Src/cell_temp_handler.c **** {
 1510              		.loc 1 538 1 is_stmt 1 view -0
 1511              		.cfi_startproc
 1512              		@ args = 0, pretend = 0, frame = 0
 1513              		@ frame_needed = 0, uses_anonymous_args = 0
 1514              		@ link register save eliminated.
 539:Core/Src/cell_temp_handler.c ****     if (cycle_count != NULL) {
 1515              		.loc 1 539 5 view .LVU415
 1516              		.loc 1 539 8 is_stmt 0 view .LVU416
 1517 0000 18B1     		cbz	r0, .L143
 540:Core/Src/cell_temp_handler.c ****         *cycle_count = temp_state.cycle_count;
 1518              		.loc 1 540 9 is_stmt 1 view .LVU417
 1519              		.loc 1 540 34 is_stmt 0 view .LVU418
 1520 0002 054A     		ldr	r2, .L145
 1521 0004 D2F84425 		ldr	r2, [r2, #1348]
 1522              		.loc 1 540 22 view .LVU419
 1523 0008 0260     		str	r2, [r0]
 1524              	.L143:
 541:Core/Src/cell_temp_handler.c ****     }
 542:Core/Src/cell_temp_handler.c ****     
 543:Core/Src/cell_temp_handler.c ****     if (current_index != NULL) {
 1525              		.loc 1 543 5 is_stmt 1 view .LVU420
 1526              		.loc 1 543 8 is_stmt 0 view .LVU421
 1527 000a 19B1     		cbz	r1, .L142
 544:Core/Src/cell_temp_handler.c ****         *current_index = temp_state.current_index;
 1528              		.loc 1 544 9 is_stmt 1 view .LVU422
 1529              		.loc 1 544 36 is_stmt 0 view .LVU423
 1530 000c 024B     		ldr	r3, .L145
 1531 000e 93F84235 		ldrb	r3, [r3, #1346]	@ zero_extendqisi2
 1532              		.loc 1 544 24 view .LVU424
 1533 0012 0B70     		strb	r3, [r1]
 1534              	.L142:
 545:Core/Src/cell_temp_handler.c ****     }
 546:Core/Src/cell_temp_handler.c **** }...
 1535              		.loc 1 546 1 view .LVU425
 1536 0014 7047     		bx	lr
 1537              	.L146:
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccXf3slz.s 			page 43


 1538 0016 00BF     		.align	2
 1539              	.L145:
 1540 0018 00000000 		.word	temp_state
 1541              		.cfi_endproc
 1542              	.LFE303:
 1544              		.section	.rodata.adc_channel_enabled,"a"
 1545              		.align	2
 1548              	adc_channel_enabled:
 1549 0000 01010101 		.ascii	"\001\001\001\001\001\001\001"
 1549      010101
 1550              		.section	.rodata.adc_channels,"a"
 1551              		.align	2
 1554              	adc_channels:
 1555 0000 2000F014 		.word	351272992
 1556 0004 40002019 		.word	421527616
 1557 0008 0008302E 		.word	774899712
 1558 000c 00018021 		.word	562036992
 1559 0010 0002B025 		.word	632291840
 1560 0014 0004002A 		.word	704644096
 1561 0018 0080F03E 		.word	1055948800
 1562              		.section	.bss.temp_state,"aw",%nobits
 1563              		.align	2
 1566              	temp_state:
 1567 0000 00000000 		.space	1356
 1567      00000000 
 1567      00000000 
 1567      00000000 
 1567      00000000 
 1568              		.text
 1569              	.Letext0:
 1570              		.file 2 "C:/Users/Ali/AppData/Roaming/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tool
 1571              		.file 3 "C:/Users/Ali/AppData/Roaming/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tool
 1572              		.file 4 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l432xx.h"
 1573              		.file 5 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l4xx.h"
 1574              		.file 6 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 1575              		.file 7 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_gpio.h"
 1576              		.file 8 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 1577              		.file 9 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_adc.h"
 1578              		.file 10 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h"
 1579              		.file 11 "Core/Inc/cell_temp_handler.h"
 1580              		.file 12 "Core/Inc/can_ids.h"
 1581              		.file 13 "Core/Inc/can_manager.h"
 1582              		.file 14 "C:/Users/Ali/AppData/Roaming/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-too
 1583              		.file 15 "C:/Users/Ali/AppData/Roaming/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-too
 1584              		.file 16 "<built-in>"
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccXf3slz.s 			page 44


DEFINED SYMBOLS
                            *ABS*:00000000 cell_temp_handler.c
C:\Users\Ali\AppData\Local\Temp\ccXf3slz.s:21     .text.CellTemp_IsADCEnabled:00000000 $t
C:\Users\Ali\AppData\Local\Temp\ccXf3slz.s:26     .text.CellTemp_IsADCEnabled:00000000 CellTemp_IsADCEnabled
C:\Users\Ali\AppData\Local\Temp\ccXf3slz.s:55     .text.CellTemp_IsADCEnabled:00000010 $d
C:\Users\Ali\AppData\Local\Temp\ccXf3slz.s:1548   .rodata.adc_channel_enabled:00000000 adc_channel_enabled
C:\Users\Ali\AppData\Local\Temp\ccXf3slz.s:60     .text.CellTemp_ConfigureADCChannel:00000000 $t
C:\Users\Ali\AppData\Local\Temp\ccXf3slz.s:65     .text.CellTemp_ConfigureADCChannel:00000000 CellTemp_ConfigureADCChannel
C:\Users\Ali\AppData\Local\Temp\ccXf3slz.s:123    .text.CellTemp_ConfigureADCChannel:00000034 $d
C:\Users\Ali\AppData\Local\Temp\ccXf3slz.s:128    .text.CellTemp_SendTemperatureMessage:00000000 $t
C:\Users\Ali\AppData\Local\Temp\ccXf3slz.s:133    .text.CellTemp_SendTemperatureMessage:00000000 CellTemp_SendTemperatureMessage
C:\Users\Ali\AppData\Local\Temp\ccXf3slz.s:336    .text.CellTemp_SendTemperatureMessage:000000b4 $d
C:\Users\Ali\AppData\Local\Temp\ccXf3slz.s:1566   .bss.temp_state:00000000 temp_state
C:\Users\Ali\AppData\Local\Temp\ccXf3slz.s:344    .text.CellTemp_Init:00000000 $t
C:\Users\Ali\AppData\Local\Temp\ccXf3slz.s:350    .text.CellTemp_Init:00000000 CellTemp_Init
C:\Users\Ali\AppData\Local\Temp\ccXf3slz.s:445    .text.CellTemp_Init:00000074 $d
C:\Users\Ali\AppData\Local\Temp\ccXf3slz.s:452    .text.CellTemp_ReadADC:00000000 $t
C:\Users\Ali\AppData\Local\Temp\ccXf3slz.s:458    .text.CellTemp_ReadADC:00000000 CellTemp_ReadADC
C:\Users\Ali\AppData\Local\Temp\ccXf3slz.s:530    .text.CellTemp_ReadADC:0000003c $d
C:\Users\Ali\AppData\Local\Temp\ccXf3slz.s:535    .text.CellTemp_SetMuxChannel:00000000 $t
C:\Users\Ali\AppData\Local\Temp\ccXf3slz.s:541    .text.CellTemp_SetMuxChannel:00000000 CellTemp_SetMuxChannel
C:\Users\Ali\AppData\Local\Temp\ccXf3slz.s:636    .text.CellTemp_SetMuxChannel:00000070 $d
C:\Users\Ali\AppData\Local\Temp\ccXf3slz.s:641    .text.CellTemp_CalculateTemperature:00000000 $t
C:\Users\Ali\AppData\Local\Temp\ccXf3slz.s:647    .text.CellTemp_CalculateTemperature:00000000 CellTemp_CalculateTemperature
C:\Users\Ali\AppData\Local\Temp\ccXf3slz.s:770    .text.CellTemp_CalculateTemperature:000000b0 $d
C:\Users\Ali\AppData\Local\Temp\ccXf3slz.s:785    .text.CellTemp_ReadThermistor:00000000 $t
C:\Users\Ali\AppData\Local\Temp\ccXf3slz.s:791    .text.CellTemp_ReadThermistor:00000000 CellTemp_ReadThermistor
C:\Users\Ali\AppData\Local\Temp\ccXf3slz.s:849    .text.CellTemp_ReadThermistor:00000030 $d
C:\Users\Ali\AppData\Local\Temp\ccXf3slz.s:1554   .rodata.adc_channels:00000000 adc_channels
C:\Users\Ali\AppData\Local\Temp\ccXf3slz.s:855    .text.CellTemp_MonitorTask:00000000 $t
C:\Users\Ali\AppData\Local\Temp\ccXf3slz.s:861    .text.CellTemp_MonitorTask:00000000 CellTemp_MonitorTask
C:\Users\Ali\AppData\Local\Temp\ccXf3slz.s:1317   .text.CellTemp_MonitorTask:000001d0 $d
C:\Users\Ali\AppData\Local\Temp\ccXf3slz.s:1325   .text.CellTemp_SendCANData:00000000 $t
C:\Users\Ali\AppData\Local\Temp\ccXf3slz.s:1331   .text.CellTemp_SendCANData:00000000 CellTemp_SendCANData
C:\Users\Ali\AppData\Local\Temp\ccXf3slz.s:1409   .text.CellTemp_GetTemperatures:00000000 $t
C:\Users\Ali\AppData\Local\Temp\ccXf3slz.s:1415   .text.CellTemp_GetTemperatures:00000000 CellTemp_GetTemperatures
C:\Users\Ali\AppData\Local\Temp\ccXf3slz.s:1495   .text.CellTemp_GetTemperatures:00000044 $d
C:\Users\Ali\AppData\Local\Temp\ccXf3slz.s:1501   .text.CellTemp_GetStats:00000000 $t
C:\Users\Ali\AppData\Local\Temp\ccXf3slz.s:1507   .text.CellTemp_GetStats:00000000 CellTemp_GetStats
C:\Users\Ali\AppData\Local\Temp\ccXf3slz.s:1540   .text.CellTemp_GetStats:00000018 $d
C:\Users\Ali\AppData\Local\Temp\ccXf3slz.s:1545   .rodata.adc_channel_enabled:00000000 $d
C:\Users\Ali\AppData\Local\Temp\ccXf3slz.s:1551   .rodata.adc_channels:00000000 $d
C:\Users\Ali\AppData\Local\Temp\ccXf3slz.s:1563   .bss.temp_state:00000000 $d

UNDEFINED SYMBOLS
HAL_ADC_ConfigChannel
hadc1
CAN_SendMessage
CAN_TEMP_ID
memset
HAL_GPIO_WritePin
HAL_ADC_Start
HAL_ADC_PollForConversion
HAL_ADC_Stop
HAL_ADC_GetValue
osDelay
logf
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccXf3slz.s 			page 45


osKernelGetTickCount
