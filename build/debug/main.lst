ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.text.MX_GPIO_Init,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	MX_GPIO_Init:
  27              	.LFB299:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "cmsis_os.h"
  22:Core/Src/main.c **** 
  23:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/main.c **** #include "cell_temp_handler.h"
  26:Core/Src/main.c **** #include "bq_handler.h"
  27:Core/Src/main.c **** #include "can_manager.h"
  28:Core/Src/main.c **** #include "config_manager.h"
  29:Core/Src/main.c **** #include "error_manager.h"
  30:Core/Src/main.c **** /* USER CODE END Includes */
  31:Core/Src/main.c **** 
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s 			page 2


  32:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* USER CODE END PTD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PD */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  43:Core/Src/main.c **** /* USER CODE BEGIN PM */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* USER CODE END PM */
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  48:Core/Src/main.c **** ADC_HandleTypeDef hadc1;
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** CAN_HandleTypeDef hcan1;
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** CRC_HandleTypeDef hcrc;
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** I2C_HandleTypeDef hi2c1;
  55:Core/Src/main.c **** I2C_HandleTypeDef hi2c3;
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* Definitions for defaultTask */
  58:Core/Src/main.c **** osThreadId_t defaultTaskHandle;
  59:Core/Src/main.c **** const osThreadAttr_t defaultTask_attributes = {
  60:Core/Src/main.c ****   .name = "defaultTask",
  61:Core/Src/main.c ****   .stack_size = 128 * 4,
  62:Core/Src/main.c ****   .priority = (osPriority_t) osPriorityNormal,
  63:Core/Src/main.c **** };
  64:Core/Src/main.c **** /* USER CODE BEGIN PV */
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** /* Definitions for CellVoltageBMS1 */
  67:Core/Src/main.c **** osThreadId_t CellVoltageBMS1Handle;
  68:Core/Src/main.c **** const osThreadAttr_t CellVoltageBMS1_attributes = {
  69:Core/Src/main.c ****   .name = "CellVoltageBMS1",
  70:Core/Src/main.c ****   .stack_size = 128 * 4,
  71:Core/Src/main.c ****   .priority = (osPriority_t) osPriorityHigh,
  72:Core/Src/main.c **** };
  73:Core/Src/main.c **** /* Definitions for CellVoltageBMS2 */
  74:Core/Src/main.c **** osThreadId_t CellVoltageBMS2Handle;
  75:Core/Src/main.c **** const osThreadAttr_t CellVoltageBMS2_attributes = {
  76:Core/Src/main.c ****   .name = "CellVoltageBMS2",
  77:Core/Src/main.c ****   .stack_size = 128 * 4,
  78:Core/Src/main.c ****   .priority = (osPriority_t) osPriorityHigh,
  79:Core/Src/main.c **** };
  80:Core/Src/main.c **** /* Definitions for CellTemperature */
  81:Core/Src/main.c **** osThreadId_t CellTemperatureHandle;
  82:Core/Src/main.c **** const osThreadAttr_t CellTemperature_attributes = {
  83:Core/Src/main.c ****   .name = "CellTemperature",
  84:Core/Src/main.c ****   .stack_size = 128 * 4,
  85:Core/Src/main.c ****   .priority = (osPriority_t) osPriorityHigh,
  86:Core/Src/main.c **** };
  87:Core/Src/main.c **** /* Definitions for CANManager */
  88:Core/Src/main.c **** osThreadId_t CANManagerHandle;
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s 			page 3


  89:Core/Src/main.c **** const osThreadAttr_t CANManager_attributes = {
  90:Core/Src/main.c ****   .name = "CANManager",
  91:Core/Src/main.c ****   .stack_size = 256 * 4,
  92:Core/Src/main.c ****   .priority = (osPriority_t) osPriorityRealtime,
  93:Core/Src/main.c **** };
  94:Core/Src/main.c **** /* Definitions for I2C1 */
  95:Core/Src/main.c **** osMutexId_t I2C1Handle;
  96:Core/Src/main.c **** const osMutexAttr_t I2C1_attributes = {
  97:Core/Src/main.c ****   .name = "I2C1"
  98:Core/Src/main.c **** };
  99:Core/Src/main.c **** /* Definitions for I2C3 */
 100:Core/Src/main.c **** osMutexId_t I2C3Handle;
 101:Core/Src/main.c **** const osMutexAttr_t I2C3_attributes = {
 102:Core/Src/main.c ****   .name = "I2C3"
 103:Core/Src/main.c **** };
 104:Core/Src/main.c **** /* Definitions for CAN */
 105:Core/Src/main.c **** osMutexId_t CANHandle;
 106:Core/Src/main.c **** const osMutexAttr_t CAN_attributes = {
 107:Core/Src/main.c ****   .name = "CAN"
 108:Core/Src/main.c **** };
 109:Core/Src/main.c **** 
 110:Core/Src/main.c **** /* USER CODE BEGIN PV */
 111:Core/Src/main.c **** /* Definitions for BMS Reset Semaphore */
 112:Core/Src/main.c **** osSemaphoreId_t BMSResetSemHandle;
 113:Core/Src/main.c **** const osSemaphoreAttr_t BMSResetSem_attributes = {
 114:Core/Src/main.c ****   .name = "BMSResetSem"
 115:Core/Src/main.c **** };
 116:Core/Src/main.c **** 
 117:Core/Src/main.c **** /* Definitions for BMSResetHandler task */
 118:Core/Src/main.c **** osThreadId_t BMSResetHandlerHandle;
 119:Core/Src/main.c **** const osThreadAttr_t BMSResetHandler_attributes = {
 120:Core/Src/main.c ****   .name = "BMSResetHandler",
 121:Core/Src/main.c ****   .stack_size = 128 * 4,
 122:Core/Src/main.c ****   .priority = (osPriority_t) osPriorityLow,
 123:Core/Src/main.c **** };
 124:Core/Src/main.c **** /* USER CODE END PV */
 125:Core/Src/main.c **** 
 126:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
 127:Core/Src/main.c **** void SystemClock_Config(void);
 128:Core/Src/main.c **** static void MX_GPIO_Init(void);
 129:Core/Src/main.c **** static void MX_ADC1_Init(void);
 130:Core/Src/main.c **** static void MX_CAN1_Init(void);
 131:Core/Src/main.c **** static void MX_CRC_Init(void);
 132:Core/Src/main.c **** static void MX_I2C1_Init(void);
 133:Core/Src/main.c **** static void MX_I2C3_Init(void);
 134:Core/Src/main.c **** void StartDefaultTask(void *argument);
 135:Core/Src/main.c **** 
 136:Core/Src/main.c **** /* USER CODE BEGIN PFP */
 137:Core/Src/main.c **** void ReadBQBMS1(void *argument);
 138:Core/Src/main.c **** void ReadBQBMS2(void *argument);
 139:Core/Src/main.c **** void ReadCellTemps(void *argument);
 140:Core/Src/main.c **** void BMSResetHandlerTask(void *argument);
 141:Core/Src/main.c **** /* USER CODE END PFP */
 142:Core/Src/main.c **** 
 143:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 144:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 145:Core/Src/main.c **** 
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s 			page 4


 146:Core/Src/main.c **** /* USER CODE END 0 */
 147:Core/Src/main.c **** 
 148:Core/Src/main.c **** /**
 149:Core/Src/main.c ****   * @brief  The application entry point.
 150:Core/Src/main.c ****   * @retval int
 151:Core/Src/main.c ****   */
 152:Core/Src/main.c **** int main(void)
 153:Core/Src/main.c **** {
 154:Core/Src/main.c **** 
 155:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 156:Core/Src/main.c ****   // When coming from bootloader, disable all interrupts first
 157:Core/Src/main.c ****   __disable_irq();
 158:Core/Src/main.c **** 
 159:Core/Src/main.c ****   // Disable SysTick (bootloader might have enabled it)
 160:Core/Src/main.c ****   SysTick->CTRL = 0;
 161:Core/Src/main.c ****   SysTick->LOAD = 0;
 162:Core/Src/main.c ****   SysTick->VAL = 0;
 163:Core/Src/main.c **** 
 164:Core/Src/main.c ****   /* USER CODE END 1 */
 165:Core/Src/main.c **** 
 166:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 167:Core/Src/main.c **** 
 168:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 169:Core/Src/main.c ****   HAL_Init();
 170:Core/Src/main.c **** 
 171:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 172:Core/Src/main.c **** 
 173:Core/Src/main.c ****   /* USER CODE END Init */
 174:Core/Src/main.c **** 
 175:Core/Src/main.c ****   /* Configure the system clock */
 176:Core/Src/main.c ****   SystemClock_Config();
 177:Core/Src/main.c **** 
 178:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 179:Core/Src/main.c **** 
 180:Core/Src/main.c ****   /* USER CODE END SysInit */
 181:Core/Src/main.c **** 
 182:Core/Src/main.c ****   /* Initialize all configured peripherals */
 183:Core/Src/main.c ****   MX_GPIO_Init();
 184:Core/Src/main.c ****   MX_ADC1_Init();
 185:Core/Src/main.c ****   MX_CAN1_Init();
 186:Core/Src/main.c ****   MX_CRC_Init();
 187:Core/Src/main.c ****   MX_I2C1_Init();
 188:Core/Src/main.c ****   MX_I2C3_Init();
 189:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 190:Core/Src/main.c ****   
 191:Core/Src/main.c ****   // Calibrate ADC
 192:Core/Src/main.c ****   if (HAL_ADCEx_Calibration_Start(&hadc1, ADC_SINGLE_ENDED) != HAL_OK)
 193:Core/Src/main.c ****   {
 194:Core/Src/main.c ****     Error_Handler();
 195:Core/Src/main.c ****   }
 196:Core/Src/main.c ****   
 197:Core/Src/main.c ****   // Start CAN peripheral
 198:Core/Src/main.c ****   if (HAL_CAN_Start(&hcan1) != HAL_OK)
 199:Core/Src/main.c ****   {
 200:Core/Src/main.c ****     Error_Handler();
 201:Core/Src/main.c ****   }
 202:Core/Src/main.c **** 
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s 			page 5


 203:Core/Src/main.c ****   /* USER CODE END 2 */
 204:Core/Src/main.c **** 
 205:Core/Src/main.c ****   /* Init scheduler */
 206:Core/Src/main.c ****   osKernelInitialize();
 207:Core/Src/main.c ****   /* Create the mutex(es) */
 208:Core/Src/main.c ****   /* creation of I2C1 */
 209:Core/Src/main.c ****   I2C1Handle = osMutexNew(&I2C1_attributes);
 210:Core/Src/main.c **** 
 211:Core/Src/main.c ****   /* creation of I2C3 */
 212:Core/Src/main.c ****   I2C3Handle = osMutexNew(&I2C3_attributes);
 213:Core/Src/main.c **** 
 214:Core/Src/main.c ****   /* creation of CAN */
 215:Core/Src/main.c ****   CANHandle = osMutexNew(&CAN_attributes);
 216:Core/Src/main.c **** 
 217:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_MUTEX */
 218:Core/Src/main.c ****   /* add mutexes, ... */
 219:Core/Src/main.c ****   /* USER CODE END RTOS_MUTEX */
 220:Core/Src/main.c **** 
 221:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_SEMAPHORES */
 222:Core/Src/main.c ****   /* Create BMS reset semaphore (binary semaphore for reset signaling) */
 223:Core/Src/main.c ****   BMSResetSemHandle = osSemaphoreNew(1, 0, &BMSResetSem_attributes);
 224:Core/Src/main.c ****   if (BMSResetSemHandle == NULL)
 225:Core/Src/main.c ****   {
 226:Core/Src/main.c ****     Error_Handler();
 227:Core/Src/main.c ****   }
 228:Core/Src/main.c ****   /* USER CODE END RTOS_SEMAPHORES */
 229:Core/Src/main.c **** 
 230:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_TIMERS */
 231:Core/Src/main.c ****   /* start timers, add new ones, ... */
 232:Core/Src/main.c ****   /* USER CODE END RTOS_TIMERS */
 233:Core/Src/main.c **** 
 234:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_QUEUES */
 235:Core/Src/main.c ****   // Initialize Configuration Manager
 236:Core/Src/main.c ****   Config_Init();
 237:Core/Src/main.c ****   
 238:Core/Src/main.c ****   // Initialize Error Manager
 239:Core/Src/main.c ****   if (ErrorMgr_Init() != HAL_OK)
 240:Core/Src/main.c ****   {
 241:Core/Src/main.c ****     Error_Handler();
 242:Core/Src/main.c ****   }
 243:Core/Src/main.c ****   
 244:Core/Src/main.c ****   // Initialize CAN Manager (creates TX and RX message queues)
 245:Core/Src/main.c ****   if (CAN_Manager_Init() != HAL_OK)
 246:Core/Src/main.c ****   {
 247:Core/Src/main.c ****     Error_Handler();
 248:Core/Src/main.c ****   }
 249:Core/Src/main.c ****   
 250:Core/Src/main.c ****   // Set initial BMS state to IDLE after initialization
 251:Core/Src/main.c ****   ErrorMgr_SetState(BMS_STATE_IDLE);
 252:Core/Src/main.c ****   /* USER CODE END RTOS_QUEUES */
 253:Core/Src/main.c **** 
 254:Core/Src/main.c ****   /* Create the thread(s) */
 255:Core/Src/main.c ****   /* creation of defaultTask */
 256:Core/Src/main.c ****   defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 257:Core/Src/main.c **** 
 258:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_THREADS */
 259:Core/Src/main.c ****   /* creation of CellVoltageBMS1 */
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s 			page 6


 260:Core/Src/main.c ****   CellVoltageBMS1Handle = osThreadNew(ReadBQBMS1, NULL, &CellVoltageBMS1_attributes);
 261:Core/Src/main.c **** 
 262:Core/Src/main.c ****   /* creation of CellVoltageBMS2 */
 263:Core/Src/main.c ****   CellVoltageBMS2Handle = osThreadNew(ReadBQBMS2, NULL, &CellVoltageBMS2_attributes);
 264:Core/Src/main.c **** 
 265:Core/Src/main.c ****   /* creation of CellTemperature */
 266:Core/Src/main.c ****   CellTemperatureHandle = osThreadNew(ReadCellTemps, NULL, &CellTemperature_attributes);
 267:Core/Src/main.c **** 
 268:Core/Src/main.c ****   /* creation of CANManager */
 269:Core/Src/main.c ****   CANManagerHandle = osThreadNew(CAN_ManagerTask, NULL, &CANManager_attributes);
 270:Core/Src/main.c **** 
 271:Core/Src/main.c ****   /* creation of BMSResetHandler */
 272:Core/Src/main.c ****   BMSResetHandlerHandle = osThreadNew(BMSResetHandlerTask, NULL, &BMSResetHandler_attributes);
 273:Core/Src/main.c ****   /* USER CODE END RTOS_THREADS */
 274:Core/Src/main.c **** 
 275:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_EVENTS */
 276:Core/Src/main.c ****   /* add events, ... */
 277:Core/Src/main.c ****   /* USER CODE END RTOS_EVENTS */
 278:Core/Src/main.c **** 
 279:Core/Src/main.c ****   /* Start scheduler */
 280:Core/Src/main.c ****   osKernelStart();
 281:Core/Src/main.c **** 
 282:Core/Src/main.c ****   /* We should never get here as control is now taken by the scheduler */
 283:Core/Src/main.c **** 
 284:Core/Src/main.c ****   /* Infinite loop */
 285:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 286:Core/Src/main.c ****   while (1)
 287:Core/Src/main.c ****   {
 288:Core/Src/main.c ****     /* USER CODE END WHILE */
 289:Core/Src/main.c **** 
 290:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 291:Core/Src/main.c ****   }
 292:Core/Src/main.c ****   /* USER CODE END 3 */
 293:Core/Src/main.c **** }
 294:Core/Src/main.c **** 
 295:Core/Src/main.c **** /**
 296:Core/Src/main.c ****   * @brief System Clock Configuration
 297:Core/Src/main.c ****   * @retval None
 298:Core/Src/main.c ****   */
 299:Core/Src/main.c **** void SystemClock_Config(void)
 300:Core/Src/main.c **** {
 301:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 302:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 303:Core/Src/main.c **** 
 304:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 305:Core/Src/main.c ****   */
 306:Core/Src/main.c ****   if (HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1) != HAL_OK)
 307:Core/Src/main.c ****   {
 308:Core/Src/main.c ****     Error_Handler();
 309:Core/Src/main.c ****   }
 310:Core/Src/main.c **** 
 311:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 312:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 313:Core/Src/main.c ****   */
 314:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 315:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 316:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s 			page 7


 317:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 318:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 319:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 2;
 320:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 20;
 321:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
 322:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 323:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 324:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 325:Core/Src/main.c ****   {
 326:Core/Src/main.c ****     Error_Handler();
 327:Core/Src/main.c ****   }
 328:Core/Src/main.c **** 
 329:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 330:Core/Src/main.c ****   */
 331:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 332:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 333:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 334:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 335:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 336:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 337:Core/Src/main.c **** 
 338:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
 339:Core/Src/main.c ****   {
 340:Core/Src/main.c ****     Error_Handler();  
 341:Core/Src/main.c ****   }
 342:Core/Src/main.c **** }
 343:Core/Src/main.c **** 
 344:Core/Src/main.c **** /**
 345:Core/Src/main.c ****   * @brief ADC1 Initialization Function
 346:Core/Src/main.c ****   * @param None
 347:Core/Src/main.c ****   * @retval None
 348:Core/Src/main.c ****   */
 349:Core/Src/main.c **** static void MX_ADC1_Init(void)
 350:Core/Src/main.c **** {
 351:Core/Src/main.c **** 
 352:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 0 */
 353:Core/Src/main.c **** 
 354:Core/Src/main.c ****   /* USER CODE END ADC1_Init 0 */
 355:Core/Src/main.c **** 
 356:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 357:Core/Src/main.c **** 
 358:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 1 */
 359:Core/Src/main.c **** 
 360:Core/Src/main.c ****   /* USER CODE END ADC1_Init 1 */
 361:Core/Src/main.c **** 
 362:Core/Src/main.c ****   /** Common config
 363:Core/Src/main.c ****   */
 364:Core/Src/main.c ****   hadc1.Instance = ADC1;
 365:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 366:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 367:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 368:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 369:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 370:Core/Src/main.c ****   hadc1.Init.LowPowerAutoWait = DISABLE;
 371:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
 372:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 373:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s 			page 8


 374:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 375:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 376:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = DISABLE;
 377:Core/Src/main.c ****   hadc1.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 378:Core/Src/main.c ****   hadc1.Init.OversamplingMode = DISABLE;
 379:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 380:Core/Src/main.c ****   {
 381:Core/Src/main.c ****     Error_Handler();
 382:Core/Src/main.c ****   }
 383:Core/Src/main.c **** 
 384:Core/Src/main.c ****   /** Configure Regular Channel
 385:Core/Src/main.c ****   */
 386:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_5;  // ADC1 (PA0) - first thermistor channel
 387:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 388:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_640CYCLES_5;  // Longer sampling for high impedance thermis
 389:Core/Src/main.c ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 390:Core/Src/main.c ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 391:Core/Src/main.c ****   sConfig.Offset = 0;
 392:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 393:Core/Src/main.c ****   {
 394:Core/Src/main.c ****     Error_Handler();
 395:Core/Src/main.c ****   }
 396:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 2 */
 397:Core/Src/main.c **** 
 398:Core/Src/main.c ****   /* USER CODE END ADC1_Init 2 */
 399:Core/Src/main.c **** 
 400:Core/Src/main.c **** }
 401:Core/Src/main.c **** 
 402:Core/Src/main.c **** /**
 403:Core/Src/main.c ****   * @brief CAN1 Initialization Function
 404:Core/Src/main.c ****   * @param None
 405:Core/Src/main.c ****   * @retval None
 406:Core/Src/main.c ****   */
 407:Core/Src/main.c **** static void MX_CAN1_Init(void)
 408:Core/Src/main.c **** {
 409:Core/Src/main.c **** 
 410:Core/Src/main.c ****   /* USER CODE BEGIN CAN1_Init 0 */
 411:Core/Src/main.c **** 
 412:Core/Src/main.c ****   /* USER CODE END CAN1_Init 0 */
 413:Core/Src/main.c **** 
 414:Core/Src/main.c ****   /* USER CODE BEGIN CAN1_Init 1 */
 415:Core/Src/main.c **** 
 416:Core/Src/main.c ****   /* USER CODE END CAN1_Init 1 */
 417:Core/Src/main.c ****   hcan1.Instance = CAN1;
 418:Core/Src/main.c ****   hcan1.Init.Prescaler = 10;
 419:Core/Src/main.c ****   hcan1.Init.Mode = CAN_MODE_NORMAL;
 420:Core/Src/main.c ****   hcan1.Init.SyncJumpWidth = CAN_SJW_1TQ;
 421:Core/Src/main.c ****   hcan1.Init.TimeSeg1 = CAN_BS1_13TQ;
 422:Core/Src/main.c ****   hcan1.Init.TimeSeg2 = CAN_BS2_2TQ;
 423:Core/Src/main.c ****   hcan1.Init.TimeTriggeredMode = DISABLE;
 424:Core/Src/main.c ****   hcan1.Init.AutoBusOff = DISABLE;
 425:Core/Src/main.c ****   hcan1.Init.AutoWakeUp = DISABLE;
 426:Core/Src/main.c ****   hcan1.Init.AutoRetransmission = DISABLE;
 427:Core/Src/main.c ****   hcan1.Init.ReceiveFifoLocked = DISABLE;
 428:Core/Src/main.c ****   hcan1.Init.TransmitFifoPriority = DISABLE;
 429:Core/Src/main.c ****   if (HAL_CAN_Init(&hcan1) != HAL_OK)
 430:Core/Src/main.c ****   {
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s 			page 9


 431:Core/Src/main.c ****     Error_Handler();
 432:Core/Src/main.c ****   }
 433:Core/Src/main.c ****   /* USER CODE BEGIN CAN1_Init 2 */
 434:Core/Src/main.c ****   
 435:Core/Src/main.c ****   // Configure CAN filter BEFORE starting CAN
 436:Core/Src/main.c ****   // Accept all extended CAN IDs (for debugging)
 437:Core/Src/main.c ****   CAN_FilterTypeDef filterConfig;
 438:Core/Src/main.c ****   filterConfig.FilterBank = 0;
 439:Core/Src/main.c ****   filterConfig.FilterMode = CAN_FILTERMODE_IDMASK;
 440:Core/Src/main.c ****   filterConfig.FilterScale = CAN_FILTERSCALE_32BIT;
 441:Core/Src/main.c ****   
 442:Core/Src/main.c ****   // Accept all extended IDs: ID=0, Mask=0 means "don't care about any bits"
 443:Core/Src/main.c ****   filterConfig.FilterIdHigh = 0x0000;
 444:Core/Src/main.c ****   filterConfig.FilterIdLow = 0x0004;   // Only IDE bit set (extended ID)
 445:Core/Src/main.c ****   filterConfig.FilterMaskIdHigh = 0x0000;  // Don't care about any ID bits
 446:Core/Src/main.c ****   filterConfig.FilterMaskIdLow = 0x0004;   // But we DO care about IDE bit (only extended)
 447:Core/Src/main.c ****   
 448:Core/Src/main.c ****   filterConfig.FilterFIFOAssignment = CAN_RX_FIFO0;
 449:Core/Src/main.c ****   filterConfig.FilterActivation = ENABLE;
 450:Core/Src/main.c ****   filterConfig.SlaveStartFilterBank = 14;
 451:Core/Src/main.c ****   
 452:Core/Src/main.c ****   if (HAL_CAN_ConfigFilter(&hcan1, &filterConfig) != HAL_OK)
 453:Core/Src/main.c ****   {
 454:Core/Src/main.c ****     Error_Handler();
 455:Core/Src/main.c ****   }
 456:Core/Src/main.c **** 
 457:Core/Src/main.c ****   /* USER CODE END CAN1_Init 2 */
 458:Core/Src/main.c **** 
 459:Core/Src/main.c **** }
 460:Core/Src/main.c **** 
 461:Core/Src/main.c **** /**
 462:Core/Src/main.c ****   * @brief CRC Initialization Function
 463:Core/Src/main.c ****   * @param None
 464:Core/Src/main.c ****   * @retval None
 465:Core/Src/main.c ****   */
 466:Core/Src/main.c **** static void MX_CRC_Init(void)
 467:Core/Src/main.c **** {
 468:Core/Src/main.c **** 
 469:Core/Src/main.c ****   /* USER CODE BEGIN CRC_Init 0 */
 470:Core/Src/main.c **** 
 471:Core/Src/main.c ****   /* USER CODE END CRC_Init 0 */
 472:Core/Src/main.c **** 
 473:Core/Src/main.c ****   /* USER CODE BEGIN CRC_Init 1 */
 474:Core/Src/main.c **** 
 475:Core/Src/main.c ****   /* USER CODE END CRC_Init 1 */
 476:Core/Src/main.c ****   hcrc.Instance = CRC;
 477:Core/Src/main.c ****   hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
 478:Core/Src/main.c ****   hcrc.Init.DefaultInitValueUse = DEFAULT_INIT_VALUE_ENABLE;
 479:Core/Src/main.c ****   hcrc.Init.InputDataInversionMode = CRC_INPUTDATA_INVERSION_NONE;
 480:Core/Src/main.c ****   hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
 481:Core/Src/main.c ****   hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
 482:Core/Src/main.c ****   if (HAL_CRC_Init(&hcrc) != HAL_OK)
 483:Core/Src/main.c ****   {
 484:Core/Src/main.c ****     Error_Handler();
 485:Core/Src/main.c ****   }
 486:Core/Src/main.c ****   /* USER CODE BEGIN CRC_Init 2 */
 487:Core/Src/main.c **** 
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s 			page 10


 488:Core/Src/main.c ****   /* USER CODE END CRC_Init 2 */
 489:Core/Src/main.c **** 
 490:Core/Src/main.c **** }
 491:Core/Src/main.c **** 
 492:Core/Src/main.c **** /**
 493:Core/Src/main.c ****   * @brief I2C1 Initialization Function
 494:Core/Src/main.c ****   * @param None
 495:Core/Src/main.c ****   * @retval None
 496:Core/Src/main.c ****   */
 497:Core/Src/main.c **** static void MX_I2C1_Init(void)
 498:Core/Src/main.c **** {
 499:Core/Src/main.c **** 
 500:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 0 */
 501:Core/Src/main.c **** 
 502:Core/Src/main.c ****   /* USER CODE END I2C1_Init 0 */
 503:Core/Src/main.c **** 
 504:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 1 */
 505:Core/Src/main.c **** 
 506:Core/Src/main.c ****   /* USER CODE END I2C1_Init 1 */
 507:Core/Src/main.c ****   hi2c1.Instance = I2C1;
 508:Core/Src/main.c ****   hi2c1.Init.Timing = 0x00503D58;
 509:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 510:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 511:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 512:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 513:Core/Src/main.c ****   hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 514:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 515:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 516:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 517:Core/Src/main.c ****   {
 518:Core/Src/main.c ****     Error_Handler();
 519:Core/Src/main.c ****   }
 520:Core/Src/main.c **** 
 521:Core/Src/main.c ****   /** Configure Analogue filter
 522:Core/Src/main.c ****   */
 523:Core/Src/main.c ****   if (HAL_I2CEx_ConfigAnalogFilter(&hi2c1, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 524:Core/Src/main.c ****   {
 525:Core/Src/main.c ****     Error_Handler();
 526:Core/Src/main.c ****   }
 527:Core/Src/main.c **** 
 528:Core/Src/main.c ****   /** Configure Digital filter
 529:Core/Src/main.c ****   */
 530:Core/Src/main.c ****   if (HAL_I2CEx_ConfigDigitalFilter(&hi2c1, 0) != HAL_OK)
 531:Core/Src/main.c ****   {
 532:Core/Src/main.c ****     Error_Handler();
 533:Core/Src/main.c ****   }
 534:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 2 */
 535:Core/Src/main.c **** 
 536:Core/Src/main.c ****   /* USER CODE END I2C1_Init 2 */
 537:Core/Src/main.c **** 
 538:Core/Src/main.c **** }
 539:Core/Src/main.c **** 
 540:Core/Src/main.c **** /**
 541:Core/Src/main.c ****   * @brief I2C3 Initialization Function
 542:Core/Src/main.c ****   * @param None
 543:Core/Src/main.c ****   * @retval None
 544:Core/Src/main.c ****   */
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s 			page 11


 545:Core/Src/main.c **** static void MX_I2C3_Init(void)
 546:Core/Src/main.c **** {
 547:Core/Src/main.c **** 
 548:Core/Src/main.c ****   /* USER CODE BEGIN I2C3_Init 0 */
 549:Core/Src/main.c **** 
 550:Core/Src/main.c ****   /* USER CODE END I2C3_Init 0 */
 551:Core/Src/main.c **** 
 552:Core/Src/main.c ****   /* USER CODE BEGIN I2C3_Init 1 */
 553:Core/Src/main.c **** 
 554:Core/Src/main.c ****   /* USER CODE END I2C3_Init 1 */
 555:Core/Src/main.c ****   hi2c3.Instance = I2C3;
 556:Core/Src/main.c ****   hi2c3.Init.Timing = 0x00503D58;
 557:Core/Src/main.c ****   hi2c3.Init.OwnAddress1 = 0;
 558:Core/Src/main.c ****   hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 559:Core/Src/main.c ****   hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 560:Core/Src/main.c ****   hi2c3.Init.OwnAddress2 = 0;
 561:Core/Src/main.c ****   hi2c3.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 562:Core/Src/main.c ****   hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 563:Core/Src/main.c ****   hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 564:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 565:Core/Src/main.c ****   {
 566:Core/Src/main.c ****     Error_Handler();
 567:Core/Src/main.c ****   }
 568:Core/Src/main.c **** 
 569:Core/Src/main.c ****   /** Configure Analogue filter
 570:Core/Src/main.c ****   */
 571:Core/Src/main.c ****   if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 572:Core/Src/main.c ****   {
 573:Core/Src/main.c ****     Error_Handler();
 574:Core/Src/main.c ****   }
 575:Core/Src/main.c **** 
 576:Core/Src/main.c ****   /** Configure Digital filter
 577:Core/Src/main.c ****   */
 578:Core/Src/main.c ****   if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 579:Core/Src/main.c ****   {
 580:Core/Src/main.c ****     Error_Handler();
 581:Core/Src/main.c ****   }
 582:Core/Src/main.c ****   /* USER CODE BEGIN I2C3_Init 2 */
 583:Core/Src/main.c **** 
 584:Core/Src/main.c ****   /* USER CODE END I2C3_Init 2 */
 585:Core/Src/main.c **** 
 586:Core/Src/main.c **** }
 587:Core/Src/main.c **** 
 588:Core/Src/main.c **** /**
 589:Core/Src/main.c ****   * @brief GPIO Initialization Function
 590:Core/Src/main.c ****   * @param None
 591:Core/Src/main.c ****   * @retval None
 592:Core/Src/main.c ****   */
 593:Core/Src/main.c **** static void MX_GPIO_Init(void)
 594:Core/Src/main.c **** {
  28              		.loc 1 594 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  33              		.cfi_def_cfa_offset 20
  34              		.cfi_offset 4, -20
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s 			page 12


  35              		.cfi_offset 5, -16
  36              		.cfi_offset 6, -12
  37              		.cfi_offset 7, -8
  38              		.cfi_offset 14, -4
  39 0002 89B0     		sub	sp, sp, #36
  40              		.cfi_def_cfa_offset 56
 595:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  41              		.loc 1 595 3 view .LVU1
  42              		.loc 1 595 20 is_stmt 0 view .LVU2
  43 0004 03AD     		add	r5, sp, #12
  44 0006 0024     		movs	r4, #0
  45 0008 0394     		str	r4, [sp, #12]
  46 000a 0494     		str	r4, [sp, #16]
  47 000c 0594     		str	r4, [sp, #20]
  48 000e 0694     		str	r4, [sp, #24]
  49 0010 0794     		str	r4, [sp, #28]
 596:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_1 */
 597:Core/Src/main.c **** 
 598:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_1 */
 599:Core/Src/main.c **** 
 600:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 601:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  50              		.loc 1 601 3 is_stmt 1 view .LVU3
  51              	.LBB9:
  52              		.loc 1 601 3 view .LVU4
  53              		.loc 1 601 3 view .LVU5
  54 0012 204B     		ldr	r3, .L3
  55 0014 DA6C     		ldr	r2, [r3, #76]
  56 0016 42F00102 		orr	r2, r2, #1
  57 001a DA64     		str	r2, [r3, #76]
  58              		.loc 1 601 3 view .LVU6
  59 001c DA6C     		ldr	r2, [r3, #76]
  60 001e 02F00102 		and	r2, r2, #1
  61 0022 0192     		str	r2, [sp, #4]
  62              		.loc 1 601 3 view .LVU7
  63 0024 019A     		ldr	r2, [sp, #4]
  64              	.LBE9:
  65              		.loc 1 601 3 view .LVU8
 602:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  66              		.loc 1 602 3 view .LVU9
  67              	.LBB10:
  68              		.loc 1 602 3 view .LVU10
  69              		.loc 1 602 3 view .LVU11
  70 0026 DA6C     		ldr	r2, [r3, #76]
  71 0028 42F00202 		orr	r2, r2, #2
  72 002c DA64     		str	r2, [r3, #76]
  73              		.loc 1 602 3 view .LVU12
  74 002e DB6C     		ldr	r3, [r3, #76]
  75 0030 03F00203 		and	r3, r3, #2
  76 0034 0293     		str	r3, [sp, #8]
  77              		.loc 1 602 3 view .LVU13
  78 0036 029B     		ldr	r3, [sp, #8]
  79              	.LBE10:
  80              		.loc 1 602 3 view .LVU14
 603:Core/Src/main.c **** 
 604:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 605:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, MUX_SIG1_Pin|MUX_SIG3_Pin|BMS_RESET_Pin, GPIO_PIN_RESET);
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s 			page 13


  81              		.loc 1 605 3 view .LVU15
  82 0038 174E     		ldr	r6, .L3+4
  83 003a 2246     		mov	r2, r4
  84 003c 6221     		movs	r1, #98
  85 003e 3046     		mov	r0, r6
  86 0040 FFF7FEFF 		bl	HAL_GPIO_WritePin
  87              	.LVL0:
 606:Core/Src/main.c **** 
 607:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 608:Core/Src/main.c ****   HAL_GPIO_WritePin(MUX_SIG2_GPIO_Port, MUX_SIG2_Pin, GPIO_PIN_RESET);
  88              		.loc 1 608 3 view .LVU16
  89 0044 2246     		mov	r2, r4
  90 0046 4FF48071 		mov	r1, #256
  91 004a 4FF09040 		mov	r0, #1207959552
  92 004e FFF7FEFF 		bl	HAL_GPIO_WritePin
  93              	.LVL1:
 609:Core/Src/main.c **** 
 610:Core/Src/main.c ****   /*Configure GPIO pins : MUX_SIG1_Pin MUX_SIG3_Pin BMS_RESET_Pin */
 611:Core/Src/main.c ****   GPIO_InitStruct.Pin = MUX_SIG1_Pin|MUX_SIG3_Pin|BMS_RESET_Pin;
  94              		.loc 1 611 3 view .LVU17
  95              		.loc 1 611 23 is_stmt 0 view .LVU18
  96 0052 6223     		movs	r3, #98
  97 0054 0393     		str	r3, [sp, #12]
 612:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  98              		.loc 1 612 3 is_stmt 1 view .LVU19
  99              		.loc 1 612 24 is_stmt 0 view .LVU20
 100 0056 0127     		movs	r7, #1
 101 0058 0497     		str	r7, [sp, #16]
 613:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 102              		.loc 1 613 3 is_stmt 1 view .LVU21
 103              		.loc 1 613 24 is_stmt 0 view .LVU22
 104 005a 0594     		str	r4, [sp, #20]
 614:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 105              		.loc 1 614 3 is_stmt 1 view .LVU23
 106              		.loc 1 614 25 is_stmt 0 view .LVU24
 107 005c 0694     		str	r4, [sp, #24]
 615:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 108              		.loc 1 615 3 is_stmt 1 view .LVU25
 109 005e 2946     		mov	r1, r5
 110 0060 3046     		mov	r0, r6
 111 0062 FFF7FEFF 		bl	HAL_GPIO_Init
 112              	.LVL2:
 616:Core/Src/main.c **** 
 617:Core/Src/main.c ****   /*Configure GPIO pin : MUX_SIG2_Pin */
 618:Core/Src/main.c ****   GPIO_InitStruct.Pin = MUX_SIG2_Pin;
 113              		.loc 1 618 3 view .LVU26
 114              		.loc 1 618 23 is_stmt 0 view .LVU27
 115 0066 4FF48073 		mov	r3, #256
 116 006a 0393     		str	r3, [sp, #12]
 619:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 117              		.loc 1 619 3 is_stmt 1 view .LVU28
 118              		.loc 1 619 24 is_stmt 0 view .LVU29
 119 006c 0497     		str	r7, [sp, #16]
 620:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 120              		.loc 1 620 3 is_stmt 1 view .LVU30
 121              		.loc 1 620 24 is_stmt 0 view .LVU31
 122 006e 0594     		str	r4, [sp, #20]
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s 			page 14


 621:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 123              		.loc 1 621 3 is_stmt 1 view .LVU32
 124              		.loc 1 621 25 is_stmt 0 view .LVU33
 125 0070 0694     		str	r4, [sp, #24]
 622:Core/Src/main.c ****   HAL_GPIO_Init(MUX_SIG2_GPIO_Port, &GPIO_InitStruct);
 126              		.loc 1 622 3 is_stmt 1 view .LVU34
 127 0072 2946     		mov	r1, r5
 128 0074 4FF09040 		mov	r0, #1207959552
 129 0078 FFF7FEFF 		bl	HAL_GPIO_Init
 130              	.LVL3:
 623:Core/Src/main.c **** 
 624:Core/Src/main.c ****   /*Configure GPIO pin : ALERT_IN_Pin */
 625:Core/Src/main.c ****   GPIO_InitStruct.Pin = ALERT_IN_Pin;
 131              		.loc 1 625 3 view .LVU35
 132              		.loc 1 625 23 is_stmt 0 view .LVU36
 133 007c 8023     		movs	r3, #128
 134 007e 0393     		str	r3, [sp, #12]
 626:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING_FALLING;
 135              		.loc 1 626 3 is_stmt 1 view .LVU37
 136              		.loc 1 626 24 is_stmt 0 view .LVU38
 137 0080 4FF44413 		mov	r3, #3211264
 138 0084 0493     		str	r3, [sp, #16]
 627:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 139              		.loc 1 627 3 is_stmt 1 view .LVU39
 140              		.loc 1 627 24 is_stmt 0 view .LVU40
 141 0086 0594     		str	r4, [sp, #20]
 628:Core/Src/main.c ****   HAL_GPIO_Init(ALERT_IN_GPIO_Port, &GPIO_InitStruct);
 142              		.loc 1 628 3 is_stmt 1 view .LVU41
 143 0088 2946     		mov	r1, r5
 144 008a 3046     		mov	r0, r6
 145 008c FFF7FEFF 		bl	HAL_GPIO_Init
 146              	.LVL4:
 629:Core/Src/main.c **** 
 630:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_2 */
 631:Core/Src/main.c **** 
 632:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_2 */
 633:Core/Src/main.c **** }
 147              		.loc 1 633 1 is_stmt 0 view .LVU42
 148 0090 09B0     		add	sp, sp, #36
 149              		.cfi_def_cfa_offset 20
 150              		@ sp needed
 151 0092 F0BD     		pop	{r4, r5, r6, r7, pc}
 152              	.L4:
 153              		.align	2
 154              	.L3:
 155 0094 00100240 		.word	1073876992
 156 0098 00040048 		.word	1207960576
 157              		.cfi_endproc
 158              	.LFE299:
 160              		.section	.text.StartDefaultTask,"ax",%progbits
 161              		.align	1
 162              		.global	StartDefaultTask
 163              		.syntax unified
 164              		.thumb
 165              		.thumb_func
 167              	StartDefaultTask:
 168              	.LFB301:
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s 			page 15


 634:Core/Src/main.c **** 
 635:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 636:Core/Src/main.c **** 
 637:Core/Src/main.c **** /**
 638:Core/Src/main.c ****   * @brief  Application malloc failed hook (FreeRTOS)
 639:Core/Src/main.c ****   * @retval None
 640:Core/Src/main.c ****   */
 641:Core/Src/main.c **** void vApplicationMallocFailedHook(void)
 642:Core/Src/main.c **** {
 643:Core/Src/main.c ****   /* Called if a call to pvPortMalloc() fails because there is insufficient
 644:Core/Src/main.c ****      free memory available in the FreeRTOS heap. This usually means the heap
 645:Core/Src/main.c ****      size is too small. Blink MUX_SIG1 rapidly to indicate heap failure. */
 646:Core/Src/main.c ****   taskDISABLE_INTERRUPTS();
 647:Core/Src/main.c ****   for(;;) {
 648:Core/Src/main.c ****     HAL_GPIO_TogglePin(GPIOB, MUX_SIG1_Pin);
 649:Core/Src/main.c ****     for(volatile uint32_t i = 0; i < 100000; i++);  // Busy wait
 650:Core/Src/main.c ****   }
 651:Core/Src/main.c **** }
 652:Core/Src/main.c **** 
 653:Core/Src/main.c **** /* USER CODE END 4 */
 654:Core/Src/main.c **** 
 655:Core/Src/main.c **** /* USER CODE BEGIN Header_StartDefaultTask */
 656:Core/Src/main.c **** /**
 657:Core/Src/main.c ****   * @brief  Function implementing the defaultTask thread.
 658:Core/Src/main.c ****   * @param  argument: Not used
 659:Core/Src/main.c ****   * @retval None
 660:Core/Src/main.c ****   */
 661:Core/Src/main.c **** /* USER CODE END Header_StartDefaultTask */
 662:Core/Src/main.c **** void StartDefaultTask(void *argument)
 663:Core/Src/main.c **** {
 169              		.loc 1 663 1 is_stmt 1 view -0
 170              		.cfi_startproc
 171              		@ Volatile: function does not return.
 172              		@ args = 0, pretend = 0, frame = 0
 173              		@ frame_needed = 0, uses_anonymous_args = 0
 174              	.LVL5:
 175              		.loc 1 663 1 is_stmt 0 view .LVU44
 176 0000 08B5     		push	{r3, lr}
 177              		.cfi_def_cfa_offset 8
 178              		.cfi_offset 3, -8
 179              		.cfi_offset 14, -4
 180              	.LVL6:
 181              	.L6:
 664:Core/Src/main.c ****   /* USER CODE BEGIN 5 */
 665:Core/Src/main.c ****   /* Infinite loop */
 666:Core/Src/main.c ****   for(;;)
 182              		.loc 1 666 3 is_stmt 1 view .LVU45
 667:Core/Src/main.c ****   {
 668:Core/Src/main.c ****     osDelay(1);
 183              		.loc 1 668 5 discriminator 1 view .LVU46
 184 0002 0120     		movs	r0, #1
 185 0004 FFF7FEFF 		bl	osDelay
 186              	.LVL7:
 666:Core/Src/main.c ****   {
 187              		.loc 1 666 3 view .LVU47
 188 0008 FBE7     		b	.L6
 189              		.cfi_endproc
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s 			page 16


 190              	.LFE301:
 192              		.section	.text.ReadBQBMS1,"ax",%progbits
 193              		.align	1
 194              		.global	ReadBQBMS1
 195              		.syntax unified
 196              		.thumb
 197              		.thumb_func
 199              	ReadBQBMS1:
 200              	.LVL8:
 201              	.LFB302:
 669:Core/Src/main.c ****   }
 670:Core/Src/main.c ****   /* USER CODE END 5 */
 671:Core/Src/main.c **** }
 672:Core/Src/main.c **** 
 673:Core/Src/main.c **** /* USER CODE BEGIN Header_ReadCellVoltage */
 674:Core/Src/main.c **** /**
 675:Core/Src/main.c **** * @brief Function implementing the CellVoltage thread.
 676:Core/Src/main.c **** * @param argument: Not used
 677:Core/Src/main.c **** * @retval None
 678:Core/Src/main.c **** */
 679:Core/Src/main.c **** /* USER CODE BEGIN Header_ReadCellVoltageBMS1 */
 680:Core/Src/main.c **** /**
 681:Core/Src/main.c **** * @brief Function implementing the CellVoltageBMS1 thread.
 682:Core/Src/main.c **** * @param argument: Not used
 683:Core/Src/main.c **** * @retval None
 684:Core/Src/main.c **** */
 685:Core/Src/main.c **** /* USER CODE END Header_ReadCellVoltageBMS1 */
 686:Core/Src/main.c **** void ReadBQBMS1(void *argument)
 687:Core/Src/main.c **** {
 202              		.loc 1 687 1 view -0
 203              		.cfi_startproc
 204              		@ args = 0, pretend = 0, frame = 0
 205              		@ frame_needed = 0, uses_anonymous_args = 0
 206              		.loc 1 687 1 is_stmt 0 view .LVU49
 207 0000 08B5     		push	{r3, lr}
 208              		.cfi_def_cfa_offset 8
 209              		.cfi_offset 3, -8
 210              		.cfi_offset 14, -4
 688:Core/Src/main.c ****   /* USER CODE BEGIN ReadCellVoltageBMS1 */
 689:Core/Src/main.c ****   /* Call the BMS1 cell voltage monitoring task */
 690:Core/Src/main.c ****   BQ_MonitorTask(argument);
 211              		.loc 1 690 3 is_stmt 1 view .LVU50
 212 0002 FFF7FEFF 		bl	BQ_MonitorTask
 213              	.LVL9:
 691:Core/Src/main.c ****   /* USER CODE END ReadCellVoltageBMS1 */
 692:Core/Src/main.c **** }
 214              		.loc 1 692 1 is_stmt 0 view .LVU51
 215 0006 08BD     		pop	{r3, pc}
 216              		.cfi_endproc
 217              	.LFE302:
 219              		.section	.text.ReadBQBMS2,"ax",%progbits
 220              		.align	1
 221              		.global	ReadBQBMS2
 222              		.syntax unified
 223              		.thumb
 224              		.thumb_func
 226              	ReadBQBMS2:
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s 			page 17


 227              	.LVL10:
 228              	.LFB303:
 693:Core/Src/main.c **** 
 694:Core/Src/main.c **** /* USER CODE BEGIN Header_ReadCellVoltageBMS2 */
 695:Core/Src/main.c **** /**
 696:Core/Src/main.c **** * @brief Function implementing the CellVoltageBMS2 thread.
 697:Core/Src/main.c **** * @param argument: Not used
 698:Core/Src/main.c **** * @retval None
 699:Core/Src/main.c **** */
 700:Core/Src/main.c **** /* USER CODE END Header_ReadCellVoltageBMS2 */
 701:Core/Src/main.c **** void ReadBQBMS2(void *argument)
 702:Core/Src/main.c **** {
 229              		.loc 1 702 1 is_stmt 1 view -0
 230              		.cfi_startproc
 231              		@ args = 0, pretend = 0, frame = 0
 232              		@ frame_needed = 0, uses_anonymous_args = 0
 233              		.loc 1 702 1 is_stmt 0 view .LVU53
 234 0000 08B5     		push	{r3, lr}
 235              		.cfi_def_cfa_offset 8
 236              		.cfi_offset 3, -8
 237              		.cfi_offset 14, -4
 703:Core/Src/main.c ****   /* USER CODE BEGIN ReadCellVoltageBMS2 */
 704:Core/Src/main.c ****   /* Call the BMS2 cell voltage monitoring task */
 705:Core/Src/main.c ****   BQ_MonitorTask_BMS2(argument);
 238              		.loc 1 705 3 is_stmt 1 view .LVU54
 239 0002 FFF7FEFF 		bl	BQ_MonitorTask_BMS2
 240              	.LVL11:
 706:Core/Src/main.c ****   /* USER CODE END ReadCellVoltageBMS2 */
 707:Core/Src/main.c **** }
 241              		.loc 1 707 1 is_stmt 0 view .LVU55
 242 0006 08BD     		pop	{r3, pc}
 243              		.cfi_endproc
 244              	.LFE303:
 246              		.section	.text.ReadCellTemps,"ax",%progbits
 247              		.align	1
 248              		.global	ReadCellTemps
 249              		.syntax unified
 250              		.thumb
 251              		.thumb_func
 253              	ReadCellTemps:
 254              	.LVL12:
 255              	.LFB304:
 708:Core/Src/main.c **** 
 709:Core/Src/main.c **** /* USER CODE BEGIN Header_ReadCellTemps */
 710:Core/Src/main.c **** /**
 711:Core/Src/main.c **** * @brief Function implementing the CellTemperature thread.
 712:Core/Src/main.c **** * @param argument: Not used
 713:Core/Src/main.c **** * @retval None
 714:Core/Src/main.c **** */
 715:Core/Src/main.c **** /* USER CODE END Header_ReadCellTemps */
 716:Core/Src/main.c **** void ReadCellTemps(void *argument)
 717:Core/Src/main.c **** {
 256              		.loc 1 717 1 is_stmt 1 view -0
 257              		.cfi_startproc
 258              		@ args = 0, pretend = 0, frame = 0
 259              		@ frame_needed = 0, uses_anonymous_args = 0
 260              		.loc 1 717 1 is_stmt 0 view .LVU57
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s 			page 18


 261 0000 08B5     		push	{r3, lr}
 262              		.cfi_def_cfa_offset 8
 263              		.cfi_offset 3, -8
 264              		.cfi_offset 14, -4
 718:Core/Src/main.c ****   /* USER CODE BEGIN ReadCellTemps */
 719:Core/Src/main.c ****   /* Call the cell temperature monitoring task */
 720:Core/Src/main.c ****   CellTemp_MonitorTask(argument);
 265              		.loc 1 720 3 is_stmt 1 view .LVU58
 266 0002 FFF7FEFF 		bl	CellTemp_MonitorTask
 267              	.LVL13:
 721:Core/Src/main.c ****   /* USER CODE END ReadCellTemps */
 722:Core/Src/main.c **** }
 268              		.loc 1 722 1 is_stmt 0 view .LVU59
 269 0006 08BD     		pop	{r3, pc}
 270              		.cfi_endproc
 271              	.LFE304:
 273              		.section	.text.BMSResetHandlerTask,"ax",%progbits
 274              		.align	1
 275              		.global	BMSResetHandlerTask
 276              		.syntax unified
 277              		.thumb
 278              		.thumb_func
 280              	BMSResetHandlerTask:
 281              	.LFB305:
 723:Core/Src/main.c **** 
 724:Core/Src/main.c **** /* USER CODE BEGIN Header_BMSResetHandlerTask */
 725:Core/Src/main.c **** /**
 726:Core/Src/main.c **** * @brief Function implementing the BMSResetHandler thread.
 727:Core/Src/main.c **** * @param argument: Not used
 728:Core/Src/main.c **** * @retval None
 729:Core/Src/main.c **** * @note  This task waits for a semaphore signal to perform BMS chip reset.
 730:Core/Src/main.c **** *        Using a dedicated task prevents blocking the CAN manager during
 731:Core/Src/main.c **** *        the 600ms reset sequence (500ms + 100ms delays).
 732:Core/Src/main.c **** */
 733:Core/Src/main.c **** /* USER CODE END Header_BMSResetHandlerTask */
 734:Core/Src/main.c **** void BMSResetHandlerTask(void *argument)
 735:Core/Src/main.c **** {
 282              		.loc 1 735 1 is_stmt 1 view -0
 283              		.cfi_startproc
 284              		@ Volatile: function does not return.
 285              		@ args = 0, pretend = 0, frame = 0
 286              		@ frame_needed = 0, uses_anonymous_args = 0
 287              	.LVL14:
 288              		.loc 1 735 1 is_stmt 0 view .LVU61
 289 0000 08B5     		push	{r3, lr}
 290              		.cfi_def_cfa_offset 8
 291              		.cfi_offset 3, -8
 292              		.cfi_offset 14, -4
 293              	.LVL15:
 294              	.L15:
 736:Core/Src/main.c ****   /* USER CODE BEGIN BMSResetHandlerTask */
 737:Core/Src/main.c ****   /* Infinite loop */
 738:Core/Src/main.c ****   for(;;)
 295              		.loc 1 738 3 is_stmt 1 view .LVU62
 739:Core/Src/main.c ****   {
 740:Core/Src/main.c ****     // Wait indefinitely for reset semaphore signal
 741:Core/Src/main.c ****     if (osSemaphoreAcquire(BMSResetSemHandle, osWaitForever) == osOK)
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s 			page 19


 296              		.loc 1 741 5 view .LVU63
 297              		.loc 1 741 9 is_stmt 0 view .LVU64
 298 0002 4FF0FF31 		mov	r1, #-1
 299 0006 044B     		ldr	r3, .L18
 300 0008 1868     		ldr	r0, [r3]
 301 000a FFF7FEFF 		bl	osSemaphoreAcquire
 302              	.LVL16:
 303              		.loc 1 741 8 discriminator 1 view .LVU65
 304 000e 0028     		cmp	r0, #0
 305 0010 F7D1     		bne	.L15
 742:Core/Src/main.c ****     {
 743:Core/Src/main.c ****       // Perform the chip reset (blocks for 600ms total)
 744:Core/Src/main.c ****       BQ_ResetChips();
 306              		.loc 1 744 7 is_stmt 1 view .LVU66
 307 0012 FFF7FEFF 		bl	BQ_ResetChips
 308              	.LVL17:
 309 0016 F4E7     		b	.L15
 310              	.L19:
 311              		.align	2
 312              	.L18:
 313 0018 00000000 		.word	BMSResetSemHandle
 314              		.cfi_endproc
 315              	.LFE305:
 317              		.section	.text.vApplicationMallocFailedHook,"ax",%progbits
 318              		.align	1
 319              		.global	vApplicationMallocFailedHook
 320              		.syntax unified
 321              		.thumb
 322              		.thumb_func
 324              	vApplicationMallocFailedHook:
 325              	.LFB300:
 642:Core/Src/main.c ****   /* Called if a call to pvPortMalloc() fails because there is insufficient
 326              		.loc 1 642 1 view -0
 327              		.cfi_startproc
 328              		@ Volatile: function does not return.
 329              		@ args = 0, pretend = 0, frame = 8
 330              		@ frame_needed = 0, uses_anonymous_args = 0
 331 0000 00B5     		push	{lr}
 332              		.cfi_def_cfa_offset 4
 333              		.cfi_offset 14, -4
 334 0002 83B0     		sub	sp, sp, #12
 335              		.cfi_def_cfa_offset 16
 646:Core/Src/main.c ****   for(;;) {
 336              		.loc 1 646 3 view .LVU68
 337              	.LBB11:
 338              	.LBI11:
 339              		.file 2 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
   1:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * FreeRTOS Kernel V10.3.1
   3:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
   5:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * subject to the following conditions:
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s 			page 20


  11:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  12:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * copies or substantial portions of the Software.
  14:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  15:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  22:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * http://www.FreeRTOS.org
  23:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * http://aws.amazon.com/freertos
  24:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  25:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * 1 tab == 4 spaces!
  26:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  */
  27:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  28:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  29:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef PORTMACRO_H
  30:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define PORTMACRO_H
  31:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  32:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifdef __cplusplus
  33:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern "C" {
  34:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
  35:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  36:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------
  37:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Port specific definitions.
  38:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  39:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * given hardware and compiler.
  41:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  42:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * These settings should not be altered.
  43:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *-----------------------------------------------------------
  44:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  */
  45:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  46:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Type definitions. */
  47:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portCHAR		char
  48:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portFLOAT		float
  49:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portDOUBLE		double
  50:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portLONG		long
  51:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSHORT		short
  52:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSTACK_TYPE	uint32_t
  53:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portBASE_TYPE	long
  54:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  55:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  56:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef long BaseType_t;
  57:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef unsigned long UBaseType_t;
  58:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  59:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
  60:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	typedef uint16_t TickType_t;
  61:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
  62:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #else
  63:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	typedef uint32_t TickType_t;
  64:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
  65:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  66:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	not need to be guarded with a critical section. */
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s 			page 21


  68:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
  69:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
  70:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  71:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  72:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specifics. */
  73:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSTACK_GROWTH			( -1 )
  74:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portBYTE_ALIGNMENT			8
  76:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  77:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  78:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Scheduler utilities. */
  79:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portYIELD() 															\
  80:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {																				\
  81:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
  82:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
  83:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 																				\
  84:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
  85:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	within the specified behaviour for the architecture. */						\
  86:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "dsb" ::: "memory" );										\
  87:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "isb" );													\
  88:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
  89:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  90:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
  91:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
  92:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
  93:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
  94:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  95:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  96:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Critical section management. */
  97:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern void vPortEnterCritical( void );
  98:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern void vPortExitCritical( void );
  99:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 100:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 101:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 102:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 103:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 104:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 105:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 106:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 107:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 108:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 109:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 110:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** (which build with all the ports) will build. */
 111:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 112:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 113:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 114:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 115:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Tickless idle/low power functionality. */
 116:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 117:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 118:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 119:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 120:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 121:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 122:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specific optimisations. */
 123:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 124:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s 			page 22


 125:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 126:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 127:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 128:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 129:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Generic helper function. */
 130:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 131:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 132:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	uint8_t ucReturn;
 133:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 134:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 135:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		return ucReturn;
 136:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 137:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 138:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Check the configuration. */
 139:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 140:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 141:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#endif
 142:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 143:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 144:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 145:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 146:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 147:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/*-----------------------------------------------------------*/
 148:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 149:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 150:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 151:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 152:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 153:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 154:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 155:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifdef configASSERT
 156:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 157:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 158:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 159:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 160:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* portNOP() is not required by this port. */
 161:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNOP()
 162:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 163:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portINLINE	__inline
 164:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 165:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef portFORCE_INLINE
 166:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 167:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 168:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 169:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 170:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 171:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulCurrentInterrupt;
 172:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** BaseType_t xReturn;
 173:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 174:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 175:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 176:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 177:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 178:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 179:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		xReturn = pdFALSE;
 180:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 181:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	else
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s 			page 23


 182:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 183:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		xReturn = pdTRUE;
 184:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 185:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 186:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	return xReturn;
 187:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 188:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 189:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 190:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 340              		.loc 2 191 30 view .LVU69
 341              	.LBB12:
 192:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulNewBASEPRI;
 342              		.loc 2 193 1 view .LVU70
 194:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
 343              		.loc 2 195 2 view .LVU71
 344              		.syntax unified
 345              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 346 0004 4FF05003 			mov r3, #80												
 347 0008 83F31188 		msr basepri, r3											
 348 000c BFF36F8F 		isb														
 349 0010 BFF34F8F 		dsb														
 350              	
 351              	@ 0 "" 2
 352              		.thumb
 353              		.syntax unified
 354              	.L23:
 355              	.LBE12:
 356              	.LBE11:
 647:Core/Src/main.c ****     HAL_GPIO_TogglePin(GPIOB, MUX_SIG1_Pin);
 357              		.loc 1 647 3 view .LVU72
 648:Core/Src/main.c ****     for(volatile uint32_t i = 0; i < 100000; i++);  // Busy wait
 358              		.loc 1 648 5 view .LVU73
 359 0014 0221     		movs	r1, #2
 360 0016 0648     		ldr	r0, .L25
 361 0018 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 362              	.LVL18:
 649:Core/Src/main.c ****   }
 363              		.loc 1 649 5 view .LVU74
 364              	.LBB13:
 649:Core/Src/main.c ****   }
 365              		.loc 1 649 9 view .LVU75
 649:Core/Src/main.c ****   }
 366              		.loc 1 649 27 is_stmt 0 view .LVU76
 367 001c 0023     		movs	r3, #0
 368 001e 0193     		str	r3, [sp, #4]
 369              	.L21:
 649:Core/Src/main.c ****   }
 370              		.loc 1 649 36 is_stmt 1 discriminator 1 view .LVU77
 371 0020 019A     		ldr	r2, [sp, #4]
 372 0022 044B     		ldr	r3, .L25+4
 373 0024 9A42     		cmp	r2, r3
 374 0026 F5D8     		bhi	.L23
 649:Core/Src/main.c ****   }
 375              		.loc 1 649 47 discriminator 3 view .LVU78
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s 			page 24


 376 0028 019B     		ldr	r3, [sp, #4]
 377 002a 0133     		adds	r3, r3, #1
 378 002c 0193     		str	r3, [sp, #4]
 379 002e F7E7     		b	.L21
 380              	.L26:
 381              		.align	2
 382              	.L25:
 383 0030 00040048 		.word	1207960576
 384 0034 9F860100 		.word	99999
 385              	.LBE13:
 386              		.cfi_endproc
 387              	.LFE300:
 389              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 390              		.align	1
 391              		.global	HAL_TIM_PeriodElapsedCallback
 392              		.syntax unified
 393              		.thumb
 394              		.thumb_func
 396              	HAL_TIM_PeriodElapsedCallback:
 397              	.LVL19:
 398              	.LFB306:
 745:Core/Src/main.c ****     }
 746:Core/Src/main.c ****   }
 747:Core/Src/main.c ****   /* USER CODE END BMSResetHandlerTask */
 748:Core/Src/main.c **** }
 749:Core/Src/main.c **** 
 750:Core/Src/main.c **** /**
 751:Core/Src/main.c ****   * @brief  Period elapsed callback in non blocking mode
 752:Core/Src/main.c ****   * @note   This function is called  when TIM6 interrupt took place, inside
 753:Core/Src/main.c ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 754:Core/Src/main.c ****   * a global variable "uwTick" used as application time base.
 755:Core/Src/main.c ****   * @param  htim : TIM handle
 756:Core/Src/main.c ****   * @retval None
 757:Core/Src/main.c ****   */
 758:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 759:Core/Src/main.c **** {
 399              		.loc 1 759 1 view -0
 400              		.cfi_startproc
 401              		@ args = 0, pretend = 0, frame = 0
 402              		@ frame_needed = 0, uses_anonymous_args = 0
 403              		.loc 1 759 1 is_stmt 0 view .LVU80
 404 0000 08B5     		push	{r3, lr}
 405              		.cfi_def_cfa_offset 8
 406              		.cfi_offset 3, -8
 407              		.cfi_offset 14, -4
 760:Core/Src/main.c ****   /* USER CODE BEGIN Callback 0 */
 761:Core/Src/main.c **** 
 762:Core/Src/main.c ****   /* USER CODE END Callback 0 */
 763:Core/Src/main.c ****   if (htim->Instance == TIM6)
 408              		.loc 1 763 3 is_stmt 1 view .LVU81
 409              		.loc 1 763 11 is_stmt 0 view .LVU82
 410 0002 0268     		ldr	r2, [r0]
 411              		.loc 1 763 6 view .LVU83
 412 0004 034B     		ldr	r3, .L31
 413 0006 9A42     		cmp	r2, r3
 414 0008 00D0     		beq	.L30
 415              	.LVL20:
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s 			page 25


 416              	.L27:
 764:Core/Src/main.c ****   {
 765:Core/Src/main.c ****     HAL_IncTick();
 766:Core/Src/main.c ****   }
 767:Core/Src/main.c ****   /* USER CODE BEGIN Callback 1 */
 768:Core/Src/main.c **** 
 769:Core/Src/main.c ****   /* USER CODE END Callback 1 */
 770:Core/Src/main.c **** }
 417              		.loc 1 770 1 view .LVU84
 418 000a 08BD     		pop	{r3, pc}
 419              	.LVL21:
 420              	.L30:
 765:Core/Src/main.c ****   }
 421              		.loc 1 765 5 is_stmt 1 view .LVU85
 422 000c FFF7FEFF 		bl	HAL_IncTick
 423              	.LVL22:
 424              		.loc 1 770 1 is_stmt 0 view .LVU86
 425 0010 FBE7     		b	.L27
 426              	.L32:
 427 0012 00BF     		.align	2
 428              	.L31:
 429 0014 00100040 		.word	1073745920
 430              		.cfi_endproc
 431              	.LFE306:
 433              		.section	.text.Error_Handler,"ax",%progbits
 434              		.align	1
 435              		.global	Error_Handler
 436              		.syntax unified
 437              		.thumb
 438              		.thumb_func
 440              	Error_Handler:
 441              	.LFB307:
 771:Core/Src/main.c **** 
 772:Core/Src/main.c **** /**
 773:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 774:Core/Src/main.c ****   * @retval None
 775:Core/Src/main.c ****   */
 776:Core/Src/main.c **** void Error_Handler(void)
 777:Core/Src/main.c **** {
 442              		.loc 1 777 1 is_stmt 1 view -0
 443              		.cfi_startproc
 444              		@ Volatile: function does not return.
 445              		@ args = 0, pretend = 0, frame = 0
 446              		@ frame_needed = 0, uses_anonymous_args = 0
 447              		@ link register save eliminated.
 778:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 779:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 780:Core/Src/main.c ****   __disable_irq();
 448              		.loc 1 780 3 view .LVU88
 449              	.LBB14:
 450              	.LBI14:
 451              		.file 3 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s 			page 26


   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s 			page 27


  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s 			page 28


 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s 			page 29


 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 452              		.loc 3 207 27 view .LVU89
 453              	.LBB15:
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 454              		.loc 3 209 3 view .LVU90
 455              		.syntax unified
 456              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 457 0000 72B6     		cpsid i
 458              	@ 0 "" 2
 459              		.thumb
 460              		.syntax unified
 461              	.L34:
 462              	.LBE15:
 463              	.LBE14:
 781:Core/Src/main.c ****   while (1)
 464              		.loc 1 781 3 view .LVU91
 782:Core/Src/main.c ****   {
 783:Core/Src/main.c ****   }
 465              		.loc 1 783 3 view .LVU92
 781:Core/Src/main.c ****   while (1)
 466              		.loc 1 781 9 view .LVU93
 467 0002 FEE7     		b	.L34
 468              		.cfi_endproc
 469              	.LFE307:
 471              		.section	.text.MX_ADC1_Init,"ax",%progbits
 472              		.align	1
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s 			page 30


 473              		.syntax unified
 474              		.thumb
 475              		.thumb_func
 477              	MX_ADC1_Init:
 478              	.LFB294:
 350:Core/Src/main.c **** 
 479              		.loc 1 350 1 view -0
 480              		.cfi_startproc
 481              		@ args = 0, pretend = 0, frame = 24
 482              		@ frame_needed = 0, uses_anonymous_args = 0
 483 0000 00B5     		push	{lr}
 484              		.cfi_def_cfa_offset 4
 485              		.cfi_offset 14, -4
 486 0002 87B0     		sub	sp, sp, #28
 487              		.cfi_def_cfa_offset 32
 356:Core/Src/main.c **** 
 488              		.loc 1 356 3 view .LVU95
 356:Core/Src/main.c **** 
 489              		.loc 1 356 26 is_stmt 0 view .LVU96
 490 0004 0023     		movs	r3, #0
 491 0006 0093     		str	r3, [sp]
 492 0008 0193     		str	r3, [sp, #4]
 493 000a 0293     		str	r3, [sp, #8]
 494 000c 0393     		str	r3, [sp, #12]
 495 000e 0493     		str	r3, [sp, #16]
 496 0010 0593     		str	r3, [sp, #20]
 364:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 497              		.loc 1 364 3 is_stmt 1 view .LVU97
 364:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 498              		.loc 1 364 18 is_stmt 0 view .LVU98
 499 0012 1848     		ldr	r0, .L41
 500 0014 184A     		ldr	r2, .L41+4
 501 0016 0260     		str	r2, [r0]
 365:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 502              		.loc 1 365 3 is_stmt 1 view .LVU99
 365:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 503              		.loc 1 365 29 is_stmt 0 view .LVU100
 504 0018 4360     		str	r3, [r0, #4]
 366:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 505              		.loc 1 366 3 is_stmt 1 view .LVU101
 366:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 506              		.loc 1 366 25 is_stmt 0 view .LVU102
 507 001a 8360     		str	r3, [r0, #8]
 367:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 508              		.loc 1 367 3 is_stmt 1 view .LVU103
 367:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 509              		.loc 1 367 24 is_stmt 0 view .LVU104
 510 001c C360     		str	r3, [r0, #12]
 368:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 511              		.loc 1 368 3 is_stmt 1 view .LVU105
 368:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 512              		.loc 1 368 27 is_stmt 0 view .LVU106
 513 001e 0361     		str	r3, [r0, #16]
 369:Core/Src/main.c ****   hadc1.Init.LowPowerAutoWait = DISABLE;
 514              		.loc 1 369 3 is_stmt 1 view .LVU107
 369:Core/Src/main.c ****   hadc1.Init.LowPowerAutoWait = DISABLE;
 515              		.loc 1 369 27 is_stmt 0 view .LVU108
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s 			page 31


 516 0020 0422     		movs	r2, #4
 517 0022 4261     		str	r2, [r0, #20]
 370:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
 518              		.loc 1 370 3 is_stmt 1 view .LVU109
 370:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
 519              		.loc 1 370 31 is_stmt 0 view .LVU110
 520 0024 0376     		strb	r3, [r0, #24]
 371:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 521              		.loc 1 371 3 is_stmt 1 view .LVU111
 371:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 522              		.loc 1 371 33 is_stmt 0 view .LVU112
 523 0026 4376     		strb	r3, [r0, #25]
 372:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 524              		.loc 1 372 3 is_stmt 1 view .LVU113
 372:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 525              		.loc 1 372 30 is_stmt 0 view .LVU114
 526 0028 0122     		movs	r2, #1
 527 002a C261     		str	r2, [r0, #28]
 373:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 528              		.loc 1 373 3 is_stmt 1 view .LVU115
 373:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 529              		.loc 1 373 36 is_stmt 0 view .LVU116
 530 002c 80F82030 		strb	r3, [r0, #32]
 374:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 531              		.loc 1 374 3 is_stmt 1 view .LVU117
 374:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 532              		.loc 1 374 31 is_stmt 0 view .LVU118
 533 0030 8362     		str	r3, [r0, #40]
 375:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = DISABLE;
 534              		.loc 1 375 3 is_stmt 1 view .LVU119
 375:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = DISABLE;
 535              		.loc 1 375 35 is_stmt 0 view .LVU120
 536 0032 C362     		str	r3, [r0, #44]
 376:Core/Src/main.c ****   hadc1.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 537              		.loc 1 376 3 is_stmt 1 view .LVU121
 376:Core/Src/main.c ****   hadc1.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 538              		.loc 1 376 36 is_stmt 0 view .LVU122
 539 0034 80F83030 		strb	r3, [r0, #48]
 377:Core/Src/main.c ****   hadc1.Init.OversamplingMode = DISABLE;
 540              		.loc 1 377 3 is_stmt 1 view .LVU123
 377:Core/Src/main.c ****   hadc1.Init.OversamplingMode = DISABLE;
 541              		.loc 1 377 22 is_stmt 0 view .LVU124
 542 0038 4363     		str	r3, [r0, #52]
 378:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 543              		.loc 1 378 3 is_stmt 1 view .LVU125
 378:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 544              		.loc 1 378 31 is_stmt 0 view .LVU126
 545 003a 80F83830 		strb	r3, [r0, #56]
 379:Core/Src/main.c ****   {
 546              		.loc 1 379 3 is_stmt 1 view .LVU127
 379:Core/Src/main.c ****   {
 547              		.loc 1 379 7 is_stmt 0 view .LVU128
 548 003e FFF7FEFF 		bl	HAL_ADC_Init
 549              	.LVL23:
 379:Core/Src/main.c ****   {
 550              		.loc 1 379 6 discriminator 1 view .LVU129
 551 0042 98B9     		cbnz	r0, .L39
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s 			page 32


 386:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 552              		.loc 1 386 3 is_stmt 1 view .LVU130
 386:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 553              		.loc 1 386 19 is_stmt 0 view .LVU131
 554 0044 0D4B     		ldr	r3, .L41+8
 555 0046 0093     		str	r3, [sp]
 387:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_640CYCLES_5;  // Longer sampling for high impedance thermis
 556              		.loc 1 387 3 is_stmt 1 view .LVU132
 387:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_640CYCLES_5;  // Longer sampling for high impedance thermis
 557              		.loc 1 387 16 is_stmt 0 view .LVU133
 558 0048 0623     		movs	r3, #6
 559 004a 0193     		str	r3, [sp, #4]
 388:Core/Src/main.c ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 560              		.loc 1 388 3 is_stmt 1 view .LVU134
 388:Core/Src/main.c ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 561              		.loc 1 388 24 is_stmt 0 view .LVU135
 562 004c 0723     		movs	r3, #7
 563 004e 0293     		str	r3, [sp, #8]
 389:Core/Src/main.c ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 564              		.loc 1 389 3 is_stmt 1 view .LVU136
 389:Core/Src/main.c ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 565              		.loc 1 389 22 is_stmt 0 view .LVU137
 566 0050 7F23     		movs	r3, #127
 567 0052 0393     		str	r3, [sp, #12]
 390:Core/Src/main.c ****   sConfig.Offset = 0;
 568              		.loc 1 390 3 is_stmt 1 view .LVU138
 390:Core/Src/main.c ****   sConfig.Offset = 0;
 569              		.loc 1 390 24 is_stmt 0 view .LVU139
 570 0054 0423     		movs	r3, #4
 571 0056 0493     		str	r3, [sp, #16]
 391:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 572              		.loc 1 391 3 is_stmt 1 view .LVU140
 391:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 573              		.loc 1 391 18 is_stmt 0 view .LVU141
 574 0058 0023     		movs	r3, #0
 575 005a 0593     		str	r3, [sp, #20]
 392:Core/Src/main.c ****   {
 576              		.loc 1 392 3 is_stmt 1 view .LVU142
 392:Core/Src/main.c ****   {
 577              		.loc 1 392 7 is_stmt 0 view .LVU143
 578 005c 6946     		mov	r1, sp
 579 005e 0548     		ldr	r0, .L41
 580 0060 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 581              	.LVL24:
 392:Core/Src/main.c ****   {
 582              		.loc 1 392 6 discriminator 1 view .LVU144
 583 0064 20B9     		cbnz	r0, .L40
 400:Core/Src/main.c **** 
 584              		.loc 1 400 1 view .LVU145
 585 0066 07B0     		add	sp, sp, #28
 586              		.cfi_remember_state
 587              		.cfi_def_cfa_offset 4
 588              		@ sp needed
 589 0068 5DF804FB 		ldr	pc, [sp], #4
 590              	.L39:
 591              		.cfi_restore_state
 381:Core/Src/main.c ****   }
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s 			page 33


 592              		.loc 1 381 5 is_stmt 1 view .LVU146
 593 006c FFF7FEFF 		bl	Error_Handler
 594              	.LVL25:
 595              	.L40:
 394:Core/Src/main.c ****   }
 596              		.loc 1 394 5 view .LVU147
 597 0070 FFF7FEFF 		bl	Error_Handler
 598              	.LVL26:
 599              	.L42:
 600              		.align	2
 601              	.L41:
 602 0074 00000000 		.word	hadc1
 603 0078 00000450 		.word	1342439424
 604 007c 2000F014 		.word	351272992
 605              		.cfi_endproc
 606              	.LFE294:
 608              		.section	.text.MX_CAN1_Init,"ax",%progbits
 609              		.align	1
 610              		.syntax unified
 611              		.thumb
 612              		.thumb_func
 614              	MX_CAN1_Init:
 615              	.LFB295:
 408:Core/Src/main.c **** 
 616              		.loc 1 408 1 view -0
 617              		.cfi_startproc
 618              		@ args = 0, pretend = 0, frame = 40
 619              		@ frame_needed = 0, uses_anonymous_args = 0
 620 0000 00B5     		push	{lr}
 621              		.cfi_def_cfa_offset 4
 622              		.cfi_offset 14, -4
 623 0002 8BB0     		sub	sp, sp, #44
 624              		.cfi_def_cfa_offset 48
 417:Core/Src/main.c ****   hcan1.Init.Prescaler = 10;
 625              		.loc 1 417 3 view .LVU149
 417:Core/Src/main.c ****   hcan1.Init.Prescaler = 10;
 626              		.loc 1 417 18 is_stmt 0 view .LVU150
 627 0004 1848     		ldr	r0, .L49
 628 0006 194B     		ldr	r3, .L49+4
 629 0008 0360     		str	r3, [r0]
 418:Core/Src/main.c ****   hcan1.Init.Mode = CAN_MODE_NORMAL;
 630              		.loc 1 418 3 is_stmt 1 view .LVU151
 418:Core/Src/main.c ****   hcan1.Init.Mode = CAN_MODE_NORMAL;
 631              		.loc 1 418 24 is_stmt 0 view .LVU152
 632 000a 0A23     		movs	r3, #10
 633 000c 4360     		str	r3, [r0, #4]
 419:Core/Src/main.c ****   hcan1.Init.SyncJumpWidth = CAN_SJW_1TQ;
 634              		.loc 1 419 3 is_stmt 1 view .LVU153
 419:Core/Src/main.c ****   hcan1.Init.SyncJumpWidth = CAN_SJW_1TQ;
 635              		.loc 1 419 19 is_stmt 0 view .LVU154
 636 000e 0023     		movs	r3, #0
 637 0010 8360     		str	r3, [r0, #8]
 420:Core/Src/main.c ****   hcan1.Init.TimeSeg1 = CAN_BS1_13TQ;
 638              		.loc 1 420 3 is_stmt 1 view .LVU155
 420:Core/Src/main.c ****   hcan1.Init.TimeSeg1 = CAN_BS1_13TQ;
 639              		.loc 1 420 28 is_stmt 0 view .LVU156
 640 0012 C360     		str	r3, [r0, #12]
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s 			page 34


 421:Core/Src/main.c ****   hcan1.Init.TimeSeg2 = CAN_BS2_2TQ;
 641              		.loc 1 421 3 is_stmt 1 view .LVU157
 421:Core/Src/main.c ****   hcan1.Init.TimeSeg2 = CAN_BS2_2TQ;
 642              		.loc 1 421 23 is_stmt 0 view .LVU158
 643 0014 4FF44022 		mov	r2, #786432
 644 0018 0261     		str	r2, [r0, #16]
 422:Core/Src/main.c ****   hcan1.Init.TimeTriggeredMode = DISABLE;
 645              		.loc 1 422 3 is_stmt 1 view .LVU159
 422:Core/Src/main.c ****   hcan1.Init.TimeTriggeredMode = DISABLE;
 646              		.loc 1 422 23 is_stmt 0 view .LVU160
 647 001a 4FF48012 		mov	r2, #1048576
 648 001e 4261     		str	r2, [r0, #20]
 423:Core/Src/main.c ****   hcan1.Init.AutoBusOff = DISABLE;
 649              		.loc 1 423 3 is_stmt 1 view .LVU161
 423:Core/Src/main.c ****   hcan1.Init.AutoBusOff = DISABLE;
 650              		.loc 1 423 32 is_stmt 0 view .LVU162
 651 0020 0376     		strb	r3, [r0, #24]
 424:Core/Src/main.c ****   hcan1.Init.AutoWakeUp = DISABLE;
 652              		.loc 1 424 3 is_stmt 1 view .LVU163
 424:Core/Src/main.c ****   hcan1.Init.AutoWakeUp = DISABLE;
 653              		.loc 1 424 25 is_stmt 0 view .LVU164
 654 0022 4376     		strb	r3, [r0, #25]
 425:Core/Src/main.c ****   hcan1.Init.AutoRetransmission = DISABLE;
 655              		.loc 1 425 3 is_stmt 1 view .LVU165
 425:Core/Src/main.c ****   hcan1.Init.AutoRetransmission = DISABLE;
 656              		.loc 1 425 25 is_stmt 0 view .LVU166
 657 0024 8376     		strb	r3, [r0, #26]
 426:Core/Src/main.c ****   hcan1.Init.ReceiveFifoLocked = DISABLE;
 658              		.loc 1 426 3 is_stmt 1 view .LVU167
 426:Core/Src/main.c ****   hcan1.Init.ReceiveFifoLocked = DISABLE;
 659              		.loc 1 426 33 is_stmt 0 view .LVU168
 660 0026 C376     		strb	r3, [r0, #27]
 427:Core/Src/main.c ****   hcan1.Init.TransmitFifoPriority = DISABLE;
 661              		.loc 1 427 3 is_stmt 1 view .LVU169
 427:Core/Src/main.c ****   hcan1.Init.TransmitFifoPriority = DISABLE;
 662              		.loc 1 427 32 is_stmt 0 view .LVU170
 663 0028 0377     		strb	r3, [r0, #28]
 428:Core/Src/main.c ****   if (HAL_CAN_Init(&hcan1) != HAL_OK)
 664              		.loc 1 428 3 is_stmt 1 view .LVU171
 428:Core/Src/main.c ****   if (HAL_CAN_Init(&hcan1) != HAL_OK)
 665              		.loc 1 428 35 is_stmt 0 view .LVU172
 666 002a 4377     		strb	r3, [r0, #29]
 429:Core/Src/main.c ****   {
 667              		.loc 1 429 3 is_stmt 1 view .LVU173
 429:Core/Src/main.c ****   {
 668              		.loc 1 429 7 is_stmt 0 view .LVU174
 669 002c FFF7FEFF 		bl	HAL_CAN_Init
 670              	.LVL27:
 429:Core/Src/main.c ****   {
 671              		.loc 1 429 6 discriminator 1 view .LVU175
 672 0030 A8B9     		cbnz	r0, .L47
 437:Core/Src/main.c ****   filterConfig.FilterBank = 0;
 673              		.loc 1 437 3 is_stmt 1 view .LVU176
 438:Core/Src/main.c ****   filterConfig.FilterMode = CAN_FILTERMODE_IDMASK;
 674              		.loc 1 438 3 view .LVU177
 438:Core/Src/main.c ****   filterConfig.FilterMode = CAN_FILTERMODE_IDMASK;
 675              		.loc 1 438 27 is_stmt 0 view .LVU178
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s 			page 35


 676 0032 0023     		movs	r3, #0
 677 0034 0593     		str	r3, [sp, #20]
 439:Core/Src/main.c ****   filterConfig.FilterScale = CAN_FILTERSCALE_32BIT;
 678              		.loc 1 439 3 is_stmt 1 view .LVU179
 439:Core/Src/main.c ****   filterConfig.FilterScale = CAN_FILTERSCALE_32BIT;
 679              		.loc 1 439 27 is_stmt 0 view .LVU180
 680 0036 0693     		str	r3, [sp, #24]
 440:Core/Src/main.c ****   
 681              		.loc 1 440 3 is_stmt 1 view .LVU181
 440:Core/Src/main.c ****   
 682              		.loc 1 440 28 is_stmt 0 view .LVU182
 683 0038 0122     		movs	r2, #1
 684 003a 0792     		str	r2, [sp, #28]
 443:Core/Src/main.c ****   filterConfig.FilterIdLow = 0x0004;   // Only IDE bit set (extended ID)
 685              		.loc 1 443 3 is_stmt 1 view .LVU183
 443:Core/Src/main.c ****   filterConfig.FilterIdLow = 0x0004;   // Only IDE bit set (extended ID)
 686              		.loc 1 443 29 is_stmt 0 view .LVU184
 687 003c 0093     		str	r3, [sp]
 444:Core/Src/main.c ****   filterConfig.FilterMaskIdHigh = 0x0000;  // Don't care about any ID bits
 688              		.loc 1 444 3 is_stmt 1 view .LVU185
 444:Core/Src/main.c ****   filterConfig.FilterMaskIdHigh = 0x0000;  // Don't care about any ID bits
 689              		.loc 1 444 28 is_stmt 0 view .LVU186
 690 003e 0421     		movs	r1, #4
 691 0040 0191     		str	r1, [sp, #4]
 445:Core/Src/main.c ****   filterConfig.FilterMaskIdLow = 0x0004;   // But we DO care about IDE bit (only extended)
 692              		.loc 1 445 3 is_stmt 1 view .LVU187
 445:Core/Src/main.c ****   filterConfig.FilterMaskIdLow = 0x0004;   // But we DO care about IDE bit (only extended)
 693              		.loc 1 445 33 is_stmt 0 view .LVU188
 694 0042 0293     		str	r3, [sp, #8]
 446:Core/Src/main.c ****   
 695              		.loc 1 446 3 is_stmt 1 view .LVU189
 446:Core/Src/main.c ****   
 696              		.loc 1 446 32 is_stmt 0 view .LVU190
 697 0044 0391     		str	r1, [sp, #12]
 448:Core/Src/main.c ****   filterConfig.FilterActivation = ENABLE;
 698              		.loc 1 448 3 is_stmt 1 view .LVU191
 448:Core/Src/main.c ****   filterConfig.FilterActivation = ENABLE;
 699              		.loc 1 448 37 is_stmt 0 view .LVU192
 700 0046 0493     		str	r3, [sp, #16]
 449:Core/Src/main.c ****   filterConfig.SlaveStartFilterBank = 14;
 701              		.loc 1 449 3 is_stmt 1 view .LVU193
 449:Core/Src/main.c ****   filterConfig.SlaveStartFilterBank = 14;
 702              		.loc 1 449 33 is_stmt 0 view .LVU194
 703 0048 0892     		str	r2, [sp, #32]
 450:Core/Src/main.c ****   
 704              		.loc 1 450 3 is_stmt 1 view .LVU195
 450:Core/Src/main.c ****   
 705              		.loc 1 450 37 is_stmt 0 view .LVU196
 706 004a 0E23     		movs	r3, #14
 707 004c 0993     		str	r3, [sp, #36]
 452:Core/Src/main.c ****   {
 708              		.loc 1 452 3 is_stmt 1 view .LVU197
 452:Core/Src/main.c ****   {
 709              		.loc 1 452 7 is_stmt 0 view .LVU198
 710 004e 6946     		mov	r1, sp
 711 0050 0548     		ldr	r0, .L49
 712 0052 FFF7FEFF 		bl	HAL_CAN_ConfigFilter
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s 			page 36


 713              	.LVL28:
 452:Core/Src/main.c ****   {
 714              		.loc 1 452 6 discriminator 1 view .LVU199
 715 0056 20B9     		cbnz	r0, .L48
 459:Core/Src/main.c **** 
 716              		.loc 1 459 1 view .LVU200
 717 0058 0BB0     		add	sp, sp, #44
 718              		.cfi_remember_state
 719              		.cfi_def_cfa_offset 4
 720              		@ sp needed
 721 005a 5DF804FB 		ldr	pc, [sp], #4
 722              	.L47:
 723              		.cfi_restore_state
 431:Core/Src/main.c ****   }
 724              		.loc 1 431 5 is_stmt 1 view .LVU201
 725 005e FFF7FEFF 		bl	Error_Handler
 726              	.LVL29:
 727              	.L48:
 454:Core/Src/main.c ****   }
 728              		.loc 1 454 5 view .LVU202
 729 0062 FFF7FEFF 		bl	Error_Handler
 730              	.LVL30:
 731              	.L50:
 732 0066 00BF     		.align	2
 733              	.L49:
 734 0068 00000000 		.word	hcan1
 735 006c 00640040 		.word	1073767424
 736              		.cfi_endproc
 737              	.LFE295:
 739              		.section	.text.MX_CRC_Init,"ax",%progbits
 740              		.align	1
 741              		.syntax unified
 742              		.thumb
 743              		.thumb_func
 745              	MX_CRC_Init:
 746              	.LFB296:
 467:Core/Src/main.c **** 
 747              		.loc 1 467 1 view -0
 748              		.cfi_startproc
 749              		@ args = 0, pretend = 0, frame = 0
 750              		@ frame_needed = 0, uses_anonymous_args = 0
 751 0000 08B5     		push	{r3, lr}
 752              		.cfi_def_cfa_offset 8
 753              		.cfi_offset 3, -8
 754              		.cfi_offset 14, -4
 476:Core/Src/main.c ****   hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
 755              		.loc 1 476 3 view .LVU204
 476:Core/Src/main.c ****   hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
 756              		.loc 1 476 17 is_stmt 0 view .LVU205
 757 0002 0848     		ldr	r0, .L55
 758 0004 084B     		ldr	r3, .L55+4
 759 0006 0360     		str	r3, [r0]
 477:Core/Src/main.c ****   hcrc.Init.DefaultInitValueUse = DEFAULT_INIT_VALUE_ENABLE;
 760              		.loc 1 477 3 is_stmt 1 view .LVU206
 477:Core/Src/main.c ****   hcrc.Init.DefaultInitValueUse = DEFAULT_INIT_VALUE_ENABLE;
 761              		.loc 1 477 34 is_stmt 0 view .LVU207
 762 0008 0023     		movs	r3, #0
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s 			page 37


 763 000a 0371     		strb	r3, [r0, #4]
 478:Core/Src/main.c ****   hcrc.Init.InputDataInversionMode = CRC_INPUTDATA_INVERSION_NONE;
 764              		.loc 1 478 3 is_stmt 1 view .LVU208
 478:Core/Src/main.c ****   hcrc.Init.InputDataInversionMode = CRC_INPUTDATA_INVERSION_NONE;
 765              		.loc 1 478 33 is_stmt 0 view .LVU209
 766 000c 4371     		strb	r3, [r0, #5]
 479:Core/Src/main.c ****   hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
 767              		.loc 1 479 3 is_stmt 1 view .LVU210
 479:Core/Src/main.c ****   hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
 768              		.loc 1 479 36 is_stmt 0 view .LVU211
 769 000e 4361     		str	r3, [r0, #20]
 480:Core/Src/main.c ****   hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
 770              		.loc 1 480 3 is_stmt 1 view .LVU212
 480:Core/Src/main.c ****   hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
 771              		.loc 1 480 37 is_stmt 0 view .LVU213
 772 0010 8361     		str	r3, [r0, #24]
 481:Core/Src/main.c ****   if (HAL_CRC_Init(&hcrc) != HAL_OK)
 773              		.loc 1 481 3 is_stmt 1 view .LVU214
 481:Core/Src/main.c ****   if (HAL_CRC_Init(&hcrc) != HAL_OK)
 774              		.loc 1 481 24 is_stmt 0 view .LVU215
 775 0012 0123     		movs	r3, #1
 776 0014 0362     		str	r3, [r0, #32]
 482:Core/Src/main.c ****   {
 777              		.loc 1 482 3 is_stmt 1 view .LVU216
 482:Core/Src/main.c ****   {
 778              		.loc 1 482 7 is_stmt 0 view .LVU217
 779 0016 FFF7FEFF 		bl	HAL_CRC_Init
 780              	.LVL31:
 482:Core/Src/main.c ****   {
 781              		.loc 1 482 6 discriminator 1 view .LVU218
 782 001a 00B9     		cbnz	r0, .L54
 490:Core/Src/main.c **** 
 783              		.loc 1 490 1 view .LVU219
 784 001c 08BD     		pop	{r3, pc}
 785              	.L54:
 484:Core/Src/main.c ****   }
 786              		.loc 1 484 5 is_stmt 1 view .LVU220
 787 001e FFF7FEFF 		bl	Error_Handler
 788              	.LVL32:
 789              	.L56:
 790 0022 00BF     		.align	2
 791              	.L55:
 792 0024 00000000 		.word	hcrc
 793 0028 00300240 		.word	1073885184
 794              		.cfi_endproc
 795              	.LFE296:
 797              		.section	.text.MX_I2C1_Init,"ax",%progbits
 798              		.align	1
 799              		.syntax unified
 800              		.thumb
 801              		.thumb_func
 803              	MX_I2C1_Init:
 804              	.LFB297:
 498:Core/Src/main.c **** 
 805              		.loc 1 498 1 view -0
 806              		.cfi_startproc
 807              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s 			page 38


 808              		@ frame_needed = 0, uses_anonymous_args = 0
 809 0000 08B5     		push	{r3, lr}
 810              		.cfi_def_cfa_offset 8
 811              		.cfi_offset 3, -8
 812              		.cfi_offset 14, -4
 507:Core/Src/main.c ****   hi2c1.Init.Timing = 0x00503D58;
 813              		.loc 1 507 3 view .LVU222
 507:Core/Src/main.c ****   hi2c1.Init.Timing = 0x00503D58;
 814              		.loc 1 507 18 is_stmt 0 view .LVU223
 815 0002 1148     		ldr	r0, .L65
 816 0004 114B     		ldr	r3, .L65+4
 817 0006 0360     		str	r3, [r0]
 508:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 818              		.loc 1 508 3 is_stmt 1 view .LVU224
 508:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 819              		.loc 1 508 21 is_stmt 0 view .LVU225
 820 0008 114B     		ldr	r3, .L65+8
 821 000a 4360     		str	r3, [r0, #4]
 509:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 822              		.loc 1 509 3 is_stmt 1 view .LVU226
 509:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 823              		.loc 1 509 26 is_stmt 0 view .LVU227
 824 000c 0023     		movs	r3, #0
 825 000e 8360     		str	r3, [r0, #8]
 510:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 826              		.loc 1 510 3 is_stmt 1 view .LVU228
 510:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 827              		.loc 1 510 29 is_stmt 0 view .LVU229
 828 0010 0122     		movs	r2, #1
 829 0012 C260     		str	r2, [r0, #12]
 511:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 830              		.loc 1 511 3 is_stmt 1 view .LVU230
 511:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 831              		.loc 1 511 30 is_stmt 0 view .LVU231
 832 0014 0361     		str	r3, [r0, #16]
 512:Core/Src/main.c ****   hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 833              		.loc 1 512 3 is_stmt 1 view .LVU232
 512:Core/Src/main.c ****   hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 834              		.loc 1 512 26 is_stmt 0 view .LVU233
 835 0016 4361     		str	r3, [r0, #20]
 513:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 836              		.loc 1 513 3 is_stmt 1 view .LVU234
 513:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 837              		.loc 1 513 31 is_stmt 0 view .LVU235
 838 0018 8361     		str	r3, [r0, #24]
 514:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 839              		.loc 1 514 3 is_stmt 1 view .LVU236
 514:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 840              		.loc 1 514 30 is_stmt 0 view .LVU237
 841 001a C361     		str	r3, [r0, #28]
 515:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 842              		.loc 1 515 3 is_stmt 1 view .LVU238
 515:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 843              		.loc 1 515 28 is_stmt 0 view .LVU239
 844 001c 0362     		str	r3, [r0, #32]
 516:Core/Src/main.c ****   {
 845              		.loc 1 516 3 is_stmt 1 view .LVU240
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s 			page 39


 516:Core/Src/main.c ****   {
 846              		.loc 1 516 7 is_stmt 0 view .LVU241
 847 001e FFF7FEFF 		bl	HAL_I2C_Init
 848              	.LVL33:
 516:Core/Src/main.c ****   {
 849              		.loc 1 516 6 discriminator 1 view .LVU242
 850 0022 50B9     		cbnz	r0, .L62
 523:Core/Src/main.c ****   {
 851              		.loc 1 523 3 is_stmt 1 view .LVU243
 523:Core/Src/main.c ****   {
 852              		.loc 1 523 7 is_stmt 0 view .LVU244
 853 0024 0021     		movs	r1, #0
 854 0026 0848     		ldr	r0, .L65
 855 0028 FFF7FEFF 		bl	HAL_I2CEx_ConfigAnalogFilter
 856              	.LVL34:
 523:Core/Src/main.c ****   {
 857              		.loc 1 523 6 discriminator 1 view .LVU245
 858 002c 38B9     		cbnz	r0, .L63
 530:Core/Src/main.c ****   {
 859              		.loc 1 530 3 is_stmt 1 view .LVU246
 530:Core/Src/main.c ****   {
 860              		.loc 1 530 7 is_stmt 0 view .LVU247
 861 002e 0021     		movs	r1, #0
 862 0030 0548     		ldr	r0, .L65
 863 0032 FFF7FEFF 		bl	HAL_I2CEx_ConfigDigitalFilter
 864              	.LVL35:
 530:Core/Src/main.c ****   {
 865              		.loc 1 530 6 discriminator 1 view .LVU248
 866 0036 20B9     		cbnz	r0, .L64
 538:Core/Src/main.c **** 
 867              		.loc 1 538 1 view .LVU249
 868 0038 08BD     		pop	{r3, pc}
 869              	.L62:
 518:Core/Src/main.c ****   }
 870              		.loc 1 518 5 is_stmt 1 view .LVU250
 871 003a FFF7FEFF 		bl	Error_Handler
 872              	.LVL36:
 873              	.L63:
 525:Core/Src/main.c ****   }
 874              		.loc 1 525 5 view .LVU251
 875 003e FFF7FEFF 		bl	Error_Handler
 876              	.LVL37:
 877              	.L64:
 532:Core/Src/main.c ****   }
 878              		.loc 1 532 5 view .LVU252
 879 0042 FFF7FEFF 		bl	Error_Handler
 880              	.LVL38:
 881              	.L66:
 882 0046 00BF     		.align	2
 883              	.L65:
 884 0048 00000000 		.word	hi2c1
 885 004c 00540040 		.word	1073763328
 886 0050 583D5000 		.word	5258584
 887              		.cfi_endproc
 888              	.LFE297:
 890              		.section	.text.MX_I2C3_Init,"ax",%progbits
 891              		.align	1
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s 			page 40


 892              		.syntax unified
 893              		.thumb
 894              		.thumb_func
 896              	MX_I2C3_Init:
 897              	.LFB298:
 546:Core/Src/main.c **** 
 898              		.loc 1 546 1 view -0
 899              		.cfi_startproc
 900              		@ args = 0, pretend = 0, frame = 0
 901              		@ frame_needed = 0, uses_anonymous_args = 0
 902 0000 08B5     		push	{r3, lr}
 903              		.cfi_def_cfa_offset 8
 904              		.cfi_offset 3, -8
 905              		.cfi_offset 14, -4
 555:Core/Src/main.c ****   hi2c3.Init.Timing = 0x00503D58;
 906              		.loc 1 555 3 view .LVU254
 555:Core/Src/main.c ****   hi2c3.Init.Timing = 0x00503D58;
 907              		.loc 1 555 18 is_stmt 0 view .LVU255
 908 0002 1148     		ldr	r0, .L75
 909 0004 114B     		ldr	r3, .L75+4
 910 0006 0360     		str	r3, [r0]
 556:Core/Src/main.c ****   hi2c3.Init.OwnAddress1 = 0;
 911              		.loc 1 556 3 is_stmt 1 view .LVU256
 556:Core/Src/main.c ****   hi2c3.Init.OwnAddress1 = 0;
 912              		.loc 1 556 21 is_stmt 0 view .LVU257
 913 0008 114B     		ldr	r3, .L75+8
 914 000a 4360     		str	r3, [r0, #4]
 557:Core/Src/main.c ****   hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 915              		.loc 1 557 3 is_stmt 1 view .LVU258
 557:Core/Src/main.c ****   hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 916              		.loc 1 557 26 is_stmt 0 view .LVU259
 917 000c 0023     		movs	r3, #0
 918 000e 8360     		str	r3, [r0, #8]
 558:Core/Src/main.c ****   hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 919              		.loc 1 558 3 is_stmt 1 view .LVU260
 558:Core/Src/main.c ****   hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 920              		.loc 1 558 29 is_stmt 0 view .LVU261
 921 0010 0122     		movs	r2, #1
 922 0012 C260     		str	r2, [r0, #12]
 559:Core/Src/main.c ****   hi2c3.Init.OwnAddress2 = 0;
 923              		.loc 1 559 3 is_stmt 1 view .LVU262
 559:Core/Src/main.c ****   hi2c3.Init.OwnAddress2 = 0;
 924              		.loc 1 559 30 is_stmt 0 view .LVU263
 925 0014 0361     		str	r3, [r0, #16]
 560:Core/Src/main.c ****   hi2c3.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 926              		.loc 1 560 3 is_stmt 1 view .LVU264
 560:Core/Src/main.c ****   hi2c3.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 927              		.loc 1 560 26 is_stmt 0 view .LVU265
 928 0016 4361     		str	r3, [r0, #20]
 561:Core/Src/main.c ****   hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 929              		.loc 1 561 3 is_stmt 1 view .LVU266
 561:Core/Src/main.c ****   hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 930              		.loc 1 561 31 is_stmt 0 view .LVU267
 931 0018 8361     		str	r3, [r0, #24]
 562:Core/Src/main.c ****   hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 932              		.loc 1 562 3 is_stmt 1 view .LVU268
 562:Core/Src/main.c ****   hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s 			page 41


 933              		.loc 1 562 30 is_stmt 0 view .LVU269
 934 001a C361     		str	r3, [r0, #28]
 563:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 935              		.loc 1 563 3 is_stmt 1 view .LVU270
 563:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 936              		.loc 1 563 28 is_stmt 0 view .LVU271
 937 001c 0362     		str	r3, [r0, #32]
 564:Core/Src/main.c ****   {
 938              		.loc 1 564 3 is_stmt 1 view .LVU272
 564:Core/Src/main.c ****   {
 939              		.loc 1 564 7 is_stmt 0 view .LVU273
 940 001e FFF7FEFF 		bl	HAL_I2C_Init
 941              	.LVL39:
 564:Core/Src/main.c ****   {
 942              		.loc 1 564 6 discriminator 1 view .LVU274
 943 0022 50B9     		cbnz	r0, .L72
 571:Core/Src/main.c ****   {
 944              		.loc 1 571 3 is_stmt 1 view .LVU275
 571:Core/Src/main.c ****   {
 945              		.loc 1 571 7 is_stmt 0 view .LVU276
 946 0024 0021     		movs	r1, #0
 947 0026 0848     		ldr	r0, .L75
 948 0028 FFF7FEFF 		bl	HAL_I2CEx_ConfigAnalogFilter
 949              	.LVL40:
 571:Core/Src/main.c ****   {
 950              		.loc 1 571 6 discriminator 1 view .LVU277
 951 002c 38B9     		cbnz	r0, .L73
 578:Core/Src/main.c ****   {
 952              		.loc 1 578 3 is_stmt 1 view .LVU278
 578:Core/Src/main.c ****   {
 953              		.loc 1 578 7 is_stmt 0 view .LVU279
 954 002e 0021     		movs	r1, #0
 955 0030 0548     		ldr	r0, .L75
 956 0032 FFF7FEFF 		bl	HAL_I2CEx_ConfigDigitalFilter
 957              	.LVL41:
 578:Core/Src/main.c ****   {
 958              		.loc 1 578 6 discriminator 1 view .LVU280
 959 0036 20B9     		cbnz	r0, .L74
 586:Core/Src/main.c **** 
 960              		.loc 1 586 1 view .LVU281
 961 0038 08BD     		pop	{r3, pc}
 962              	.L72:
 566:Core/Src/main.c ****   }
 963              		.loc 1 566 5 is_stmt 1 view .LVU282
 964 003a FFF7FEFF 		bl	Error_Handler
 965              	.LVL42:
 966              	.L73:
 573:Core/Src/main.c ****   }
 967              		.loc 1 573 5 view .LVU283
 968 003e FFF7FEFF 		bl	Error_Handler
 969              	.LVL43:
 970              	.L74:
 580:Core/Src/main.c ****   }
 971              		.loc 1 580 5 view .LVU284
 972 0042 FFF7FEFF 		bl	Error_Handler
 973              	.LVL44:
 974              	.L76:
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s 			page 42


 975 0046 00BF     		.align	2
 976              	.L75:
 977 0048 00000000 		.word	hi2c3
 978 004c 005C0040 		.word	1073765376
 979 0050 583D5000 		.word	5258584
 980              		.cfi_endproc
 981              	.LFE298:
 983              		.section	.text.SystemClock_Config,"ax",%progbits
 984              		.align	1
 985              		.global	SystemClock_Config
 986              		.syntax unified
 987              		.thumb
 988              		.thumb_func
 990              	SystemClock_Config:
 991              	.LFB293:
 300:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 992              		.loc 1 300 1 view -0
 993              		.cfi_startproc
 994              		@ args = 0, pretend = 0, frame = 88
 995              		@ frame_needed = 0, uses_anonymous_args = 0
 996 0000 00B5     		push	{lr}
 997              		.cfi_def_cfa_offset 4
 998              		.cfi_offset 14, -4
 999 0002 97B0     		sub	sp, sp, #92
 1000              		.cfi_def_cfa_offset 96
 301:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1001              		.loc 1 301 3 view .LVU286
 301:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1002              		.loc 1 301 22 is_stmt 0 view .LVU287
 1003 0004 4422     		movs	r2, #68
 1004 0006 0021     		movs	r1, #0
 1005 0008 05A8     		add	r0, sp, #20
 1006 000a FFF7FEFF 		bl	memset
 1007              	.LVL45:
 302:Core/Src/main.c **** 
 1008              		.loc 1 302 3 is_stmt 1 view .LVU288
 302:Core/Src/main.c **** 
 1009              		.loc 1 302 22 is_stmt 0 view .LVU289
 1010 000e 0023     		movs	r3, #0
 1011 0010 0093     		str	r3, [sp]
 1012 0012 0193     		str	r3, [sp, #4]
 1013 0014 0293     		str	r3, [sp, #8]
 1014 0016 0393     		str	r3, [sp, #12]
 1015 0018 0493     		str	r3, [sp, #16]
 306:Core/Src/main.c ****   {
 1016              		.loc 1 306 3 is_stmt 1 view .LVU290
 306:Core/Src/main.c ****   {
 1017              		.loc 1 306 7 is_stmt 0 view .LVU291
 1018 001a 4FF40070 		mov	r0, #512
 1019 001e FFF7FEFF 		bl	HAL_PWREx_ControlVoltageScaling
 1020              	.LVL46:
 306:Core/Src/main.c ****   {
 1021              		.loc 1 306 6 discriminator 1 view .LVU292
 1022 0022 18BB     		cbnz	r0, .L82
 314:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1023              		.loc 1 314 3 is_stmt 1 view .LVU293
 314:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s 			page 43


 1024              		.loc 1 314 36 is_stmt 0 view .LVU294
 1025 0024 0223     		movs	r3, #2
 1026 0026 0593     		str	r3, [sp, #20]
 315:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1027              		.loc 1 315 3 is_stmt 1 view .LVU295
 315:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1028              		.loc 1 315 30 is_stmt 0 view .LVU296
 1029 0028 4FF48072 		mov	r2, #256
 1030 002c 0892     		str	r2, [sp, #32]
 316:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1031              		.loc 1 316 3 is_stmt 1 view .LVU297
 316:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1032              		.loc 1 316 41 is_stmt 0 view .LVU298
 1033 002e 1022     		movs	r2, #16
 1034 0030 0992     		str	r2, [sp, #36]
 317:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 1035              		.loc 1 317 3 is_stmt 1 view .LVU299
 317:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 1036              		.loc 1 317 34 is_stmt 0 view .LVU300
 1037 0032 0F93     		str	r3, [sp, #60]
 318:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 2;
 1038              		.loc 1 318 3 is_stmt 1 view .LVU301
 318:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 2;
 1039              		.loc 1 318 35 is_stmt 0 view .LVU302
 1040 0034 1093     		str	r3, [sp, #64]
 319:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 20;
 1041              		.loc 1 319 3 is_stmt 1 view .LVU303
 319:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 20;
 1042              		.loc 1 319 30 is_stmt 0 view .LVU304
 1043 0036 1193     		str	r3, [sp, #68]
 320:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
 1044              		.loc 1 320 3 is_stmt 1 view .LVU305
 320:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
 1045              		.loc 1 320 30 is_stmt 0 view .LVU306
 1046 0038 1422     		movs	r2, #20
 1047 003a 1292     		str	r2, [sp, #72]
 321:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 1048              		.loc 1 321 3 is_stmt 1 view .LVU307
 321:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 1049              		.loc 1 321 30 is_stmt 0 view .LVU308
 1050 003c 0722     		movs	r2, #7
 1051 003e 1392     		str	r2, [sp, #76]
 322:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 1052              		.loc 1 322 3 is_stmt 1 view .LVU309
 322:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 1053              		.loc 1 322 30 is_stmt 0 view .LVU310
 1054 0040 1493     		str	r3, [sp, #80]
 323:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1055              		.loc 1 323 3 is_stmt 1 view .LVU311
 323:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1056              		.loc 1 323 30 is_stmt 0 view .LVU312
 1057 0042 1593     		str	r3, [sp, #84]
 324:Core/Src/main.c ****   {
 1058              		.loc 1 324 3 is_stmt 1 view .LVU313
 324:Core/Src/main.c ****   {
 1059              		.loc 1 324 7 is_stmt 0 view .LVU314
 1060 0044 05A8     		add	r0, sp, #20
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s 			page 44


 1061 0046 FFF7FEFF 		bl	HAL_RCC_OscConfig
 1062              	.LVL47:
 324:Core/Src/main.c ****   {
 1063              		.loc 1 324 6 discriminator 1 view .LVU315
 1064 004a 88B9     		cbnz	r0, .L83
 331:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1065              		.loc 1 331 3 is_stmt 1 view .LVU316
 331:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1066              		.loc 1 331 31 is_stmt 0 view .LVU317
 1067 004c 0F23     		movs	r3, #15
 1068 004e 0093     		str	r3, [sp]
 333:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1069              		.loc 1 333 3 is_stmt 1 view .LVU318
 333:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1070              		.loc 1 333 34 is_stmt 0 view .LVU319
 1071 0050 0323     		movs	r3, #3
 1072 0052 0193     		str	r3, [sp, #4]
 334:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1073              		.loc 1 334 3 is_stmt 1 view .LVU320
 334:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1074              		.loc 1 334 35 is_stmt 0 view .LVU321
 1075 0054 0023     		movs	r3, #0
 1076 0056 0293     		str	r3, [sp, #8]
 335:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1077              		.loc 1 335 3 is_stmt 1 view .LVU322
 335:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1078              		.loc 1 335 36 is_stmt 0 view .LVU323
 1079 0058 0393     		str	r3, [sp, #12]
 336:Core/Src/main.c **** 
 1080              		.loc 1 336 3 is_stmt 1 view .LVU324
 336:Core/Src/main.c **** 
 1081              		.loc 1 336 36 is_stmt 0 view .LVU325
 1082 005a 0493     		str	r3, [sp, #16]
 338:Core/Src/main.c ****   {
 1083              		.loc 1 338 3 is_stmt 1 view .LVU326
 338:Core/Src/main.c ****   {
 1084              		.loc 1 338 7 is_stmt 0 view .LVU327
 1085 005c 0421     		movs	r1, #4
 1086 005e 6846     		mov	r0, sp
 1087 0060 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1088              	.LVL48:
 338:Core/Src/main.c ****   {
 1089              		.loc 1 338 6 discriminator 1 view .LVU328
 1090 0064 30B9     		cbnz	r0, .L84
 342:Core/Src/main.c **** 
 1091              		.loc 1 342 1 view .LVU329
 1092 0066 17B0     		add	sp, sp, #92
 1093              		.cfi_remember_state
 1094              		.cfi_def_cfa_offset 4
 1095              		@ sp needed
 1096 0068 5DF804FB 		ldr	pc, [sp], #4
 1097              	.L82:
 1098              		.cfi_restore_state
 308:Core/Src/main.c ****   }
 1099              		.loc 1 308 5 is_stmt 1 view .LVU330
 1100 006c FFF7FEFF 		bl	Error_Handler
 1101              	.LVL49:
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s 			page 45


 1102              	.L83:
 326:Core/Src/main.c ****   }
 1103              		.loc 1 326 5 view .LVU331
 1104 0070 FFF7FEFF 		bl	Error_Handler
 1105              	.LVL50:
 1106              	.L84:
 340:Core/Src/main.c ****   }
 1107              		.loc 1 340 5 view .LVU332
 1108 0074 FFF7FEFF 		bl	Error_Handler
 1109              	.LVL51:
 1110              		.cfi_endproc
 1111              	.LFE293:
 1113              		.section	.text.main,"ax",%progbits
 1114              		.align	1
 1115              		.global	main
 1116              		.syntax unified
 1117              		.thumb
 1118              		.thumb_func
 1120              	main:
 1121              	.LFB292:
 153:Core/Src/main.c **** 
 1122              		.loc 1 153 1 view -0
 1123              		.cfi_startproc
 1124              		@ Volatile: function does not return.
 1125              		@ args = 0, pretend = 0, frame = 0
 1126              		@ frame_needed = 0, uses_anonymous_args = 0
 1127 0000 08B5     		push	{r3, lr}
 1128              		.cfi_def_cfa_offset 8
 1129              		.cfi_offset 3, -8
 1130              		.cfi_offset 14, -4
 157:Core/Src/main.c **** 
 1131              		.loc 1 157 3 view .LVU334
 1132              	.LBB16:
 1133              	.LBI16:
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1134              		.loc 3 207 27 view .LVU335
 1135              	.LBB17:
 1136              		.loc 3 209 3 view .LVU336
 1137              		.syntax unified
 1138              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1139 0002 72B6     		cpsid i
 1140              	@ 0 "" 2
 1141              		.thumb
 1142              		.syntax unified
 1143              	.LBE17:
 1144              	.LBE16:
 160:Core/Src/main.c ****   SysTick->LOAD = 0;
 1145              		.loc 1 160 3 view .LVU337
 160:Core/Src/main.c ****   SysTick->LOAD = 0;
 1146              		.loc 1 160 17 is_stmt 0 view .LVU338
 1147 0004 4FF0E023 		mov	r3, #-536813568
 1148 0008 0022     		movs	r2, #0
 1149 000a 1A61     		str	r2, [r3, #16]
 161:Core/Src/main.c ****   SysTick->VAL = 0;
 1150              		.loc 1 161 3 is_stmt 1 view .LVU339
 161:Core/Src/main.c ****   SysTick->VAL = 0;
 1151              		.loc 1 161 17 is_stmt 0 view .LVU340
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s 			page 46


 1152 000c 5A61     		str	r2, [r3, #20]
 162:Core/Src/main.c **** 
 1153              		.loc 1 162 3 is_stmt 1 view .LVU341
 162:Core/Src/main.c **** 
 1154              		.loc 1 162 16 is_stmt 0 view .LVU342
 1155 000e 9A61     		str	r2, [r3, #24]
 169:Core/Src/main.c **** 
 1156              		.loc 1 169 3 is_stmt 1 view .LVU343
 1157 0010 FFF7FEFF 		bl	HAL_Init
 1158              	.LVL52:
 176:Core/Src/main.c **** 
 1159              		.loc 1 176 3 view .LVU344
 1160 0014 FFF7FEFF 		bl	SystemClock_Config
 1161              	.LVL53:
 183:Core/Src/main.c ****   MX_ADC1_Init();
 1162              		.loc 1 183 3 view .LVU345
 1163 0018 FFF7FEFF 		bl	MX_GPIO_Init
 1164              	.LVL54:
 184:Core/Src/main.c ****   MX_CAN1_Init();
 1165              		.loc 1 184 3 view .LVU346
 1166 001c FFF7FEFF 		bl	MX_ADC1_Init
 1167              	.LVL55:
 185:Core/Src/main.c ****   MX_CRC_Init();
 1168              		.loc 1 185 3 view .LVU347
 1169 0020 FFF7FEFF 		bl	MX_CAN1_Init
 1170              	.LVL56:
 186:Core/Src/main.c ****   MX_I2C1_Init();
 1171              		.loc 1 186 3 view .LVU348
 1172 0024 FFF7FEFF 		bl	MX_CRC_Init
 1173              	.LVL57:
 187:Core/Src/main.c ****   MX_I2C3_Init();
 1174              		.loc 1 187 3 view .LVU349
 1175 0028 FFF7FEFF 		bl	MX_I2C1_Init
 1176              	.LVL58:
 188:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1177              		.loc 1 188 3 view .LVU350
 1178 002c FFF7FEFF 		bl	MX_I2C3_Init
 1179              	.LVL59:
 192:Core/Src/main.c ****   {
 1180              		.loc 1 192 3 view .LVU351
 192:Core/Src/main.c ****   {
 1181              		.loc 1 192 7 is_stmt 0 view .LVU352
 1182 0030 7F21     		movs	r1, #127
 1183 0032 3148     		ldr	r0, .L94
 1184 0034 FFF7FEFF 		bl	HAL_ADCEx_Calibration_Start
 1185              	.LVL60:
 192:Core/Src/main.c ****   {
 1186              		.loc 1 192 6 discriminator 1 view .LVU353
 1187 0038 08B1     		cbz	r0, .L86
 194:Core/Src/main.c ****   }
 1188              		.loc 1 194 5 is_stmt 1 view .LVU354
 1189 003a FFF7FEFF 		bl	Error_Handler
 1190              	.LVL61:
 1191              	.L86:
 198:Core/Src/main.c ****   {
 1192              		.loc 1 198 3 view .LVU355
 198:Core/Src/main.c ****   {
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s 			page 47


 1193              		.loc 1 198 7 is_stmt 0 view .LVU356
 1194 003e 2F48     		ldr	r0, .L94+4
 1195 0040 FFF7FEFF 		bl	HAL_CAN_Start
 1196              	.LVL62:
 198:Core/Src/main.c ****   {
 1197              		.loc 1 198 6 discriminator 1 view .LVU357
 1198 0044 08B1     		cbz	r0, .L87
 200:Core/Src/main.c ****   }
 1199              		.loc 1 200 5 is_stmt 1 view .LVU358
 1200 0046 FFF7FEFF 		bl	Error_Handler
 1201              	.LVL63:
 1202              	.L87:
 206:Core/Src/main.c ****   /* Create the mutex(es) */
 1203              		.loc 1 206 3 view .LVU359
 1204 004a FFF7FEFF 		bl	osKernelInitialize
 1205              	.LVL64:
 209:Core/Src/main.c **** 
 1206              		.loc 1 209 3 view .LVU360
 209:Core/Src/main.c **** 
 1207              		.loc 1 209 16 is_stmt 0 view .LVU361
 1208 004e 2C48     		ldr	r0, .L94+8
 1209 0050 FFF7FEFF 		bl	osMutexNew
 1210              	.LVL65:
 209:Core/Src/main.c **** 
 1211              		.loc 1 209 14 discriminator 1 view .LVU362
 1212 0054 2B4B     		ldr	r3, .L94+12
 1213 0056 1860     		str	r0, [r3]
 212:Core/Src/main.c **** 
 1214              		.loc 1 212 3 is_stmt 1 view .LVU363
 212:Core/Src/main.c **** 
 1215              		.loc 1 212 16 is_stmt 0 view .LVU364
 1216 0058 2B48     		ldr	r0, .L94+16
 1217 005a FFF7FEFF 		bl	osMutexNew
 1218              	.LVL66:
 212:Core/Src/main.c **** 
 1219              		.loc 1 212 14 discriminator 1 view .LVU365
 1220 005e 2B4B     		ldr	r3, .L94+20
 1221 0060 1860     		str	r0, [r3]
 215:Core/Src/main.c **** 
 1222              		.loc 1 215 3 is_stmt 1 view .LVU366
 215:Core/Src/main.c **** 
 1223              		.loc 1 215 15 is_stmt 0 view .LVU367
 1224 0062 2B48     		ldr	r0, .L94+24
 1225 0064 FFF7FEFF 		bl	osMutexNew
 1226              	.LVL67:
 215:Core/Src/main.c **** 
 1227              		.loc 1 215 13 discriminator 1 view .LVU368
 1228 0068 2A4B     		ldr	r3, .L94+28
 1229 006a 1860     		str	r0, [r3]
 223:Core/Src/main.c ****   if (BMSResetSemHandle == NULL)
 1230              		.loc 1 223 3 is_stmt 1 view .LVU369
 223:Core/Src/main.c ****   if (BMSResetSemHandle == NULL)
 1231              		.loc 1 223 23 is_stmt 0 view .LVU370
 1232 006c 2A4A     		ldr	r2, .L94+32
 1233 006e 0021     		movs	r1, #0
 1234 0070 0120     		movs	r0, #1
 1235 0072 FFF7FEFF 		bl	osSemaphoreNew
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s 			page 48


 1236              	.LVL68:
 223:Core/Src/main.c ****   if (BMSResetSemHandle == NULL)
 1237              		.loc 1 223 21 discriminator 1 view .LVU371
 1238 0076 294B     		ldr	r3, .L94+36
 1239 0078 1860     		str	r0, [r3]
 224:Core/Src/main.c ****   {
 1240              		.loc 1 224 3 is_stmt 1 view .LVU372
 224:Core/Src/main.c ****   {
 1241              		.loc 1 224 6 is_stmt 0 view .LVU373
 1242 007a 30B1     		cbz	r0, .L93
 236:Core/Src/main.c ****   
 1243              		.loc 1 236 3 is_stmt 1 view .LVU374
 1244 007c FFF7FEFF 		bl	Config_Init
 1245              	.LVL69:
 239:Core/Src/main.c ****   {
 1246              		.loc 1 239 3 view .LVU375
 239:Core/Src/main.c ****   {
 1247              		.loc 1 239 7 is_stmt 0 view .LVU376
 1248 0080 FFF7FEFF 		bl	ErrorMgr_Init
 1249              	.LVL70:
 239:Core/Src/main.c ****   {
 1250              		.loc 1 239 6 discriminator 1 view .LVU377
 1251 0084 18B1     		cbz	r0, .L89
 241:Core/Src/main.c ****   }
 1252              		.loc 1 241 5 is_stmt 1 view .LVU378
 1253 0086 FFF7FEFF 		bl	Error_Handler
 1254              	.LVL71:
 1255              	.L93:
 226:Core/Src/main.c ****   }
 1256              		.loc 1 226 5 view .LVU379
 1257 008a FFF7FEFF 		bl	Error_Handler
 1258              	.LVL72:
 1259              	.L89:
 245:Core/Src/main.c ****   {
 1260              		.loc 1 245 3 view .LVU380
 245:Core/Src/main.c ****   {
 1261              		.loc 1 245 7 is_stmt 0 view .LVU381
 1262 008e FFF7FEFF 		bl	CAN_Manager_Init
 1263              	.LVL73:
 245:Core/Src/main.c ****   {
 1264              		.loc 1 245 6 discriminator 1 view .LVU382
 1265 0092 08B1     		cbz	r0, .L90
 247:Core/Src/main.c ****   }
 1266              		.loc 1 247 5 is_stmt 1 view .LVU383
 1267 0094 FFF7FEFF 		bl	Error_Handler
 1268              	.LVL74:
 1269              	.L90:
 251:Core/Src/main.c ****   /* USER CODE END RTOS_QUEUES */
 1270              		.loc 1 251 3 view .LVU384
 1271 0098 0120     		movs	r0, #1
 1272 009a FFF7FEFF 		bl	ErrorMgr_SetState
 1273              	.LVL75:
 256:Core/Src/main.c **** 
 1274              		.loc 1 256 3 view .LVU385
 256:Core/Src/main.c **** 
 1275              		.loc 1 256 23 is_stmt 0 view .LVU386
 1276 009e 204A     		ldr	r2, .L94+40
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s 			page 49


 1277 00a0 0021     		movs	r1, #0
 1278 00a2 2048     		ldr	r0, .L94+44
 1279 00a4 FFF7FEFF 		bl	osThreadNew
 1280              	.LVL76:
 256:Core/Src/main.c **** 
 1281              		.loc 1 256 21 discriminator 1 view .LVU387
 1282 00a8 1F4B     		ldr	r3, .L94+48
 1283 00aa 1860     		str	r0, [r3]
 260:Core/Src/main.c **** 
 1284              		.loc 1 260 3 is_stmt 1 view .LVU388
 260:Core/Src/main.c **** 
 1285              		.loc 1 260 27 is_stmt 0 view .LVU389
 1286 00ac 1F4A     		ldr	r2, .L94+52
 1287 00ae 0021     		movs	r1, #0
 1288 00b0 1F48     		ldr	r0, .L94+56
 1289 00b2 FFF7FEFF 		bl	osThreadNew
 1290              	.LVL77:
 260:Core/Src/main.c **** 
 1291              		.loc 1 260 25 discriminator 1 view .LVU390
 1292 00b6 1F4B     		ldr	r3, .L94+60
 1293 00b8 1860     		str	r0, [r3]
 263:Core/Src/main.c **** 
 1294              		.loc 1 263 3 is_stmt 1 view .LVU391
 263:Core/Src/main.c **** 
 1295              		.loc 1 263 27 is_stmt 0 view .LVU392
 1296 00ba 1F4A     		ldr	r2, .L94+64
 1297 00bc 0021     		movs	r1, #0
 1298 00be 1F48     		ldr	r0, .L94+68
 1299 00c0 FFF7FEFF 		bl	osThreadNew
 1300              	.LVL78:
 263:Core/Src/main.c **** 
 1301              		.loc 1 263 25 discriminator 1 view .LVU393
 1302 00c4 1E4B     		ldr	r3, .L94+72
 1303 00c6 1860     		str	r0, [r3]
 266:Core/Src/main.c **** 
 1304              		.loc 1 266 3 is_stmt 1 view .LVU394
 266:Core/Src/main.c **** 
 1305              		.loc 1 266 27 is_stmt 0 view .LVU395
 1306 00c8 1E4A     		ldr	r2, .L94+76
 1307 00ca 0021     		movs	r1, #0
 1308 00cc 1E48     		ldr	r0, .L94+80
 1309 00ce FFF7FEFF 		bl	osThreadNew
 1310              	.LVL79:
 266:Core/Src/main.c **** 
 1311              		.loc 1 266 25 discriminator 1 view .LVU396
 1312 00d2 1E4B     		ldr	r3, .L94+84
 1313 00d4 1860     		str	r0, [r3]
 269:Core/Src/main.c **** 
 1314              		.loc 1 269 3 is_stmt 1 view .LVU397
 269:Core/Src/main.c **** 
 1315              		.loc 1 269 22 is_stmt 0 view .LVU398
 1316 00d6 1E4A     		ldr	r2, .L94+88
 1317 00d8 0021     		movs	r1, #0
 1318 00da 1E48     		ldr	r0, .L94+92
 1319 00dc FFF7FEFF 		bl	osThreadNew
 1320              	.LVL80:
 269:Core/Src/main.c **** 
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s 			page 50


 1321              		.loc 1 269 20 discriminator 1 view .LVU399
 1322 00e0 1D4B     		ldr	r3, .L94+96
 1323 00e2 1860     		str	r0, [r3]
 272:Core/Src/main.c ****   /* USER CODE END RTOS_THREADS */
 1324              		.loc 1 272 3 is_stmt 1 view .LVU400
 272:Core/Src/main.c ****   /* USER CODE END RTOS_THREADS */
 1325              		.loc 1 272 27 is_stmt 0 view .LVU401
 1326 00e4 1D4A     		ldr	r2, .L94+100
 1327 00e6 0021     		movs	r1, #0
 1328 00e8 1D48     		ldr	r0, .L94+104
 1329 00ea FFF7FEFF 		bl	osThreadNew
 1330              	.LVL81:
 272:Core/Src/main.c ****   /* USER CODE END RTOS_THREADS */
 1331              		.loc 1 272 25 discriminator 1 view .LVU402
 1332 00ee 1D4B     		ldr	r3, .L94+108
 1333 00f0 1860     		str	r0, [r3]
 280:Core/Src/main.c **** 
 1334              		.loc 1 280 3 is_stmt 1 view .LVU403
 1335 00f2 FFF7FEFF 		bl	osKernelStart
 1336              	.LVL82:
 1337              	.L91:
 286:Core/Src/main.c ****   {
 1338              		.loc 1 286 3 view .LVU404
 291:Core/Src/main.c ****   /* USER CODE END 3 */
 1339              		.loc 1 291 3 view .LVU405
 286:Core/Src/main.c ****   {
 1340              		.loc 1 286 9 view .LVU406
 1341 00f6 FEE7     		b	.L91
 1342              	.L95:
 1343              		.align	2
 1344              	.L94:
 1345 00f8 00000000 		.word	hadc1
 1346 00fc 00000000 		.word	hcan1
 1347 0100 00000000 		.word	I2C1_attributes
 1348 0104 00000000 		.word	I2C1Handle
 1349 0108 00000000 		.word	I2C3_attributes
 1350 010c 00000000 		.word	I2C3Handle
 1351 0110 00000000 		.word	CAN_attributes
 1352 0114 00000000 		.word	CANHandle
 1353 0118 00000000 		.word	BMSResetSem_attributes
 1354 011c 00000000 		.word	BMSResetSemHandle
 1355 0120 00000000 		.word	defaultTask_attributes
 1356 0124 00000000 		.word	StartDefaultTask
 1357 0128 00000000 		.word	defaultTaskHandle
 1358 012c 00000000 		.word	CellVoltageBMS1_attributes
 1359 0130 00000000 		.word	ReadBQBMS1
 1360 0134 00000000 		.word	CellVoltageBMS1Handle
 1361 0138 00000000 		.word	CellVoltageBMS2_attributes
 1362 013c 00000000 		.word	ReadBQBMS2
 1363 0140 00000000 		.word	CellVoltageBMS2Handle
 1364 0144 00000000 		.word	CellTemperature_attributes
 1365 0148 00000000 		.word	ReadCellTemps
 1366 014c 00000000 		.word	CellTemperatureHandle
 1367 0150 00000000 		.word	CANManager_attributes
 1368 0154 00000000 		.word	CAN_ManagerTask
 1369 0158 00000000 		.word	CANManagerHandle
 1370 015c 00000000 		.word	BMSResetHandler_attributes
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s 			page 51


 1371 0160 00000000 		.word	BMSResetHandlerTask
 1372 0164 00000000 		.word	BMSResetHandlerHandle
 1373              		.cfi_endproc
 1374              	.LFE292:
 1376              		.global	BMSResetHandler_attributes
 1377              		.section	.rodata.str1.4,"aMS",%progbits,1
 1378              		.align	2
 1379              	.LC0:
 1380 0000 424D5352 		.ascii	"BMSResetHandler\000"
 1380      65736574 
 1380      48616E64 
 1380      6C657200 
 1381              		.section	.rodata.BMSResetHandler_attributes,"a"
 1382              		.align	2
 1385              	BMSResetHandler_attributes:
 1386 0000 00000000 		.word	.LC0
 1387 0004 00000000 		.space	16
 1387      00000000 
 1387      00000000 
 1387      00000000 
 1388 0014 00020000 		.word	512
 1389 0018 08000000 		.word	8
 1390 001c 00000000 		.space	8
 1390      00000000 
 1391              		.global	BMSResetHandlerHandle
 1392              		.section	.bss.BMSResetHandlerHandle,"aw",%nobits
 1393              		.align	2
 1396              	BMSResetHandlerHandle:
 1397 0000 00000000 		.space	4
 1398              		.global	BMSResetSem_attributes
 1399              		.section	.rodata.str1.4
 1400              		.align	2
 1401              	.LC1:
 1402 0010 424D5352 		.ascii	"BMSResetSem\000"
 1402      65736574 
 1402      53656D00 
 1403              		.section	.rodata.BMSResetSem_attributes,"a"
 1404              		.align	2
 1407              	BMSResetSem_attributes:
 1408 0000 10000000 		.word	.LC1
 1409 0004 00000000 		.space	12
 1409      00000000 
 1409      00000000 
 1410              		.global	BMSResetSemHandle
 1411              		.section	.bss.BMSResetSemHandle,"aw",%nobits
 1412              		.align	2
 1415              	BMSResetSemHandle:
 1416 0000 00000000 		.space	4
 1417              		.global	CAN_attributes
 1418              		.section	.rodata.str1.4
 1419              		.align	2
 1420              	.LC2:
 1421 001c 43414E00 		.ascii	"CAN\000"
 1422              		.section	.rodata.CAN_attributes,"a"
 1423              		.align	2
 1426              	CAN_attributes:
 1427 0000 1C000000 		.word	.LC2
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s 			page 52


 1428 0004 00000000 		.space	12
 1428      00000000 
 1428      00000000 
 1429              		.global	CANHandle
 1430              		.section	.bss.CANHandle,"aw",%nobits
 1431              		.align	2
 1434              	CANHandle:
 1435 0000 00000000 		.space	4
 1436              		.global	I2C3_attributes
 1437              		.section	.rodata.str1.4
 1438              		.align	2
 1439              	.LC3:
 1440 0020 49324333 		.ascii	"I2C3\000"
 1440      00
 1441              		.section	.rodata.I2C3_attributes,"a"
 1442              		.align	2
 1445              	I2C3_attributes:
 1446 0000 20000000 		.word	.LC3
 1447 0004 00000000 		.space	12
 1447      00000000 
 1447      00000000 
 1448              		.global	I2C3Handle
 1449              		.section	.bss.I2C3Handle,"aw",%nobits
 1450              		.align	2
 1453              	I2C3Handle:
 1454 0000 00000000 		.space	4
 1455              		.global	I2C1_attributes
 1456              		.section	.rodata.str1.4
 1457 0025 000000   		.align	2
 1458              	.LC4:
 1459 0028 49324331 		.ascii	"I2C1\000"
 1459      00
 1460              		.section	.rodata.I2C1_attributes,"a"
 1461              		.align	2
 1464              	I2C1_attributes:
 1465 0000 28000000 		.word	.LC4
 1466 0004 00000000 		.space	12
 1466      00000000 
 1466      00000000 
 1467              		.global	I2C1Handle
 1468              		.section	.bss.I2C1Handle,"aw",%nobits
 1469              		.align	2
 1472              	I2C1Handle:
 1473 0000 00000000 		.space	4
 1474              		.global	CANManager_attributes
 1475              		.section	.rodata.str1.4
 1476 002d 000000   		.align	2
 1477              	.LC5:
 1478 0030 43414E4D 		.ascii	"CANManager\000"
 1478      616E6167 
 1478      657200
 1479              		.section	.rodata.CANManager_attributes,"a"
 1480              		.align	2
 1483              	CANManager_attributes:
 1484 0000 30000000 		.word	.LC5
 1485 0004 00000000 		.space	16
 1485      00000000 
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s 			page 53


 1485      00000000 
 1485      00000000 
 1486 0014 00040000 		.word	1024
 1487 0018 30000000 		.word	48
 1488 001c 00000000 		.space	8
 1488      00000000 
 1489              		.global	CANManagerHandle
 1490              		.section	.bss.CANManagerHandle,"aw",%nobits
 1491              		.align	2
 1494              	CANManagerHandle:
 1495 0000 00000000 		.space	4
 1496              		.global	CellTemperature_attributes
 1497              		.section	.rodata.str1.4
 1498 003b 00       		.align	2
 1499              	.LC6:
 1500 003c 43656C6C 		.ascii	"CellTemperature\000"
 1500      54656D70 
 1500      65726174 
 1500      75726500 
 1501              		.section	.rodata.CellTemperature_attributes,"a"
 1502              		.align	2
 1505              	CellTemperature_attributes:
 1506 0000 3C000000 		.word	.LC6
 1507 0004 00000000 		.space	16
 1507      00000000 
 1507      00000000 
 1507      00000000 
 1508 0014 00020000 		.word	512
 1509 0018 28000000 		.word	40
 1510 001c 00000000 		.space	8
 1510      00000000 
 1511              		.global	CellTemperatureHandle
 1512              		.section	.bss.CellTemperatureHandle,"aw",%nobits
 1513              		.align	2
 1516              	CellTemperatureHandle:
 1517 0000 00000000 		.space	4
 1518              		.global	CellVoltageBMS2_attributes
 1519              		.section	.rodata.str1.4
 1520              		.align	2
 1521              	.LC7:
 1522 004c 43656C6C 		.ascii	"CellVoltageBMS2\000"
 1522      566F6C74 
 1522      61676542 
 1522      4D533200 
 1523              		.section	.rodata.CellVoltageBMS2_attributes,"a"
 1524              		.align	2
 1527              	CellVoltageBMS2_attributes:
 1528 0000 4C000000 		.word	.LC7
 1529 0004 00000000 		.space	16
 1529      00000000 
 1529      00000000 
 1529      00000000 
 1530 0014 00020000 		.word	512
 1531 0018 28000000 		.word	40
 1532 001c 00000000 		.space	8
 1532      00000000 
 1533              		.global	CellVoltageBMS2Handle
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s 			page 54


 1534              		.section	.bss.CellVoltageBMS2Handle,"aw",%nobits
 1535              		.align	2
 1538              	CellVoltageBMS2Handle:
 1539 0000 00000000 		.space	4
 1540              		.global	CellVoltageBMS1_attributes
 1541              		.section	.rodata.str1.4
 1542              		.align	2
 1543              	.LC8:
 1544 005c 43656C6C 		.ascii	"CellVoltageBMS1\000"
 1544      566F6C74 
 1544      61676542 
 1544      4D533100 
 1545              		.section	.rodata.CellVoltageBMS1_attributes,"a"
 1546              		.align	2
 1549              	CellVoltageBMS1_attributes:
 1550 0000 5C000000 		.word	.LC8
 1551 0004 00000000 		.space	16
 1551      00000000 
 1551      00000000 
 1551      00000000 
 1552 0014 00020000 		.word	512
 1553 0018 28000000 		.word	40
 1554 001c 00000000 		.space	8
 1554      00000000 
 1555              		.global	CellVoltageBMS1Handle
 1556              		.section	.bss.CellVoltageBMS1Handle,"aw",%nobits
 1557              		.align	2
 1560              	CellVoltageBMS1Handle:
 1561 0000 00000000 		.space	4
 1562              		.global	defaultTask_attributes
 1563              		.section	.rodata.str1.4
 1564              		.align	2
 1565              	.LC9:
 1566 006c 64656661 		.ascii	"defaultTask\000"
 1566      756C7454 
 1566      61736B00 
 1567              		.section	.rodata.defaultTask_attributes,"a"
 1568              		.align	2
 1571              	defaultTask_attributes:
 1572 0000 6C000000 		.word	.LC9
 1573 0004 00000000 		.space	16
 1573      00000000 
 1573      00000000 
 1573      00000000 
 1574 0014 00020000 		.word	512
 1575 0018 18000000 		.word	24
 1576 001c 00000000 		.space	8
 1576      00000000 
 1577              		.global	defaultTaskHandle
 1578              		.section	.bss.defaultTaskHandle,"aw",%nobits
 1579              		.align	2
 1582              	defaultTaskHandle:
 1583 0000 00000000 		.space	4
 1584              		.global	hi2c3
 1585              		.section	.bss.hi2c3,"aw",%nobits
 1586              		.align	2
 1589              	hi2c3:
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s 			page 55


 1590 0000 00000000 		.space	84
 1590      00000000 
 1590      00000000 
 1590      00000000 
 1590      00000000 
 1591              		.global	hi2c1
 1592              		.section	.bss.hi2c1,"aw",%nobits
 1593              		.align	2
 1596              	hi2c1:
 1597 0000 00000000 		.space	84
 1597      00000000 
 1597      00000000 
 1597      00000000 
 1597      00000000 
 1598              		.global	hcrc
 1599              		.section	.bss.hcrc,"aw",%nobits
 1600              		.align	2
 1603              	hcrc:
 1604 0000 00000000 		.space	36
 1604      00000000 
 1604      00000000 
 1604      00000000 
 1604      00000000 
 1605              		.global	hcan1
 1606              		.section	.bss.hcan1,"aw",%nobits
 1607              		.align	2
 1610              	hcan1:
 1611 0000 00000000 		.space	40
 1611      00000000 
 1611      00000000 
 1611      00000000 
 1611      00000000 
 1612              		.global	hadc1
 1613              		.section	.bss.hadc1,"aw",%nobits
 1614              		.align	2
 1617              	hadc1:
 1618 0000 00000000 		.space	100
 1618      00000000 
 1618      00000000 
 1618      00000000 
 1618      00000000 
 1619              		.text
 1620              	.Letext0:
 1621              		.file 4 "C:/Users/Ali/AppData/Roaming/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tool
 1622              		.file 5 "C:/Users/Ali/AppData/Roaming/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tool
 1623              		.file 6 "Drivers/CMSIS/Include/core_cm4.h"
 1624              		.file 7 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l432xx.h"
 1625              		.file 8 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l4xx.h"
 1626              		.file 9 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 1627              		.file 10 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rcc.h"
 1628              		.file 11 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_gpio.h"
 1629              		.file 12 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 1630              		.file 13 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_adc.h"
 1631              		.file 14 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_can.h"
 1632              		.file 15 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_crc.h"
 1633              		.file 16 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_i2c.h"
 1634              		.file 17 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_tim.h"
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s 			page 56


 1635              		.file 18 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h"
 1636              		.file 19 "Core/Inc/main.h"
 1637              		.file 20 "Core/Inc/cell_temp_handler.h"
 1638              		.file 21 "Core/Inc/bq_handler.h"
 1639              		.file 22 "Core/Inc/error_manager.h"
 1640              		.file 23 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_pwr_ex.h"
 1641              		.file 24 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_i2c_ex.h"
 1642              		.file 25 "Core/Inc/can_manager.h"
 1643              		.file 26 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
 1644              		.file 27 "Core/Inc/config_manager.h"
 1645              		.file 28 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_adc_ex.h"
 1646              		.file 29 "<built-in>"
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s 			page 57


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s:21     .text.MX_GPIO_Init:00000000 $t
C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s:26     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s:155    .text.MX_GPIO_Init:00000094 $d
C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s:161    .text.StartDefaultTask:00000000 $t
C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s:167    .text.StartDefaultTask:00000000 StartDefaultTask
C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s:193    .text.ReadBQBMS1:00000000 $t
C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s:199    .text.ReadBQBMS1:00000000 ReadBQBMS1
C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s:220    .text.ReadBQBMS2:00000000 $t
C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s:226    .text.ReadBQBMS2:00000000 ReadBQBMS2
C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s:247    .text.ReadCellTemps:00000000 $t
C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s:253    .text.ReadCellTemps:00000000 ReadCellTemps
C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s:274    .text.BMSResetHandlerTask:00000000 $t
C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s:280    .text.BMSResetHandlerTask:00000000 BMSResetHandlerTask
C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s:313    .text.BMSResetHandlerTask:00000018 $d
C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s:1415   .bss.BMSResetSemHandle:00000000 BMSResetSemHandle
C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s:318    .text.vApplicationMallocFailedHook:00000000 $t
C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s:324    .text.vApplicationMallocFailedHook:00000000 vApplicationMallocFailedHook
C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s:383    .text.vApplicationMallocFailedHook:00000030 $d
C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s:390    .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s:396    .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s:429    .text.HAL_TIM_PeriodElapsedCallback:00000014 $d
C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s:434    .text.Error_Handler:00000000 $t
C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s:440    .text.Error_Handler:00000000 Error_Handler
C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s:472    .text.MX_ADC1_Init:00000000 $t
C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s:477    .text.MX_ADC1_Init:00000000 MX_ADC1_Init
C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s:602    .text.MX_ADC1_Init:00000074 $d
C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s:1617   .bss.hadc1:00000000 hadc1
C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s:609    .text.MX_CAN1_Init:00000000 $t
C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s:614    .text.MX_CAN1_Init:00000000 MX_CAN1_Init
C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s:734    .text.MX_CAN1_Init:00000068 $d
C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s:1610   .bss.hcan1:00000000 hcan1
C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s:740    .text.MX_CRC_Init:00000000 $t
C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s:745    .text.MX_CRC_Init:00000000 MX_CRC_Init
C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s:792    .text.MX_CRC_Init:00000024 $d
C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s:1603   .bss.hcrc:00000000 hcrc
C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s:798    .text.MX_I2C1_Init:00000000 $t
C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s:803    .text.MX_I2C1_Init:00000000 MX_I2C1_Init
C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s:884    .text.MX_I2C1_Init:00000048 $d
C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s:1596   .bss.hi2c1:00000000 hi2c1
C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s:891    .text.MX_I2C3_Init:00000000 $t
C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s:896    .text.MX_I2C3_Init:00000000 MX_I2C3_Init
C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s:977    .text.MX_I2C3_Init:00000048 $d
C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s:1589   .bss.hi2c3:00000000 hi2c3
C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s:984    .text.SystemClock_Config:00000000 $t
C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s:990    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s:1114   .text.main:00000000 $t
C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s:1120   .text.main:00000000 main
C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s:1345   .text.main:000000f8 $d
C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s:1464   .rodata.I2C1_attributes:00000000 I2C1_attributes
C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s:1472   .bss.I2C1Handle:00000000 I2C1Handle
C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s:1445   .rodata.I2C3_attributes:00000000 I2C3_attributes
C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s:1453   .bss.I2C3Handle:00000000 I2C3Handle
C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s:1426   .rodata.CAN_attributes:00000000 CAN_attributes
C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s:1434   .bss.CANHandle:00000000 CANHandle
C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s:1407   .rodata.BMSResetSem_attributes:00000000 BMSResetSem_attributes
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s 			page 58


C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s:1571   .rodata.defaultTask_attributes:00000000 defaultTask_attributes
C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s:1582   .bss.defaultTaskHandle:00000000 defaultTaskHandle
C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s:1549   .rodata.CellVoltageBMS1_attributes:00000000 CellVoltageBMS1_attributes
C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s:1560   .bss.CellVoltageBMS1Handle:00000000 CellVoltageBMS1Handle
C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s:1527   .rodata.CellVoltageBMS2_attributes:00000000 CellVoltageBMS2_attributes
C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s:1538   .bss.CellVoltageBMS2Handle:00000000 CellVoltageBMS2Handle
C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s:1505   .rodata.CellTemperature_attributes:00000000 CellTemperature_attributes
C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s:1516   .bss.CellTemperatureHandle:00000000 CellTemperatureHandle
C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s:1483   .rodata.CANManager_attributes:00000000 CANManager_attributes
C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s:1494   .bss.CANManagerHandle:00000000 CANManagerHandle
C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s:1385   .rodata.BMSResetHandler_attributes:00000000 BMSResetHandler_attributes
C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s:1396   .bss.BMSResetHandlerHandle:00000000 BMSResetHandlerHandle
C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s:1378   .rodata.str1.4:00000000 $d
C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s:1382   .rodata.BMSResetHandler_attributes:00000000 $d
C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s:1393   .bss.BMSResetHandlerHandle:00000000 $d
C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s:1404   .rodata.BMSResetSem_attributes:00000000 $d
C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s:1412   .bss.BMSResetSemHandle:00000000 $d
C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s:1423   .rodata.CAN_attributes:00000000 $d
C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s:1431   .bss.CANHandle:00000000 $d
C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s:1442   .rodata.I2C3_attributes:00000000 $d
C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s:1450   .bss.I2C3Handle:00000000 $d
C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s:1461   .rodata.I2C1_attributes:00000000 $d
C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s:1469   .bss.I2C1Handle:00000000 $d
C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s:1480   .rodata.CANManager_attributes:00000000 $d
C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s:1491   .bss.CANManagerHandle:00000000 $d
C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s:1502   .rodata.CellTemperature_attributes:00000000 $d
C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s:1513   .bss.CellTemperatureHandle:00000000 $d
C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s:1524   .rodata.CellVoltageBMS2_attributes:00000000 $d
C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s:1535   .bss.CellVoltageBMS2Handle:00000000 $d
C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s:1546   .rodata.CellVoltageBMS1_attributes:00000000 $d
C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s:1557   .bss.CellVoltageBMS1Handle:00000000 $d
C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s:1568   .rodata.defaultTask_attributes:00000000 $d
C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s:1579   .bss.defaultTaskHandle:00000000 $d
C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s:1586   .bss.hi2c3:00000000 $d
C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s:1593   .bss.hi2c1:00000000 $d
C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s:1600   .bss.hcrc:00000000 $d
C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s:1607   .bss.hcan1:00000000 $d
C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s:1614   .bss.hadc1:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
osDelay
BQ_MonitorTask
BQ_MonitorTask_BMS2
CellTemp_MonitorTask
osSemaphoreAcquire
BQ_ResetChips
HAL_GPIO_TogglePin
HAL_IncTick
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_CAN_Init
HAL_CAN_ConfigFilter
HAL_CRC_Init
HAL_I2C_Init
HAL_I2CEx_ConfigAnalogFilter
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccNm8P1F.s 			page 59


HAL_I2CEx_ConfigDigitalFilter
memset
HAL_PWREx_ControlVoltageScaling
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_ADCEx_Calibration_Start
HAL_CAN_Start
osKernelInitialize
osMutexNew
osSemaphoreNew
Config_Init
ErrorMgr_Init
CAN_Manager_Init
ErrorMgr_SetState
osThreadNew
osKernelStart
CAN_ManagerTask
