ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.text.MX_GPIO_Init,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	MX_GPIO_Init:
  27              	.LFB299:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "cmsis_os.h"
  22:Core/Src/main.c **** 
  23:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/main.c **** #include "cell_temp_handler.h"
  26:Core/Src/main.c **** #include "cell_voltage_handler.h"
  27:Core/Src/main.c **** #include "can_manager.h"
  28:Core/Src/main.c **** #include "config_manager.h"
  29:Core/Src/main.c **** #include "error_manager.h"
  30:Core/Src/main.c **** /* USER CODE END Includes */
  31:Core/Src/main.c **** 
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s 			page 2


  32:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* USER CODE END PTD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PD */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  43:Core/Src/main.c **** /* USER CODE BEGIN PM */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* USER CODE END PM */
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  48:Core/Src/main.c **** ADC_HandleTypeDef hadc1;
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** CAN_HandleTypeDef hcan1;
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** CRC_HandleTypeDef hcrc;
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** I2C_HandleTypeDef hi2c1;
  55:Core/Src/main.c **** I2C_HandleTypeDef hi2c3;
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* Definitions for defaultTask */
  58:Core/Src/main.c **** osThreadId_t defaultTaskHandle;
  59:Core/Src/main.c **** const osThreadAttr_t defaultTask_attributes = {
  60:Core/Src/main.c ****   .name = "defaultTask",
  61:Core/Src/main.c ****   .stack_size = 128 * 4,
  62:Core/Src/main.c ****   .priority = (osPriority_t) osPriorityNormal,
  63:Core/Src/main.c **** };
  64:Core/Src/main.c **** /* USER CODE BEGIN PV */
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** /* Definitions for CellVoltageBMS1 */
  67:Core/Src/main.c **** osThreadId_t CellVoltageBMS1Handle;
  68:Core/Src/main.c **** const osThreadAttr_t CellVoltageBMS1_attributes = {
  69:Core/Src/main.c ****   .name = "CellVoltageBMS1",
  70:Core/Src/main.c ****   .stack_size = 128 * 4,
  71:Core/Src/main.c ****   .priority = (osPriority_t) osPriorityHigh,
  72:Core/Src/main.c **** };
  73:Core/Src/main.c **** /* Definitions for CellVoltageBMS2 */
  74:Core/Src/main.c **** osThreadId_t CellVoltageBMS2Handle;
  75:Core/Src/main.c **** const osThreadAttr_t CellVoltageBMS2_attributes = {
  76:Core/Src/main.c ****   .name = "CellVoltageBMS2",
  77:Core/Src/main.c ****   .stack_size = 128 * 4,
  78:Core/Src/main.c ****   .priority = (osPriority_t) osPriorityHigh,
  79:Core/Src/main.c **** };
  80:Core/Src/main.c **** /* Definitions for CellTemperature */
  81:Core/Src/main.c **** osThreadId_t CellTemperatureHandle;
  82:Core/Src/main.c **** const osThreadAttr_t CellTemperature_attributes = {
  83:Core/Src/main.c ****   .name = "CellTemperature",
  84:Core/Src/main.c ****   .stack_size = 128 * 4,
  85:Core/Src/main.c ****   .priority = (osPriority_t) osPriorityHigh,
  86:Core/Src/main.c **** };
  87:Core/Src/main.c **** /* Definitions for CANManager */
  88:Core/Src/main.c **** osThreadId_t CANManagerHandle;
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s 			page 3


  89:Core/Src/main.c **** const osThreadAttr_t CANManager_attributes = {
  90:Core/Src/main.c ****   .name = "CANManager",
  91:Core/Src/main.c ****   .stack_size = 256 * 4,
  92:Core/Src/main.c ****   .priority = (osPriority_t) osPriorityRealtime,
  93:Core/Src/main.c **** };
  94:Core/Src/main.c **** /* Definitions for I2C1 */
  95:Core/Src/main.c **** osMutexId_t I2C1Handle;
  96:Core/Src/main.c **** const osMutexAttr_t I2C1_attributes = {
  97:Core/Src/main.c ****   .name = "I2C1"
  98:Core/Src/main.c **** };
  99:Core/Src/main.c **** /* Definitions for I2C3 */
 100:Core/Src/main.c **** osMutexId_t I2C3Handle;
 101:Core/Src/main.c **** const osMutexAttr_t I2C3_attributes = {
 102:Core/Src/main.c ****   .name = "I2C3"
 103:Core/Src/main.c **** };
 104:Core/Src/main.c **** /* Definitions for CAN */
 105:Core/Src/main.c **** osMutexId_t CANHandle;
 106:Core/Src/main.c **** const osMutexAttr_t CAN_attributes = {
 107:Core/Src/main.c ****   .name = "CAN"
 108:Core/Src/main.c **** };
 109:Core/Src/main.c **** 
 110:Core/Src/main.c **** /* USER CODE END PV */
 111:Core/Src/main.c **** 
 112:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
 113:Core/Src/main.c **** void SystemClock_Config(void);
 114:Core/Src/main.c **** static void MX_GPIO_Init(void);
 115:Core/Src/main.c **** static void MX_ADC1_Init(void);
 116:Core/Src/main.c **** static void MX_CAN1_Init(void);
 117:Core/Src/main.c **** static void MX_CRC_Init(void);
 118:Core/Src/main.c **** static void MX_I2C1_Init(void);
 119:Core/Src/main.c **** static void MX_I2C3_Init(void);
 120:Core/Src/main.c **** void StartDefaultTask(void *argument);
 121:Core/Src/main.c **** 
 122:Core/Src/main.c **** /* USER CODE BEGIN PFP */
 123:Core/Src/main.c **** void ReadCellVoltageBMS1(void *argument);
 124:Core/Src/main.c **** void ReadCellVoltageBMS2(void *argument);
 125:Core/Src/main.c **** void ReadCellTemps(void *argument);
 126:Core/Src/main.c **** 
 127:Core/Src/main.c **** /* USER CODE END PFP */
 128:Core/Src/main.c **** 
 129:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 130:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 131:Core/Src/main.c **** 
 132:Core/Src/main.c **** /* USER CODE END 0 */
 133:Core/Src/main.c **** 
 134:Core/Src/main.c **** /**
 135:Core/Src/main.c ****   * @brief  The application entry point.
 136:Core/Src/main.c ****   * @retval int
 137:Core/Src/main.c ****   */
 138:Core/Src/main.c **** int main(void)
 139:Core/Src/main.c **** {
 140:Core/Src/main.c **** 
 141:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 142:Core/Src/main.c ****   // When coming from bootloader, disable all interrupts first
 143:Core/Src/main.c ****   __disable_irq();
 144:Core/Src/main.c **** 
 145:Core/Src/main.c ****   // Disable SysTick (bootloader might have enabled it)
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s 			page 4


 146:Core/Src/main.c ****   SysTick->CTRL = 0;
 147:Core/Src/main.c ****   SysTick->LOAD = 0;
 148:Core/Src/main.c ****   SysTick->VAL = 0;
 149:Core/Src/main.c **** 
 150:Core/Src/main.c ****   /* USER CODE END 1 */
 151:Core/Src/main.c **** 
 152:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 153:Core/Src/main.c **** 
 154:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 155:Core/Src/main.c ****   HAL_Init();
 156:Core/Src/main.c **** 
 157:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 158:Core/Src/main.c **** 
 159:Core/Src/main.c ****   /* USER CODE END Init */
 160:Core/Src/main.c **** 
 161:Core/Src/main.c ****   /* Configure the system clock */
 162:Core/Src/main.c ****   SystemClock_Config();
 163:Core/Src/main.c **** 
 164:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 165:Core/Src/main.c **** 
 166:Core/Src/main.c ****   /* USER CODE END SysInit */
 167:Core/Src/main.c **** 
 168:Core/Src/main.c ****   /* Initialize all configured peripherals */
 169:Core/Src/main.c ****   MX_GPIO_Init();
 170:Core/Src/main.c ****   MX_ADC1_Init();
 171:Core/Src/main.c ****   MX_CAN1_Init();
 172:Core/Src/main.c ****   MX_CRC_Init();
 173:Core/Src/main.c ****   MX_I2C1_Init();
 174:Core/Src/main.c ****   MX_I2C3_Init();
 175:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 176:Core/Src/main.c ****   
 177:Core/Src/main.c ****   // Calibrate ADC
 178:Core/Src/main.c ****   if (HAL_ADCEx_Calibration_Start(&hadc1, ADC_SINGLE_ENDED) != HAL_OK)
 179:Core/Src/main.c ****   {
 180:Core/Src/main.c ****     Error_Handler();
 181:Core/Src/main.c ****   }
 182:Core/Src/main.c ****   
 183:Core/Src/main.c ****   // Start CAN peripheral
 184:Core/Src/main.c ****   if (HAL_CAN_Start(&hcan1) != HAL_OK)
 185:Core/Src/main.c ****   {
 186:Core/Src/main.c ****     Error_Handler();
 187:Core/Src/main.c ****   }
 188:Core/Src/main.c **** 
 189:Core/Src/main.c ****   /* USER CODE END 2 */
 190:Core/Src/main.c **** 
 191:Core/Src/main.c ****   /* Init scheduler */
 192:Core/Src/main.c ****   osKernelInitialize();
 193:Core/Src/main.c ****   /* Create the mutex(es) */
 194:Core/Src/main.c ****   /* creation of I2C1 */
 195:Core/Src/main.c ****   I2C1Handle = osMutexNew(&I2C1_attributes);
 196:Core/Src/main.c **** 
 197:Core/Src/main.c ****   /* creation of I2C3 */
 198:Core/Src/main.c ****   I2C3Handle = osMutexNew(&I2C3_attributes);
 199:Core/Src/main.c **** 
 200:Core/Src/main.c ****   /* creation of CAN */
 201:Core/Src/main.c ****   CANHandle = osMutexNew(&CAN_attributes);
 202:Core/Src/main.c **** 
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s 			page 5


 203:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_MUTEX */
 204:Core/Src/main.c ****   /* add mutexes, ... */
 205:Core/Src/main.c ****   /* USER CODE END RTOS_MUTEX */
 206:Core/Src/main.c **** 
 207:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_SEMAPHORES */
 208:Core/Src/main.c ****   /* add semaphores, ... */
 209:Core/Src/main.c ****   /* USER CODE END RTOS_SEMAPHORES */
 210:Core/Src/main.c **** 
 211:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_TIMERS */
 212:Core/Src/main.c ****   /* start timers, add new ones, ... */
 213:Core/Src/main.c ****   /* USER CODE END RTOS_TIMERS */
 214:Core/Src/main.c **** 
 215:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_QUEUES */
 216:Core/Src/main.c ****   // Initialize Configuration Manager
 217:Core/Src/main.c ****   Config_Init();
 218:Core/Src/main.c ****   
 219:Core/Src/main.c ****   // Initialize Error Manager
 220:Core/Src/main.c ****   if (ErrorMgr_Init() != HAL_OK)
 221:Core/Src/main.c ****   {
 222:Core/Src/main.c ****     Error_Handler();
 223:Core/Src/main.c ****   }
 224:Core/Src/main.c ****   
 225:Core/Src/main.c ****   // Initialize CAN Manager (creates TX and RX message queues)
 226:Core/Src/main.c ****   if (CAN_Manager_Init() != HAL_OK)
 227:Core/Src/main.c ****   {
 228:Core/Src/main.c ****     Error_Handler();
 229:Core/Src/main.c ****   }
 230:Core/Src/main.c ****   
 231:Core/Src/main.c ****   // Set initial BMS state to IDLE after initialization
 232:Core/Src/main.c ****   ErrorMgr_SetState(BMS_STATE_IDLE);
 233:Core/Src/main.c ****   /* USER CODE END RTOS_QUEUES */
 234:Core/Src/main.c **** 
 235:Core/Src/main.c ****   /* Create the thread(s) */
 236:Core/Src/main.c ****   /* creation of defaultTask */
 237:Core/Src/main.c ****   defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 238:Core/Src/main.c **** 
 239:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_THREADS */
 240:Core/Src/main.c ****   /* creation of CellVoltageBMS1 */
 241:Core/Src/main.c ****   CellVoltageBMS1Handle = osThreadNew(ReadCellVoltageBMS1, NULL, &CellVoltageBMS1_attributes);
 242:Core/Src/main.c **** 
 243:Core/Src/main.c ****   /* creation of CellVoltageBMS2 */
 244:Core/Src/main.c ****   CellVoltageBMS2Handle = osThreadNew(ReadCellVoltageBMS2, NULL, &CellVoltageBMS2_attributes);
 245:Core/Src/main.c **** 
 246:Core/Src/main.c ****   /* creation of CellTemperature */
 247:Core/Src/main.c ****   CellTemperatureHandle = osThreadNew(ReadCellTemps, NULL, &CellTemperature_attributes);
 248:Core/Src/main.c **** 
 249:Core/Src/main.c ****   /* creation of CANManager */
 250:Core/Src/main.c ****   CANManagerHandle = osThreadNew(CAN_ManagerTask, NULL, &CANManager_attributes);
 251:Core/Src/main.c ****   /* USER CODE END RTOS_THREADS */
 252:Core/Src/main.c **** 
 253:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_EVENTS */
 254:Core/Src/main.c ****   /* add events, ... */
 255:Core/Src/main.c ****   /* USER CODE END RTOS_EVENTS */
 256:Core/Src/main.c **** 
 257:Core/Src/main.c ****   /* Start scheduler */
 258:Core/Src/main.c ****   osKernelStart();
 259:Core/Src/main.c **** 
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s 			page 6


 260:Core/Src/main.c ****   /* We should never get here as control is now taken by the scheduler */
 261:Core/Src/main.c **** 
 262:Core/Src/main.c ****   /* Infinite loop */
 263:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 264:Core/Src/main.c ****   while (1)
 265:Core/Src/main.c ****   {
 266:Core/Src/main.c ****     /* USER CODE END WHILE */
 267:Core/Src/main.c **** 
 268:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 269:Core/Src/main.c ****   }
 270:Core/Src/main.c ****   /* USER CODE END 3 */
 271:Core/Src/main.c **** }
 272:Core/Src/main.c **** 
 273:Core/Src/main.c **** /**
 274:Core/Src/main.c ****   * @brief System Clock Configuration
 275:Core/Src/main.c ****   * @retval None
 276:Core/Src/main.c ****   */
 277:Core/Src/main.c **** void SystemClock_Config(void)
 278:Core/Src/main.c **** {
 279:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 280:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 281:Core/Src/main.c **** 
 282:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 283:Core/Src/main.c ****   */
 284:Core/Src/main.c ****   if (HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1) != HAL_OK)
 285:Core/Src/main.c ****   {
 286:Core/Src/main.c ****     Error_Handler();
 287:Core/Src/main.c ****   }
 288:Core/Src/main.c **** 
 289:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 290:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 291:Core/Src/main.c ****   */
 292:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 293:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 294:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 295:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 296:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 297:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 2;
 298:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 20;
 299:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
 300:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 301:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 302:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 303:Core/Src/main.c ****   {
 304:Core/Src/main.c ****     Error_Handler();
 305:Core/Src/main.c ****   }
 306:Core/Src/main.c **** 
 307:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 308:Core/Src/main.c ****   */
 309:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 310:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 311:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 312:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 313:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 314:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 315:Core/Src/main.c **** 
 316:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s 			page 7


 317:Core/Src/main.c ****   {
 318:Core/Src/main.c ****     Error_Handler();  
 319:Core/Src/main.c ****   }
 320:Core/Src/main.c **** }
 321:Core/Src/main.c **** 
 322:Core/Src/main.c **** /**
 323:Core/Src/main.c ****   * @brief ADC1 Initialization Function
 324:Core/Src/main.c ****   * @param None
 325:Core/Src/main.c ****   * @retval None
 326:Core/Src/main.c ****   */
 327:Core/Src/main.c **** static void MX_ADC1_Init(void)
 328:Core/Src/main.c **** {
 329:Core/Src/main.c **** 
 330:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 0 */
 331:Core/Src/main.c **** 
 332:Core/Src/main.c ****   /* USER CODE END ADC1_Init 0 */
 333:Core/Src/main.c **** 
 334:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 335:Core/Src/main.c **** 
 336:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 1 */
 337:Core/Src/main.c **** 
 338:Core/Src/main.c ****   /* USER CODE END ADC1_Init 1 */
 339:Core/Src/main.c **** 
 340:Core/Src/main.c ****   /** Common config
 341:Core/Src/main.c ****   */
 342:Core/Src/main.c ****   hadc1.Instance = ADC1;
 343:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 344:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 345:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 346:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 347:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 348:Core/Src/main.c ****   hadc1.Init.LowPowerAutoWait = DISABLE;
 349:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
 350:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 351:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 352:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 353:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 354:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = DISABLE;
 355:Core/Src/main.c ****   hadc1.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 356:Core/Src/main.c ****   hadc1.Init.OversamplingMode = DISABLE;
 357:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 358:Core/Src/main.c ****   {
 359:Core/Src/main.c ****     Error_Handler();
 360:Core/Src/main.c ****   }
 361:Core/Src/main.c **** 
 362:Core/Src/main.c ****   /** Configure Regular Channel
 363:Core/Src/main.c ****   */
 364:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_5;  // ADC1 (PA0) - first thermistor channel
 365:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 366:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_640CYCLES_5;  // Longer sampling for high impedance thermis
 367:Core/Src/main.c ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 368:Core/Src/main.c ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 369:Core/Src/main.c ****   sConfig.Offset = 0;
 370:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 371:Core/Src/main.c ****   {
 372:Core/Src/main.c ****     Error_Handler();
 373:Core/Src/main.c ****   }
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s 			page 8


 374:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 2 */
 375:Core/Src/main.c **** 
 376:Core/Src/main.c ****   /* USER CODE END ADC1_Init 2 */
 377:Core/Src/main.c **** 
 378:Core/Src/main.c **** }
 379:Core/Src/main.c **** 
 380:Core/Src/main.c **** /**
 381:Core/Src/main.c ****   * @brief CAN1 Initialization Function
 382:Core/Src/main.c ****   * @param None
 383:Core/Src/main.c ****   * @retval None
 384:Core/Src/main.c ****   */
 385:Core/Src/main.c **** static void MX_CAN1_Init(void)
 386:Core/Src/main.c **** {
 387:Core/Src/main.c **** 
 388:Core/Src/main.c ****   /* USER CODE BEGIN CAN1_Init 0 */
 389:Core/Src/main.c **** 
 390:Core/Src/main.c ****   /* USER CODE END CAN1_Init 0 */
 391:Core/Src/main.c **** 
 392:Core/Src/main.c ****   /* USER CODE BEGIN CAN1_Init 1 */
 393:Core/Src/main.c **** 
 394:Core/Src/main.c ****   /* USER CODE END CAN1_Init 1 */
 395:Core/Src/main.c ****   hcan1.Instance = CAN1;
 396:Core/Src/main.c ****   hcan1.Init.Prescaler = 10;
 397:Core/Src/main.c ****   hcan1.Init.Mode = CAN_MODE_NORMAL;
 398:Core/Src/main.c ****   hcan1.Init.SyncJumpWidth = CAN_SJW_1TQ;
 399:Core/Src/main.c ****   hcan1.Init.TimeSeg1 = CAN_BS1_13TQ;
 400:Core/Src/main.c ****   hcan1.Init.TimeSeg2 = CAN_BS2_2TQ;
 401:Core/Src/main.c ****   hcan1.Init.TimeTriggeredMode = DISABLE;
 402:Core/Src/main.c ****   hcan1.Init.AutoBusOff = DISABLE;
 403:Core/Src/main.c ****   hcan1.Init.AutoWakeUp = DISABLE;
 404:Core/Src/main.c ****   hcan1.Init.AutoRetransmission = DISABLE;
 405:Core/Src/main.c ****   hcan1.Init.ReceiveFifoLocked = DISABLE;
 406:Core/Src/main.c ****   hcan1.Init.TransmitFifoPriority = DISABLE;
 407:Core/Src/main.c ****   if (HAL_CAN_Init(&hcan1) != HAL_OK)
 408:Core/Src/main.c ****   {
 409:Core/Src/main.c ****     Error_Handler();
 410:Core/Src/main.c ****   }
 411:Core/Src/main.c ****   /* USER CODE BEGIN CAN1_Init 2 */
 412:Core/Src/main.c ****   
 413:Core/Src/main.c ****   // Configure CAN filter BEFORE starting CAN
 414:Core/Src/main.c ****   // Accept all extended CAN IDs (for debugging)
 415:Core/Src/main.c ****   CAN_FilterTypeDef filterConfig;
 416:Core/Src/main.c ****   filterConfig.FilterBank = 0;
 417:Core/Src/main.c ****   filterConfig.FilterMode = CAN_FILTERMODE_IDMASK;
 418:Core/Src/main.c ****   filterConfig.FilterScale = CAN_FILTERSCALE_32BIT;
 419:Core/Src/main.c ****   
 420:Core/Src/main.c ****   // Accept all extended IDs: ID=0, Mask=0 means "don't care about any bits"
 421:Core/Src/main.c ****   filterConfig.FilterIdHigh = 0x0000;
 422:Core/Src/main.c ****   filterConfig.FilterIdLow = 0x0004;   // Only IDE bit set (extended ID)
 423:Core/Src/main.c ****   filterConfig.FilterMaskIdHigh = 0x0000;  // Don't care about any ID bits
 424:Core/Src/main.c ****   filterConfig.FilterMaskIdLow = 0x0004;   // But we DO care about IDE bit (only extended)
 425:Core/Src/main.c ****   
 426:Core/Src/main.c ****   filterConfig.FilterFIFOAssignment = CAN_RX_FIFO0;
 427:Core/Src/main.c ****   filterConfig.FilterActivation = ENABLE;
 428:Core/Src/main.c ****   filterConfig.SlaveStartFilterBank = 14;
 429:Core/Src/main.c ****   
 430:Core/Src/main.c ****   if (HAL_CAN_ConfigFilter(&hcan1, &filterConfig) != HAL_OK)
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s 			page 9


 431:Core/Src/main.c ****   {
 432:Core/Src/main.c ****     Error_Handler();
 433:Core/Src/main.c ****   }
 434:Core/Src/main.c **** 
 435:Core/Src/main.c ****   /* USER CODE END CAN1_Init 2 */
 436:Core/Src/main.c **** 
 437:Core/Src/main.c **** }
 438:Core/Src/main.c **** 
 439:Core/Src/main.c **** /**
 440:Core/Src/main.c ****   * @brief CRC Initialization Function
 441:Core/Src/main.c ****   * @param None
 442:Core/Src/main.c ****   * @retval None
 443:Core/Src/main.c ****   */
 444:Core/Src/main.c **** static void MX_CRC_Init(void)
 445:Core/Src/main.c **** {
 446:Core/Src/main.c **** 
 447:Core/Src/main.c ****   /* USER CODE BEGIN CRC_Init 0 */
 448:Core/Src/main.c **** 
 449:Core/Src/main.c ****   /* USER CODE END CRC_Init 0 */
 450:Core/Src/main.c **** 
 451:Core/Src/main.c ****   /* USER CODE BEGIN CRC_Init 1 */
 452:Core/Src/main.c **** 
 453:Core/Src/main.c ****   /* USER CODE END CRC_Init 1 */
 454:Core/Src/main.c ****   hcrc.Instance = CRC;
 455:Core/Src/main.c ****   hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
 456:Core/Src/main.c ****   hcrc.Init.DefaultInitValueUse = DEFAULT_INIT_VALUE_ENABLE;
 457:Core/Src/main.c ****   hcrc.Init.InputDataInversionMode = CRC_INPUTDATA_INVERSION_NONE;
 458:Core/Src/main.c ****   hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
 459:Core/Src/main.c ****   hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
 460:Core/Src/main.c ****   if (HAL_CRC_Init(&hcrc) != HAL_OK)
 461:Core/Src/main.c ****   {
 462:Core/Src/main.c ****     Error_Handler();
 463:Core/Src/main.c ****   }
 464:Core/Src/main.c ****   /* USER CODE BEGIN CRC_Init 2 */
 465:Core/Src/main.c **** 
 466:Core/Src/main.c ****   /* USER CODE END CRC_Init 2 */
 467:Core/Src/main.c **** 
 468:Core/Src/main.c **** }
 469:Core/Src/main.c **** 
 470:Core/Src/main.c **** /**
 471:Core/Src/main.c ****   * @brief I2C1 Initialization Function
 472:Core/Src/main.c ****   * @param None
 473:Core/Src/main.c ****   * @retval None
 474:Core/Src/main.c ****   */
 475:Core/Src/main.c **** static void MX_I2C1_Init(void)
 476:Core/Src/main.c **** {
 477:Core/Src/main.c **** 
 478:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 0 */
 479:Core/Src/main.c **** 
 480:Core/Src/main.c ****   /* USER CODE END I2C1_Init 0 */
 481:Core/Src/main.c **** 
 482:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 1 */
 483:Core/Src/main.c **** 
 484:Core/Src/main.c ****   /* USER CODE END I2C1_Init 1 */
 485:Core/Src/main.c ****   hi2c1.Instance = I2C1;
 486:Core/Src/main.c ****   hi2c1.Init.Timing = 0x00503D58;
 487:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s 			page 10


 488:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 489:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 490:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 491:Core/Src/main.c ****   hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 492:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 493:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 494:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 495:Core/Src/main.c ****   {
 496:Core/Src/main.c ****     Error_Handler();
 497:Core/Src/main.c ****   }
 498:Core/Src/main.c **** 
 499:Core/Src/main.c ****   /** Configure Analogue filter
 500:Core/Src/main.c ****   */
 501:Core/Src/main.c ****   if (HAL_I2CEx_ConfigAnalogFilter(&hi2c1, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 502:Core/Src/main.c ****   {
 503:Core/Src/main.c ****     Error_Handler();
 504:Core/Src/main.c ****   }
 505:Core/Src/main.c **** 
 506:Core/Src/main.c ****   /** Configure Digital filter
 507:Core/Src/main.c ****   */
 508:Core/Src/main.c ****   if (HAL_I2CEx_ConfigDigitalFilter(&hi2c1, 0) != HAL_OK)
 509:Core/Src/main.c ****   {
 510:Core/Src/main.c ****     Error_Handler();
 511:Core/Src/main.c ****   }
 512:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 2 */
 513:Core/Src/main.c **** 
 514:Core/Src/main.c ****   /* USER CODE END I2C1_Init 2 */
 515:Core/Src/main.c **** 
 516:Core/Src/main.c **** }
 517:Core/Src/main.c **** 
 518:Core/Src/main.c **** /**
 519:Core/Src/main.c ****   * @brief I2C3 Initialization Function
 520:Core/Src/main.c ****   * @param None
 521:Core/Src/main.c ****   * @retval None
 522:Core/Src/main.c ****   */
 523:Core/Src/main.c **** static void MX_I2C3_Init(void)
 524:Core/Src/main.c **** {
 525:Core/Src/main.c **** 
 526:Core/Src/main.c ****   /* USER CODE BEGIN I2C3_Init 0 */
 527:Core/Src/main.c **** 
 528:Core/Src/main.c ****   /* USER CODE END I2C3_Init 0 */
 529:Core/Src/main.c **** 
 530:Core/Src/main.c ****   /* USER CODE BEGIN I2C3_Init 1 */
 531:Core/Src/main.c **** 
 532:Core/Src/main.c ****   /* USER CODE END I2C3_Init 1 */
 533:Core/Src/main.c ****   hi2c3.Instance = I2C3;
 534:Core/Src/main.c ****   hi2c3.Init.Timing = 0x00503D58;
 535:Core/Src/main.c ****   hi2c3.Init.OwnAddress1 = 0;
 536:Core/Src/main.c ****   hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 537:Core/Src/main.c ****   hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 538:Core/Src/main.c ****   hi2c3.Init.OwnAddress2 = 0;
 539:Core/Src/main.c ****   hi2c3.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 540:Core/Src/main.c ****   hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 541:Core/Src/main.c ****   hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 542:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 543:Core/Src/main.c ****   {
 544:Core/Src/main.c ****     Error_Handler();
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s 			page 11


 545:Core/Src/main.c ****   }
 546:Core/Src/main.c **** 
 547:Core/Src/main.c ****   /** Configure Analogue filter
 548:Core/Src/main.c ****   */
 549:Core/Src/main.c ****   if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 550:Core/Src/main.c ****   {
 551:Core/Src/main.c ****     Error_Handler();
 552:Core/Src/main.c ****   }
 553:Core/Src/main.c **** 
 554:Core/Src/main.c ****   /** Configure Digital filter
 555:Core/Src/main.c ****   */
 556:Core/Src/main.c ****   if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 557:Core/Src/main.c ****   {
 558:Core/Src/main.c ****     Error_Handler();
 559:Core/Src/main.c ****   }
 560:Core/Src/main.c ****   /* USER CODE BEGIN I2C3_Init 2 */
 561:Core/Src/main.c **** 
 562:Core/Src/main.c ****   /* USER CODE END I2C3_Init 2 */
 563:Core/Src/main.c **** 
 564:Core/Src/main.c **** }
 565:Core/Src/main.c **** 
 566:Core/Src/main.c **** /**
 567:Core/Src/main.c ****   * @brief GPIO Initialization Function
 568:Core/Src/main.c ****   * @param None
 569:Core/Src/main.c ****   * @retval None
 570:Core/Src/main.c ****   */
 571:Core/Src/main.c **** static void MX_GPIO_Init(void)
 572:Core/Src/main.c **** {
  28              		.loc 1 572 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  33              		.cfi_def_cfa_offset 20
  34              		.cfi_offset 4, -20
  35              		.cfi_offset 5, -16
  36              		.cfi_offset 6, -12
  37              		.cfi_offset 7, -8
  38              		.cfi_offset 14, -4
  39 0002 89B0     		sub	sp, sp, #36
  40              		.cfi_def_cfa_offset 56
 573:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  41              		.loc 1 573 3 view .LVU1
  42              		.loc 1 573 20 is_stmt 0 view .LVU2
  43 0004 03AD     		add	r5, sp, #12
  44 0006 0024     		movs	r4, #0
  45 0008 0394     		str	r4, [sp, #12]
  46 000a 0494     		str	r4, [sp, #16]
  47 000c 0594     		str	r4, [sp, #20]
  48 000e 0694     		str	r4, [sp, #24]
  49 0010 0794     		str	r4, [sp, #28]
 574:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_1 */
 575:Core/Src/main.c **** 
 576:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_1 */
 577:Core/Src/main.c **** 
 578:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 579:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s 			page 12


  50              		.loc 1 579 3 is_stmt 1 view .LVU3
  51              	.LBB9:
  52              		.loc 1 579 3 view .LVU4
  53              		.loc 1 579 3 view .LVU5
  54 0012 204B     		ldr	r3, .L3
  55 0014 DA6C     		ldr	r2, [r3, #76]
  56 0016 42F00102 		orr	r2, r2, #1
  57 001a DA64     		str	r2, [r3, #76]
  58              		.loc 1 579 3 view .LVU6
  59 001c DA6C     		ldr	r2, [r3, #76]
  60 001e 02F00102 		and	r2, r2, #1
  61 0022 0192     		str	r2, [sp, #4]
  62              		.loc 1 579 3 view .LVU7
  63 0024 019A     		ldr	r2, [sp, #4]
  64              	.LBE9:
  65              		.loc 1 579 3 view .LVU8
 580:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  66              		.loc 1 580 3 view .LVU9
  67              	.LBB10:
  68              		.loc 1 580 3 view .LVU10
  69              		.loc 1 580 3 view .LVU11
  70 0026 DA6C     		ldr	r2, [r3, #76]
  71 0028 42F00202 		orr	r2, r2, #2
  72 002c DA64     		str	r2, [r3, #76]
  73              		.loc 1 580 3 view .LVU12
  74 002e DB6C     		ldr	r3, [r3, #76]
  75 0030 03F00203 		and	r3, r3, #2
  76 0034 0293     		str	r3, [sp, #8]
  77              		.loc 1 580 3 view .LVU13
  78 0036 029B     		ldr	r3, [sp, #8]
  79              	.LBE10:
  80              		.loc 1 580 3 view .LVU14
 581:Core/Src/main.c **** 
 582:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 583:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, MUX_SIG1_Pin|MUX_SIG3_Pin|BMS_RESET_Pin, GPIO_PIN_RESET);
  81              		.loc 1 583 3 view .LVU15
  82 0038 174E     		ldr	r6, .L3+4
  83 003a 2246     		mov	r2, r4
  84 003c 6221     		movs	r1, #98
  85 003e 3046     		mov	r0, r6
  86 0040 FFF7FEFF 		bl	HAL_GPIO_WritePin
  87              	.LVL0:
 584:Core/Src/main.c **** 
 585:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 586:Core/Src/main.c ****   HAL_GPIO_WritePin(MUX_SIG2_GPIO_Port, MUX_SIG2_Pin, GPIO_PIN_RESET);
  88              		.loc 1 586 3 view .LVU16
  89 0044 2246     		mov	r2, r4
  90 0046 4FF48071 		mov	r1, #256
  91 004a 4FF09040 		mov	r0, #1207959552
  92 004e FFF7FEFF 		bl	HAL_GPIO_WritePin
  93              	.LVL1:
 587:Core/Src/main.c **** 
 588:Core/Src/main.c ****   /*Configure GPIO pins : MUX_SIG1_Pin MUX_SIG3_Pin BMS_RESET_Pin */
 589:Core/Src/main.c ****   GPIO_InitStruct.Pin = MUX_SIG1_Pin|MUX_SIG3_Pin|BMS_RESET_Pin;
  94              		.loc 1 589 3 view .LVU17
  95              		.loc 1 589 23 is_stmt 0 view .LVU18
  96 0052 6223     		movs	r3, #98
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s 			page 13


  97 0054 0393     		str	r3, [sp, #12]
 590:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  98              		.loc 1 590 3 is_stmt 1 view .LVU19
  99              		.loc 1 590 24 is_stmt 0 view .LVU20
 100 0056 0127     		movs	r7, #1
 101 0058 0497     		str	r7, [sp, #16]
 591:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 102              		.loc 1 591 3 is_stmt 1 view .LVU21
 103              		.loc 1 591 24 is_stmt 0 view .LVU22
 104 005a 0594     		str	r4, [sp, #20]
 592:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 105              		.loc 1 592 3 is_stmt 1 view .LVU23
 106              		.loc 1 592 25 is_stmt 0 view .LVU24
 107 005c 0694     		str	r4, [sp, #24]
 593:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 108              		.loc 1 593 3 is_stmt 1 view .LVU25
 109 005e 2946     		mov	r1, r5
 110 0060 3046     		mov	r0, r6
 111 0062 FFF7FEFF 		bl	HAL_GPIO_Init
 112              	.LVL2:
 594:Core/Src/main.c **** 
 595:Core/Src/main.c ****   /*Configure GPIO pin : MUX_SIG2_Pin */
 596:Core/Src/main.c ****   GPIO_InitStruct.Pin = MUX_SIG2_Pin;
 113              		.loc 1 596 3 view .LVU26
 114              		.loc 1 596 23 is_stmt 0 view .LVU27
 115 0066 4FF48073 		mov	r3, #256
 116 006a 0393     		str	r3, [sp, #12]
 597:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 117              		.loc 1 597 3 is_stmt 1 view .LVU28
 118              		.loc 1 597 24 is_stmt 0 view .LVU29
 119 006c 0497     		str	r7, [sp, #16]
 598:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 120              		.loc 1 598 3 is_stmt 1 view .LVU30
 121              		.loc 1 598 24 is_stmt 0 view .LVU31
 122 006e 0594     		str	r4, [sp, #20]
 599:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 123              		.loc 1 599 3 is_stmt 1 view .LVU32
 124              		.loc 1 599 25 is_stmt 0 view .LVU33
 125 0070 0694     		str	r4, [sp, #24]
 600:Core/Src/main.c ****   HAL_GPIO_Init(MUX_SIG2_GPIO_Port, &GPIO_InitStruct);
 126              		.loc 1 600 3 is_stmt 1 view .LVU34
 127 0072 2946     		mov	r1, r5
 128 0074 4FF09040 		mov	r0, #1207959552
 129 0078 FFF7FEFF 		bl	HAL_GPIO_Init
 130              	.LVL3:
 601:Core/Src/main.c **** 
 602:Core/Src/main.c ****   /*Configure GPIO pin : ALERT_IN_Pin */
 603:Core/Src/main.c ****   GPIO_InitStruct.Pin = ALERT_IN_Pin;
 131              		.loc 1 603 3 view .LVU35
 132              		.loc 1 603 23 is_stmt 0 view .LVU36
 133 007c 8023     		movs	r3, #128
 134 007e 0393     		str	r3, [sp, #12]
 604:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING_FALLING;
 135              		.loc 1 604 3 is_stmt 1 view .LVU37
 136              		.loc 1 604 24 is_stmt 0 view .LVU38
 137 0080 4FF44413 		mov	r3, #3211264
 138 0084 0493     		str	r3, [sp, #16]
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s 			page 14


 605:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 139              		.loc 1 605 3 is_stmt 1 view .LVU39
 140              		.loc 1 605 24 is_stmt 0 view .LVU40
 141 0086 0594     		str	r4, [sp, #20]
 606:Core/Src/main.c ****   HAL_GPIO_Init(ALERT_IN_GPIO_Port, &GPIO_InitStruct);
 142              		.loc 1 606 3 is_stmt 1 view .LVU41
 143 0088 2946     		mov	r1, r5
 144 008a 3046     		mov	r0, r6
 145 008c FFF7FEFF 		bl	HAL_GPIO_Init
 146              	.LVL4:
 607:Core/Src/main.c **** 
 608:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_2 */
 609:Core/Src/main.c **** 
 610:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_2 */
 611:Core/Src/main.c **** }
 147              		.loc 1 611 1 is_stmt 0 view .LVU42
 148 0090 09B0     		add	sp, sp, #36
 149              		.cfi_def_cfa_offset 20
 150              		@ sp needed
 151 0092 F0BD     		pop	{r4, r5, r6, r7, pc}
 152              	.L4:
 153              		.align	2
 154              	.L3:
 155 0094 00100240 		.word	1073876992
 156 0098 00040048 		.word	1207960576
 157              		.cfi_endproc
 158              	.LFE299:
 160              		.section	.text.StartDefaultTask,"ax",%progbits
 161              		.align	1
 162              		.global	StartDefaultTask
 163              		.syntax unified
 164              		.thumb
 165              		.thumb_func
 167              	StartDefaultTask:
 168              	.LFB301:
 612:Core/Src/main.c **** 
 613:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 614:Core/Src/main.c **** 
 615:Core/Src/main.c **** /**
 616:Core/Src/main.c ****   * @brief  Application malloc failed hook (FreeRTOS)
 617:Core/Src/main.c ****   * @retval None
 618:Core/Src/main.c ****   */
 619:Core/Src/main.c **** void vApplicationMallocFailedHook(void)
 620:Core/Src/main.c **** {
 621:Core/Src/main.c ****   /* Called if a call to pvPortMalloc() fails because there is insufficient
 622:Core/Src/main.c ****      free memory available in the FreeRTOS heap. This usually means the heap
 623:Core/Src/main.c ****      size is too small. Blink MUX_SIG1 rapidly to indicate heap failure. */
 624:Core/Src/main.c ****   taskDISABLE_INTERRUPTS();
 625:Core/Src/main.c ****   for(;;) {
 626:Core/Src/main.c ****     HAL_GPIO_TogglePin(GPIOB, MUX_SIG1_Pin);
 627:Core/Src/main.c ****     for(volatile uint32_t i = 0; i < 100000; i++);  // Busy wait
 628:Core/Src/main.c ****   }
 629:Core/Src/main.c **** }
 630:Core/Src/main.c **** 
 631:Core/Src/main.c **** /* USER CODE END 4 */
 632:Core/Src/main.c **** 
 633:Core/Src/main.c **** /* USER CODE BEGIN Header_StartDefaultTask */
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s 			page 15


 634:Core/Src/main.c **** /**
 635:Core/Src/main.c ****   * @brief  Function implementing the defaultTask thread.
 636:Core/Src/main.c ****   * @param  argument: Not used
 637:Core/Src/main.c ****   * @retval None
 638:Core/Src/main.c ****   */
 639:Core/Src/main.c **** /* USER CODE END Header_StartDefaultTask */
 640:Core/Src/main.c **** void StartDefaultTask(void *argument)
 641:Core/Src/main.c **** {
 169              		.loc 1 641 1 is_stmt 1 view -0
 170              		.cfi_startproc
 171              		@ Volatile: function does not return.
 172              		@ args = 0, pretend = 0, frame = 0
 173              		@ frame_needed = 0, uses_anonymous_args = 0
 174              	.LVL5:
 175              		.loc 1 641 1 is_stmt 0 view .LVU44
 176 0000 08B5     		push	{r3, lr}
 177              		.cfi_def_cfa_offset 8
 178              		.cfi_offset 3, -8
 179              		.cfi_offset 14, -4
 180              	.LVL6:
 181              	.L6:
 642:Core/Src/main.c ****   /* USER CODE BEGIN 5 */
 643:Core/Src/main.c ****   /* Infinite loop */
 644:Core/Src/main.c ****   for(;;)
 182              		.loc 1 644 3 is_stmt 1 view .LVU45
 645:Core/Src/main.c ****   {
 646:Core/Src/main.c ****     osDelay(1);
 183              		.loc 1 646 5 discriminator 1 view .LVU46
 184 0002 0120     		movs	r0, #1
 185 0004 FFF7FEFF 		bl	osDelay
 186              	.LVL7:
 644:Core/Src/main.c ****   {
 187              		.loc 1 644 3 view .LVU47
 188 0008 FBE7     		b	.L6
 189              		.cfi_endproc
 190              	.LFE301:
 192              		.section	.text.ReadCellVoltageBMS1,"ax",%progbits
 193              		.align	1
 194              		.global	ReadCellVoltageBMS1
 195              		.syntax unified
 196              		.thumb
 197              		.thumb_func
 199              	ReadCellVoltageBMS1:
 200              	.LVL8:
 201              	.LFB302:
 647:Core/Src/main.c ****   }
 648:Core/Src/main.c ****   /* USER CODE END 5 */
 649:Core/Src/main.c **** }
 650:Core/Src/main.c **** 
 651:Core/Src/main.c **** /* USER CODE BEGIN Header_ReadCellVoltage */
 652:Core/Src/main.c **** /**
 653:Core/Src/main.c **** * @brief Function implementing the CellVoltage thread.
 654:Core/Src/main.c **** * @param argument: Not used
 655:Core/Src/main.c **** * @retval None
 656:Core/Src/main.c **** */
 657:Core/Src/main.c **** /* USER CODE BEGIN Header_ReadCellVoltageBMS1 */
 658:Core/Src/main.c **** /**
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s 			page 16


 659:Core/Src/main.c **** * @brief Function implementing the CellVoltageBMS1 thread.
 660:Core/Src/main.c **** * @param argument: Not used
 661:Core/Src/main.c **** * @retval None
 662:Core/Src/main.c **** */
 663:Core/Src/main.c **** /* USER CODE END Header_ReadCellVoltageBMS1 */
 664:Core/Src/main.c **** void ReadCellVoltageBMS1(void *argument)
 665:Core/Src/main.c **** {
 202              		.loc 1 665 1 view -0
 203              		.cfi_startproc
 204              		@ args = 0, pretend = 0, frame = 0
 205              		@ frame_needed = 0, uses_anonymous_args = 0
 206              		.loc 1 665 1 is_stmt 0 view .LVU49
 207 0000 08B5     		push	{r3, lr}
 208              		.cfi_def_cfa_offset 8
 209              		.cfi_offset 3, -8
 210              		.cfi_offset 14, -4
 666:Core/Src/main.c ****   /* USER CODE BEGIN ReadCellVoltageBMS1 */
 667:Core/Src/main.c ****   /* Call the BMS1 cell voltage monitoring task */
 668:Core/Src/main.c ****   CellVoltage_MonitorTask(argument);
 211              		.loc 1 668 3 is_stmt 1 view .LVU50
 212 0002 FFF7FEFF 		bl	CellVoltage_MonitorTask
 213              	.LVL9:
 669:Core/Src/main.c ****   /* USER CODE END ReadCellVoltageBMS1 */
 670:Core/Src/main.c **** }
 214              		.loc 1 670 1 is_stmt 0 view .LVU51
 215 0006 08BD     		pop	{r3, pc}
 216              		.cfi_endproc
 217              	.LFE302:
 219              		.section	.text.ReadCellVoltageBMS2,"ax",%progbits
 220              		.align	1
 221              		.global	ReadCellVoltageBMS2
 222              		.syntax unified
 223              		.thumb
 224              		.thumb_func
 226              	ReadCellVoltageBMS2:
 227              	.LVL10:
 228              	.LFB303:
 671:Core/Src/main.c **** 
 672:Core/Src/main.c **** /* USER CODE BEGIN Header_ReadCellVoltageBMS2 */
 673:Core/Src/main.c **** /**
 674:Core/Src/main.c **** * @brief Function implementing the CellVoltageBMS2 thread.
 675:Core/Src/main.c **** * @param argument: Not used
 676:Core/Src/main.c **** * @retval None
 677:Core/Src/main.c **** */
 678:Core/Src/main.c **** /* USER CODE END Header_ReadCellVoltageBMS2 */
 679:Core/Src/main.c **** void ReadCellVoltageBMS2(void *argument)
 680:Core/Src/main.c **** {
 229              		.loc 1 680 1 is_stmt 1 view -0
 230              		.cfi_startproc
 231              		@ args = 0, pretend = 0, frame = 0
 232              		@ frame_needed = 0, uses_anonymous_args = 0
 233              		.loc 1 680 1 is_stmt 0 view .LVU53
 234 0000 08B5     		push	{r3, lr}
 235              		.cfi_def_cfa_offset 8
 236              		.cfi_offset 3, -8
 237              		.cfi_offset 14, -4
 681:Core/Src/main.c ****   /* USER CODE BEGIN ReadCellVoltageBMS2 */
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s 			page 17


 682:Core/Src/main.c ****   /* Call the BMS2 cell voltage monitoring task */
 683:Core/Src/main.c ****   CellVoltage_MonitorTask_BMS2(argument);
 238              		.loc 1 683 3 is_stmt 1 view .LVU54
 239 0002 FFF7FEFF 		bl	CellVoltage_MonitorTask_BMS2
 240              	.LVL11:
 684:Core/Src/main.c ****   /* USER CODE END ReadCellVoltageBMS2 */
 685:Core/Src/main.c **** }
 241              		.loc 1 685 1 is_stmt 0 view .LVU55
 242 0006 08BD     		pop	{r3, pc}
 243              		.cfi_endproc
 244              	.LFE303:
 246              		.section	.text.ReadCellTemps,"ax",%progbits
 247              		.align	1
 248              		.global	ReadCellTemps
 249              		.syntax unified
 250              		.thumb
 251              		.thumb_func
 253              	ReadCellTemps:
 254              	.LVL12:
 255              	.LFB304:
 686:Core/Src/main.c **** 
 687:Core/Src/main.c **** /* USER CODE BEGIN Header_ReadCellTemps */
 688:Core/Src/main.c **** /**
 689:Core/Src/main.c **** * @brief Function implementing the CellTemperature thread.
 690:Core/Src/main.c **** * @param argument: Not used
 691:Core/Src/main.c **** * @retval None
 692:Core/Src/main.c **** */
 693:Core/Src/main.c **** /* USER CODE END Header_ReadCellTemps */
 694:Core/Src/main.c **** void ReadCellTemps(void *argument)
 695:Core/Src/main.c **** {
 256              		.loc 1 695 1 is_stmt 1 view -0
 257              		.cfi_startproc
 258              		@ args = 0, pretend = 0, frame = 0
 259              		@ frame_needed = 0, uses_anonymous_args = 0
 260              		.loc 1 695 1 is_stmt 0 view .LVU57
 261 0000 08B5     		push	{r3, lr}
 262              		.cfi_def_cfa_offset 8
 263              		.cfi_offset 3, -8
 264              		.cfi_offset 14, -4
 696:Core/Src/main.c ****   /* USER CODE BEGIN ReadCellTemps */
 697:Core/Src/main.c ****   /* Call the cell temperature monitoring task */
 698:Core/Src/main.c ****   CellTemp_MonitorTask(argument);
 265              		.loc 1 698 3 is_stmt 1 view .LVU58
 266 0002 FFF7FEFF 		bl	CellTemp_MonitorTask
 267              	.LVL13:
 699:Core/Src/main.c ****   /* USER CODE END ReadCellTemps */
 700:Core/Src/main.c **** }
 268              		.loc 1 700 1 is_stmt 0 view .LVU59
 269 0006 08BD     		pop	{r3, pc}
 270              		.cfi_endproc
 271              	.LFE304:
 273              		.section	.text.vApplicationMallocFailedHook,"ax",%progbits
 274              		.align	1
 275              		.global	vApplicationMallocFailedHook
 276              		.syntax unified
 277              		.thumb
 278              		.thumb_func
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s 			page 18


 280              	vApplicationMallocFailedHook:
 281              	.LFB300:
 620:Core/Src/main.c ****   /* Called if a call to pvPortMalloc() fails because there is insufficient
 282              		.loc 1 620 1 is_stmt 1 view -0
 283              		.cfi_startproc
 284              		@ Volatile: function does not return.
 285              		@ args = 0, pretend = 0, frame = 8
 286              		@ frame_needed = 0, uses_anonymous_args = 0
 287 0000 00B5     		push	{lr}
 288              		.cfi_def_cfa_offset 4
 289              		.cfi_offset 14, -4
 290 0002 83B0     		sub	sp, sp, #12
 291              		.cfi_def_cfa_offset 16
 624:Core/Src/main.c ****   for(;;) {
 292              		.loc 1 624 3 view .LVU61
 293              	.LBB11:
 294              	.LBI11:
 295              		.file 2 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
   1:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * FreeRTOS Kernel V10.3.1
   3:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
   5:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * subject to the following conditions:
  11:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  12:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * copies or substantial portions of the Software.
  14:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  15:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  22:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * http://www.FreeRTOS.org
  23:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * http://aws.amazon.com/freertos
  24:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  25:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * 1 tab == 4 spaces!
  26:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  */
  27:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  28:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  29:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef PORTMACRO_H
  30:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define PORTMACRO_H
  31:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  32:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifdef __cplusplus
  33:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern "C" {
  34:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
  35:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  36:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------
  37:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Port specific definitions.
  38:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  39:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s 			page 19


  40:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * given hardware and compiler.
  41:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  42:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * These settings should not be altered.
  43:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *-----------------------------------------------------------
  44:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  */
  45:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  46:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Type definitions. */
  47:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portCHAR		char
  48:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portFLOAT		float
  49:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portDOUBLE		double
  50:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portLONG		long
  51:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSHORT		short
  52:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSTACK_TYPE	uint32_t
  53:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portBASE_TYPE	long
  54:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  55:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  56:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef long BaseType_t;
  57:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef unsigned long UBaseType_t;
  58:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  59:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
  60:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	typedef uint16_t TickType_t;
  61:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
  62:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #else
  63:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	typedef uint32_t TickType_t;
  64:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
  65:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  66:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	not need to be guarded with a critical section. */
  68:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
  69:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
  70:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  71:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  72:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specifics. */
  73:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSTACK_GROWTH			( -1 )
  74:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portBYTE_ALIGNMENT			8
  76:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  77:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  78:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Scheduler utilities. */
  79:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portYIELD() 															\
  80:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {																				\
  81:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
  82:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
  83:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 																				\
  84:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
  85:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	within the specified behaviour for the architecture. */						\
  86:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "dsb" ::: "memory" );										\
  87:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "isb" );													\
  88:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
  89:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  90:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
  91:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
  92:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
  93:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
  94:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  95:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  96:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Critical section management. */
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s 			page 20


  97:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern void vPortEnterCritical( void );
  98:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern void vPortExitCritical( void );
  99:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 100:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 101:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 102:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 103:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 104:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 105:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 106:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 107:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 108:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 109:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 110:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** (which build with all the ports) will build. */
 111:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 112:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 113:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 114:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 115:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Tickless idle/low power functionality. */
 116:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 117:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 118:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 119:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 120:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 121:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 122:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specific optimisations. */
 123:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 124:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 125:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 126:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 127:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 128:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 129:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Generic helper function. */
 130:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 131:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 132:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	uint8_t ucReturn;
 133:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 134:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 135:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		return ucReturn;
 136:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 137:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 138:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Check the configuration. */
 139:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 140:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 141:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#endif
 142:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 143:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 144:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 145:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 146:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 147:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/*-----------------------------------------------------------*/
 148:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 149:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 150:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 151:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 152:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 153:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s 			page 21


 154:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 155:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifdef configASSERT
 156:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 157:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 158:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 159:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 160:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* portNOP() is not required by this port. */
 161:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNOP()
 162:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 163:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portINLINE	__inline
 164:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 165:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef portFORCE_INLINE
 166:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 167:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 168:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 169:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 170:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 171:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulCurrentInterrupt;
 172:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** BaseType_t xReturn;
 173:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 174:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 175:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 176:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 177:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 178:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 179:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		xReturn = pdFALSE;
 180:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 181:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	else
 182:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 183:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		xReturn = pdTRUE;
 184:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 185:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 186:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	return xReturn;
 187:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 188:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 189:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 190:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 296              		.loc 2 191 30 view .LVU62
 297              	.LBB12:
 192:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulNewBASEPRI;
 298              		.loc 2 193 1 view .LVU63
 194:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
 299              		.loc 2 195 2 view .LVU64
 300              		.syntax unified
 301              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 302 0004 4FF05003 			mov r3, #80												
 303 0008 83F31188 		msr basepri, r3											
 304 000c BFF36F8F 		isb														
 305 0010 BFF34F8F 		dsb														
 306              	
 307              	@ 0 "" 2
 308              		.thumb
 309              		.syntax unified
 310              	.L17:
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s 			page 22


 311              	.LBE12:
 312              	.LBE11:
 625:Core/Src/main.c ****     HAL_GPIO_TogglePin(GPIOB, MUX_SIG1_Pin);
 313              		.loc 1 625 3 view .LVU65
 626:Core/Src/main.c ****     for(volatile uint32_t i = 0; i < 100000; i++);  // Busy wait
 314              		.loc 1 626 5 view .LVU66
 315 0014 0221     		movs	r1, #2
 316 0016 0648     		ldr	r0, .L19
 317 0018 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 318              	.LVL14:
 627:Core/Src/main.c ****   }
 319              		.loc 1 627 5 view .LVU67
 320              	.LBB13:
 627:Core/Src/main.c ****   }
 321              		.loc 1 627 9 view .LVU68
 627:Core/Src/main.c ****   }
 322              		.loc 1 627 27 is_stmt 0 view .LVU69
 323 001c 0023     		movs	r3, #0
 324 001e 0193     		str	r3, [sp, #4]
 325              	.L15:
 627:Core/Src/main.c ****   }
 326              		.loc 1 627 36 is_stmt 1 discriminator 1 view .LVU70
 327 0020 019A     		ldr	r2, [sp, #4]
 328 0022 044B     		ldr	r3, .L19+4
 329 0024 9A42     		cmp	r2, r3
 330 0026 F5D8     		bhi	.L17
 627:Core/Src/main.c ****   }
 331              		.loc 1 627 47 discriminator 3 view .LVU71
 332 0028 019B     		ldr	r3, [sp, #4]
 333 002a 0133     		adds	r3, r3, #1
 334 002c 0193     		str	r3, [sp, #4]
 335 002e F7E7     		b	.L15
 336              	.L20:
 337              		.align	2
 338              	.L19:
 339 0030 00040048 		.word	1207960576
 340 0034 9F860100 		.word	99999
 341              	.LBE13:
 342              		.cfi_endproc
 343              	.LFE300:
 345              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 346              		.align	1
 347              		.global	HAL_TIM_PeriodElapsedCallback
 348              		.syntax unified
 349              		.thumb
 350              		.thumb_func
 352              	HAL_TIM_PeriodElapsedCallback:
 353              	.LVL15:
 354              	.LFB305:
 701:Core/Src/main.c **** 
 702:Core/Src/main.c **** /**
 703:Core/Src/main.c ****   * @brief  Period elapsed callback in non blocking mode
 704:Core/Src/main.c ****   * @note   This function is called  when TIM6 interrupt took place, inside
 705:Core/Src/main.c ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 706:Core/Src/main.c ****   * a global variable "uwTick" used as application time base.
 707:Core/Src/main.c ****   * @param  htim : TIM handle
 708:Core/Src/main.c ****   * @retval None
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s 			page 23


 709:Core/Src/main.c ****   */
 710:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 711:Core/Src/main.c **** {
 355              		.loc 1 711 1 view -0
 356              		.cfi_startproc
 357              		@ args = 0, pretend = 0, frame = 0
 358              		@ frame_needed = 0, uses_anonymous_args = 0
 359              		.loc 1 711 1 is_stmt 0 view .LVU73
 360 0000 08B5     		push	{r3, lr}
 361              		.cfi_def_cfa_offset 8
 362              		.cfi_offset 3, -8
 363              		.cfi_offset 14, -4
 712:Core/Src/main.c ****   /* USER CODE BEGIN Callback 0 */
 713:Core/Src/main.c **** 
 714:Core/Src/main.c ****   /* USER CODE END Callback 0 */
 715:Core/Src/main.c ****   if (htim->Instance == TIM6)
 364              		.loc 1 715 3 is_stmt 1 view .LVU74
 365              		.loc 1 715 11 is_stmt 0 view .LVU75
 366 0002 0268     		ldr	r2, [r0]
 367              		.loc 1 715 6 view .LVU76
 368 0004 034B     		ldr	r3, .L25
 369 0006 9A42     		cmp	r2, r3
 370 0008 00D0     		beq	.L24
 371              	.LVL16:
 372              	.L21:
 716:Core/Src/main.c ****   {
 717:Core/Src/main.c ****     HAL_IncTick();
 718:Core/Src/main.c ****   }
 719:Core/Src/main.c ****   /* USER CODE BEGIN Callback 1 */
 720:Core/Src/main.c **** 
 721:Core/Src/main.c ****   /* USER CODE END Callback 1 */
 722:Core/Src/main.c **** }
 373              		.loc 1 722 1 view .LVU77
 374 000a 08BD     		pop	{r3, pc}
 375              	.LVL17:
 376              	.L24:
 717:Core/Src/main.c ****   }
 377              		.loc 1 717 5 is_stmt 1 view .LVU78
 378 000c FFF7FEFF 		bl	HAL_IncTick
 379              	.LVL18:
 380              		.loc 1 722 1 is_stmt 0 view .LVU79
 381 0010 FBE7     		b	.L21
 382              	.L26:
 383 0012 00BF     		.align	2
 384              	.L25:
 385 0014 00100040 		.word	1073745920
 386              		.cfi_endproc
 387              	.LFE305:
 389              		.section	.text.Error_Handler,"ax",%progbits
 390              		.align	1
 391              		.global	Error_Handler
 392              		.syntax unified
 393              		.thumb
 394              		.thumb_func
 396              	Error_Handler:
 397              	.LFB306:
 723:Core/Src/main.c **** 
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s 			page 24


 724:Core/Src/main.c **** /**
 725:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 726:Core/Src/main.c ****   * @retval None
 727:Core/Src/main.c ****   */
 728:Core/Src/main.c **** void Error_Handler(void)
 729:Core/Src/main.c **** {
 398              		.loc 1 729 1 is_stmt 1 view -0
 399              		.cfi_startproc
 400              		@ Volatile: function does not return.
 401              		@ args = 0, pretend = 0, frame = 0
 402              		@ frame_needed = 0, uses_anonymous_args = 0
 403              		@ link register save eliminated.
 730:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 731:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 732:Core/Src/main.c ****   __disable_irq();
 404              		.loc 1 732 3 view .LVU81
 405              	.LBB14:
 406              	.LBI14:
 407              		.file 3 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s 			page 25


  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s 			page 26


  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s 			page 27


 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 408              		.loc 3 207 27 view .LVU82
 409              	.LBB15:
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s 			page 28


 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 410              		.loc 3 209 3 view .LVU83
 411              		.syntax unified
 412              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 413 0000 72B6     		cpsid i
 414              	@ 0 "" 2
 415              		.thumb
 416              		.syntax unified
 417              	.L28:
 418              	.LBE15:
 419              	.LBE14:
 733:Core/Src/main.c ****   while (1)
 420              		.loc 1 733 3 view .LVU84
 734:Core/Src/main.c ****   {
 735:Core/Src/main.c ****   }
 421              		.loc 1 735 3 view .LVU85
 733:Core/Src/main.c ****   while (1)
 422              		.loc 1 733 9 view .LVU86
 423 0002 FEE7     		b	.L28
 424              		.cfi_endproc
 425              	.LFE306:
 427              		.section	.text.MX_ADC1_Init,"ax",%progbits
 428              		.align	1
 429              		.syntax unified
 430              		.thumb
 431              		.thumb_func
 433              	MX_ADC1_Init:
 434              	.LFB294:
 328:Core/Src/main.c **** 
 435              		.loc 1 328 1 view -0
 436              		.cfi_startproc
 437              		@ args = 0, pretend = 0, frame = 24
 438              		@ frame_needed = 0, uses_anonymous_args = 0
 439 0000 00B5     		push	{lr}
 440              		.cfi_def_cfa_offset 4
 441              		.cfi_offset 14, -4
 442 0002 87B0     		sub	sp, sp, #28
 443              		.cfi_def_cfa_offset 32
 334:Core/Src/main.c **** 
 444              		.loc 1 334 3 view .LVU88
 334:Core/Src/main.c **** 
 445              		.loc 1 334 26 is_stmt 0 view .LVU89
 446 0004 0023     		movs	r3, #0
 447 0006 0093     		str	r3, [sp]
 448 0008 0193     		str	r3, [sp, #4]
 449 000a 0293     		str	r3, [sp, #8]
 450 000c 0393     		str	r3, [sp, #12]
 451 000e 0493     		str	r3, [sp, #16]
 452 0010 0593     		str	r3, [sp, #20]
 342:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 453              		.loc 1 342 3 is_stmt 1 view .LVU90
 342:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 454              		.loc 1 342 18 is_stmt 0 view .LVU91
 455 0012 1848     		ldr	r0, .L35
 456 0014 184A     		ldr	r2, .L35+4
 457 0016 0260     		str	r2, [r0]
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s 			page 29


 343:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 458              		.loc 1 343 3 is_stmt 1 view .LVU92
 343:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 459              		.loc 1 343 29 is_stmt 0 view .LVU93
 460 0018 4360     		str	r3, [r0, #4]
 344:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 461              		.loc 1 344 3 is_stmt 1 view .LVU94
 344:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 462              		.loc 1 344 25 is_stmt 0 view .LVU95
 463 001a 8360     		str	r3, [r0, #8]
 345:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 464              		.loc 1 345 3 is_stmt 1 view .LVU96
 345:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 465              		.loc 1 345 24 is_stmt 0 view .LVU97
 466 001c C360     		str	r3, [r0, #12]
 346:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 467              		.loc 1 346 3 is_stmt 1 view .LVU98
 346:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 468              		.loc 1 346 27 is_stmt 0 view .LVU99
 469 001e 0361     		str	r3, [r0, #16]
 347:Core/Src/main.c ****   hadc1.Init.LowPowerAutoWait = DISABLE;
 470              		.loc 1 347 3 is_stmt 1 view .LVU100
 347:Core/Src/main.c ****   hadc1.Init.LowPowerAutoWait = DISABLE;
 471              		.loc 1 347 27 is_stmt 0 view .LVU101
 472 0020 0422     		movs	r2, #4
 473 0022 4261     		str	r2, [r0, #20]
 348:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
 474              		.loc 1 348 3 is_stmt 1 view .LVU102
 348:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
 475              		.loc 1 348 31 is_stmt 0 view .LVU103
 476 0024 0376     		strb	r3, [r0, #24]
 349:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 477              		.loc 1 349 3 is_stmt 1 view .LVU104
 349:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 478              		.loc 1 349 33 is_stmt 0 view .LVU105
 479 0026 4376     		strb	r3, [r0, #25]
 350:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 480              		.loc 1 350 3 is_stmt 1 view .LVU106
 350:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 481              		.loc 1 350 30 is_stmt 0 view .LVU107
 482 0028 0122     		movs	r2, #1
 483 002a C261     		str	r2, [r0, #28]
 351:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 484              		.loc 1 351 3 is_stmt 1 view .LVU108
 351:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 485              		.loc 1 351 36 is_stmt 0 view .LVU109
 486 002c 80F82030 		strb	r3, [r0, #32]
 352:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 487              		.loc 1 352 3 is_stmt 1 view .LVU110
 352:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 488              		.loc 1 352 31 is_stmt 0 view .LVU111
 489 0030 8362     		str	r3, [r0, #40]
 353:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = DISABLE;
 490              		.loc 1 353 3 is_stmt 1 view .LVU112
 353:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = DISABLE;
 491              		.loc 1 353 35 is_stmt 0 view .LVU113
 492 0032 C362     		str	r3, [r0, #44]
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s 			page 30


 354:Core/Src/main.c ****   hadc1.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 493              		.loc 1 354 3 is_stmt 1 view .LVU114
 354:Core/Src/main.c ****   hadc1.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 494              		.loc 1 354 36 is_stmt 0 view .LVU115
 495 0034 80F83030 		strb	r3, [r0, #48]
 355:Core/Src/main.c ****   hadc1.Init.OversamplingMode = DISABLE;
 496              		.loc 1 355 3 is_stmt 1 view .LVU116
 355:Core/Src/main.c ****   hadc1.Init.OversamplingMode = DISABLE;
 497              		.loc 1 355 22 is_stmt 0 view .LVU117
 498 0038 4363     		str	r3, [r0, #52]
 356:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 499              		.loc 1 356 3 is_stmt 1 view .LVU118
 356:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 500              		.loc 1 356 31 is_stmt 0 view .LVU119
 501 003a 80F83830 		strb	r3, [r0, #56]
 357:Core/Src/main.c ****   {
 502              		.loc 1 357 3 is_stmt 1 view .LVU120
 357:Core/Src/main.c ****   {
 503              		.loc 1 357 7 is_stmt 0 view .LVU121
 504 003e FFF7FEFF 		bl	HAL_ADC_Init
 505              	.LVL19:
 357:Core/Src/main.c ****   {
 506              		.loc 1 357 6 discriminator 1 view .LVU122
 507 0042 98B9     		cbnz	r0, .L33
 364:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 508              		.loc 1 364 3 is_stmt 1 view .LVU123
 364:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 509              		.loc 1 364 19 is_stmt 0 view .LVU124
 510 0044 0D4B     		ldr	r3, .L35+8
 511 0046 0093     		str	r3, [sp]
 365:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_640CYCLES_5;  // Longer sampling for high impedance thermis
 512              		.loc 1 365 3 is_stmt 1 view .LVU125
 365:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_640CYCLES_5;  // Longer sampling for high impedance thermis
 513              		.loc 1 365 16 is_stmt 0 view .LVU126
 514 0048 0623     		movs	r3, #6
 515 004a 0193     		str	r3, [sp, #4]
 366:Core/Src/main.c ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 516              		.loc 1 366 3 is_stmt 1 view .LVU127
 366:Core/Src/main.c ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 517              		.loc 1 366 24 is_stmt 0 view .LVU128
 518 004c 0723     		movs	r3, #7
 519 004e 0293     		str	r3, [sp, #8]
 367:Core/Src/main.c ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 520              		.loc 1 367 3 is_stmt 1 view .LVU129
 367:Core/Src/main.c ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 521              		.loc 1 367 22 is_stmt 0 view .LVU130
 522 0050 7F23     		movs	r3, #127
 523 0052 0393     		str	r3, [sp, #12]
 368:Core/Src/main.c ****   sConfig.Offset = 0;
 524              		.loc 1 368 3 is_stmt 1 view .LVU131
 368:Core/Src/main.c ****   sConfig.Offset = 0;
 525              		.loc 1 368 24 is_stmt 0 view .LVU132
 526 0054 0423     		movs	r3, #4
 527 0056 0493     		str	r3, [sp, #16]
 369:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 528              		.loc 1 369 3 is_stmt 1 view .LVU133
 369:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s 			page 31


 529              		.loc 1 369 18 is_stmt 0 view .LVU134
 530 0058 0023     		movs	r3, #0
 531 005a 0593     		str	r3, [sp, #20]
 370:Core/Src/main.c ****   {
 532              		.loc 1 370 3 is_stmt 1 view .LVU135
 370:Core/Src/main.c ****   {
 533              		.loc 1 370 7 is_stmt 0 view .LVU136
 534 005c 6946     		mov	r1, sp
 535 005e 0548     		ldr	r0, .L35
 536 0060 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 537              	.LVL20:
 370:Core/Src/main.c ****   {
 538              		.loc 1 370 6 discriminator 1 view .LVU137
 539 0064 20B9     		cbnz	r0, .L34
 378:Core/Src/main.c **** 
 540              		.loc 1 378 1 view .LVU138
 541 0066 07B0     		add	sp, sp, #28
 542              		.cfi_remember_state
 543              		.cfi_def_cfa_offset 4
 544              		@ sp needed
 545 0068 5DF804FB 		ldr	pc, [sp], #4
 546              	.L33:
 547              		.cfi_restore_state
 359:Core/Src/main.c ****   }
 548              		.loc 1 359 5 is_stmt 1 view .LVU139
 549 006c FFF7FEFF 		bl	Error_Handler
 550              	.LVL21:
 551              	.L34:
 372:Core/Src/main.c ****   }
 552              		.loc 1 372 5 view .LVU140
 553 0070 FFF7FEFF 		bl	Error_Handler
 554              	.LVL22:
 555              	.L36:
 556              		.align	2
 557              	.L35:
 558 0074 00000000 		.word	hadc1
 559 0078 00000450 		.word	1342439424
 560 007c 2000F014 		.word	351272992
 561              		.cfi_endproc
 562              	.LFE294:
 564              		.section	.text.MX_CAN1_Init,"ax",%progbits
 565              		.align	1
 566              		.syntax unified
 567              		.thumb
 568              		.thumb_func
 570              	MX_CAN1_Init:
 571              	.LFB295:
 386:Core/Src/main.c **** 
 572              		.loc 1 386 1 view -0
 573              		.cfi_startproc
 574              		@ args = 0, pretend = 0, frame = 40
 575              		@ frame_needed = 0, uses_anonymous_args = 0
 576 0000 00B5     		push	{lr}
 577              		.cfi_def_cfa_offset 4
 578              		.cfi_offset 14, -4
 579 0002 8BB0     		sub	sp, sp, #44
 580              		.cfi_def_cfa_offset 48
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s 			page 32


 395:Core/Src/main.c ****   hcan1.Init.Prescaler = 10;
 581              		.loc 1 395 3 view .LVU142
 395:Core/Src/main.c ****   hcan1.Init.Prescaler = 10;
 582              		.loc 1 395 18 is_stmt 0 view .LVU143
 583 0004 1848     		ldr	r0, .L43
 584 0006 194B     		ldr	r3, .L43+4
 585 0008 0360     		str	r3, [r0]
 396:Core/Src/main.c ****   hcan1.Init.Mode = CAN_MODE_NORMAL;
 586              		.loc 1 396 3 is_stmt 1 view .LVU144
 396:Core/Src/main.c ****   hcan1.Init.Mode = CAN_MODE_NORMAL;
 587              		.loc 1 396 24 is_stmt 0 view .LVU145
 588 000a 0A23     		movs	r3, #10
 589 000c 4360     		str	r3, [r0, #4]
 397:Core/Src/main.c ****   hcan1.Init.SyncJumpWidth = CAN_SJW_1TQ;
 590              		.loc 1 397 3 is_stmt 1 view .LVU146
 397:Core/Src/main.c ****   hcan1.Init.SyncJumpWidth = CAN_SJW_1TQ;
 591              		.loc 1 397 19 is_stmt 0 view .LVU147
 592 000e 0023     		movs	r3, #0
 593 0010 8360     		str	r3, [r0, #8]
 398:Core/Src/main.c ****   hcan1.Init.TimeSeg1 = CAN_BS1_13TQ;
 594              		.loc 1 398 3 is_stmt 1 view .LVU148
 398:Core/Src/main.c ****   hcan1.Init.TimeSeg1 = CAN_BS1_13TQ;
 595              		.loc 1 398 28 is_stmt 0 view .LVU149
 596 0012 C360     		str	r3, [r0, #12]
 399:Core/Src/main.c ****   hcan1.Init.TimeSeg2 = CAN_BS2_2TQ;
 597              		.loc 1 399 3 is_stmt 1 view .LVU150
 399:Core/Src/main.c ****   hcan1.Init.TimeSeg2 = CAN_BS2_2TQ;
 598              		.loc 1 399 23 is_stmt 0 view .LVU151
 599 0014 4FF44022 		mov	r2, #786432
 600 0018 0261     		str	r2, [r0, #16]
 400:Core/Src/main.c ****   hcan1.Init.TimeTriggeredMode = DISABLE;
 601              		.loc 1 400 3 is_stmt 1 view .LVU152
 400:Core/Src/main.c ****   hcan1.Init.TimeTriggeredMode = DISABLE;
 602              		.loc 1 400 23 is_stmt 0 view .LVU153
 603 001a 4FF48012 		mov	r2, #1048576
 604 001e 4261     		str	r2, [r0, #20]
 401:Core/Src/main.c ****   hcan1.Init.AutoBusOff = DISABLE;
 605              		.loc 1 401 3 is_stmt 1 view .LVU154
 401:Core/Src/main.c ****   hcan1.Init.AutoBusOff = DISABLE;
 606              		.loc 1 401 32 is_stmt 0 view .LVU155
 607 0020 0376     		strb	r3, [r0, #24]
 402:Core/Src/main.c ****   hcan1.Init.AutoWakeUp = DISABLE;
 608              		.loc 1 402 3 is_stmt 1 view .LVU156
 402:Core/Src/main.c ****   hcan1.Init.AutoWakeUp = DISABLE;
 609              		.loc 1 402 25 is_stmt 0 view .LVU157
 610 0022 4376     		strb	r3, [r0, #25]
 403:Core/Src/main.c ****   hcan1.Init.AutoRetransmission = DISABLE;
 611              		.loc 1 403 3 is_stmt 1 view .LVU158
 403:Core/Src/main.c ****   hcan1.Init.AutoRetransmission = DISABLE;
 612              		.loc 1 403 25 is_stmt 0 view .LVU159
 613 0024 8376     		strb	r3, [r0, #26]
 404:Core/Src/main.c ****   hcan1.Init.ReceiveFifoLocked = DISABLE;
 614              		.loc 1 404 3 is_stmt 1 view .LVU160
 404:Core/Src/main.c ****   hcan1.Init.ReceiveFifoLocked = DISABLE;
 615              		.loc 1 404 33 is_stmt 0 view .LVU161
 616 0026 C376     		strb	r3, [r0, #27]
 405:Core/Src/main.c ****   hcan1.Init.TransmitFifoPriority = DISABLE;
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s 			page 33


 617              		.loc 1 405 3 is_stmt 1 view .LVU162
 405:Core/Src/main.c ****   hcan1.Init.TransmitFifoPriority = DISABLE;
 618              		.loc 1 405 32 is_stmt 0 view .LVU163
 619 0028 0377     		strb	r3, [r0, #28]
 406:Core/Src/main.c ****   if (HAL_CAN_Init(&hcan1) != HAL_OK)
 620              		.loc 1 406 3 is_stmt 1 view .LVU164
 406:Core/Src/main.c ****   if (HAL_CAN_Init(&hcan1) != HAL_OK)
 621              		.loc 1 406 35 is_stmt 0 view .LVU165
 622 002a 4377     		strb	r3, [r0, #29]
 407:Core/Src/main.c ****   {
 623              		.loc 1 407 3 is_stmt 1 view .LVU166
 407:Core/Src/main.c ****   {
 624              		.loc 1 407 7 is_stmt 0 view .LVU167
 625 002c FFF7FEFF 		bl	HAL_CAN_Init
 626              	.LVL23:
 407:Core/Src/main.c ****   {
 627              		.loc 1 407 6 discriminator 1 view .LVU168
 628 0030 A8B9     		cbnz	r0, .L41
 415:Core/Src/main.c ****   filterConfig.FilterBank = 0;
 629              		.loc 1 415 3 is_stmt 1 view .LVU169
 416:Core/Src/main.c ****   filterConfig.FilterMode = CAN_FILTERMODE_IDMASK;
 630              		.loc 1 416 3 view .LVU170
 416:Core/Src/main.c ****   filterConfig.FilterMode = CAN_FILTERMODE_IDMASK;
 631              		.loc 1 416 27 is_stmt 0 view .LVU171
 632 0032 0023     		movs	r3, #0
 633 0034 0593     		str	r3, [sp, #20]
 417:Core/Src/main.c ****   filterConfig.FilterScale = CAN_FILTERSCALE_32BIT;
 634              		.loc 1 417 3 is_stmt 1 view .LVU172
 417:Core/Src/main.c ****   filterConfig.FilterScale = CAN_FILTERSCALE_32BIT;
 635              		.loc 1 417 27 is_stmt 0 view .LVU173
 636 0036 0693     		str	r3, [sp, #24]
 418:Core/Src/main.c ****   
 637              		.loc 1 418 3 is_stmt 1 view .LVU174
 418:Core/Src/main.c ****   
 638              		.loc 1 418 28 is_stmt 0 view .LVU175
 639 0038 0122     		movs	r2, #1
 640 003a 0792     		str	r2, [sp, #28]
 421:Core/Src/main.c ****   filterConfig.FilterIdLow = 0x0004;   // Only IDE bit set (extended ID)
 641              		.loc 1 421 3 is_stmt 1 view .LVU176
 421:Core/Src/main.c ****   filterConfig.FilterIdLow = 0x0004;   // Only IDE bit set (extended ID)
 642              		.loc 1 421 29 is_stmt 0 view .LVU177
 643 003c 0093     		str	r3, [sp]
 422:Core/Src/main.c ****   filterConfig.FilterMaskIdHigh = 0x0000;  // Don't care about any ID bits
 644              		.loc 1 422 3 is_stmt 1 view .LVU178
 422:Core/Src/main.c ****   filterConfig.FilterMaskIdHigh = 0x0000;  // Don't care about any ID bits
 645              		.loc 1 422 28 is_stmt 0 view .LVU179
 646 003e 0421     		movs	r1, #4
 647 0040 0191     		str	r1, [sp, #4]
 423:Core/Src/main.c ****   filterConfig.FilterMaskIdLow = 0x0004;   // But we DO care about IDE bit (only extended)
 648              		.loc 1 423 3 is_stmt 1 view .LVU180
 423:Core/Src/main.c ****   filterConfig.FilterMaskIdLow = 0x0004;   // But we DO care about IDE bit (only extended)
 649              		.loc 1 423 33 is_stmt 0 view .LVU181
 650 0042 0293     		str	r3, [sp, #8]
 424:Core/Src/main.c ****   
 651              		.loc 1 424 3 is_stmt 1 view .LVU182
 424:Core/Src/main.c ****   
 652              		.loc 1 424 32 is_stmt 0 view .LVU183
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s 			page 34


 653 0044 0391     		str	r1, [sp, #12]
 426:Core/Src/main.c ****   filterConfig.FilterActivation = ENABLE;
 654              		.loc 1 426 3 is_stmt 1 view .LVU184
 426:Core/Src/main.c ****   filterConfig.FilterActivation = ENABLE;
 655              		.loc 1 426 37 is_stmt 0 view .LVU185
 656 0046 0493     		str	r3, [sp, #16]
 427:Core/Src/main.c ****   filterConfig.SlaveStartFilterBank = 14;
 657              		.loc 1 427 3 is_stmt 1 view .LVU186
 427:Core/Src/main.c ****   filterConfig.SlaveStartFilterBank = 14;
 658              		.loc 1 427 33 is_stmt 0 view .LVU187
 659 0048 0892     		str	r2, [sp, #32]
 428:Core/Src/main.c ****   
 660              		.loc 1 428 3 is_stmt 1 view .LVU188
 428:Core/Src/main.c ****   
 661              		.loc 1 428 37 is_stmt 0 view .LVU189
 662 004a 0E23     		movs	r3, #14
 663 004c 0993     		str	r3, [sp, #36]
 430:Core/Src/main.c ****   {
 664              		.loc 1 430 3 is_stmt 1 view .LVU190
 430:Core/Src/main.c ****   {
 665              		.loc 1 430 7 is_stmt 0 view .LVU191
 666 004e 6946     		mov	r1, sp
 667 0050 0548     		ldr	r0, .L43
 668 0052 FFF7FEFF 		bl	HAL_CAN_ConfigFilter
 669              	.LVL24:
 430:Core/Src/main.c ****   {
 670              		.loc 1 430 6 discriminator 1 view .LVU192
 671 0056 20B9     		cbnz	r0, .L42
 437:Core/Src/main.c **** 
 672              		.loc 1 437 1 view .LVU193
 673 0058 0BB0     		add	sp, sp, #44
 674              		.cfi_remember_state
 675              		.cfi_def_cfa_offset 4
 676              		@ sp needed
 677 005a 5DF804FB 		ldr	pc, [sp], #4
 678              	.L41:
 679              		.cfi_restore_state
 409:Core/Src/main.c ****   }
 680              		.loc 1 409 5 is_stmt 1 view .LVU194
 681 005e FFF7FEFF 		bl	Error_Handler
 682              	.LVL25:
 683              	.L42:
 432:Core/Src/main.c ****   }
 684              		.loc 1 432 5 view .LVU195
 685 0062 FFF7FEFF 		bl	Error_Handler
 686              	.LVL26:
 687              	.L44:
 688 0066 00BF     		.align	2
 689              	.L43:
 690 0068 00000000 		.word	hcan1
 691 006c 00640040 		.word	1073767424
 692              		.cfi_endproc
 693              	.LFE295:
 695              		.section	.text.MX_CRC_Init,"ax",%progbits
 696              		.align	1
 697              		.syntax unified
 698              		.thumb
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s 			page 35


 699              		.thumb_func
 701              	MX_CRC_Init:
 702              	.LFB296:
 445:Core/Src/main.c **** 
 703              		.loc 1 445 1 view -0
 704              		.cfi_startproc
 705              		@ args = 0, pretend = 0, frame = 0
 706              		@ frame_needed = 0, uses_anonymous_args = 0
 707 0000 08B5     		push	{r3, lr}
 708              		.cfi_def_cfa_offset 8
 709              		.cfi_offset 3, -8
 710              		.cfi_offset 14, -4
 454:Core/Src/main.c ****   hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
 711              		.loc 1 454 3 view .LVU197
 454:Core/Src/main.c ****   hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
 712              		.loc 1 454 17 is_stmt 0 view .LVU198
 713 0002 0848     		ldr	r0, .L49
 714 0004 084B     		ldr	r3, .L49+4
 715 0006 0360     		str	r3, [r0]
 455:Core/Src/main.c ****   hcrc.Init.DefaultInitValueUse = DEFAULT_INIT_VALUE_ENABLE;
 716              		.loc 1 455 3 is_stmt 1 view .LVU199
 455:Core/Src/main.c ****   hcrc.Init.DefaultInitValueUse = DEFAULT_INIT_VALUE_ENABLE;
 717              		.loc 1 455 34 is_stmt 0 view .LVU200
 718 0008 0023     		movs	r3, #0
 719 000a 0371     		strb	r3, [r0, #4]
 456:Core/Src/main.c ****   hcrc.Init.InputDataInversionMode = CRC_INPUTDATA_INVERSION_NONE;
 720              		.loc 1 456 3 is_stmt 1 view .LVU201
 456:Core/Src/main.c ****   hcrc.Init.InputDataInversionMode = CRC_INPUTDATA_INVERSION_NONE;
 721              		.loc 1 456 33 is_stmt 0 view .LVU202
 722 000c 4371     		strb	r3, [r0, #5]
 457:Core/Src/main.c ****   hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
 723              		.loc 1 457 3 is_stmt 1 view .LVU203
 457:Core/Src/main.c ****   hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
 724              		.loc 1 457 36 is_stmt 0 view .LVU204
 725 000e 4361     		str	r3, [r0, #20]
 458:Core/Src/main.c ****   hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
 726              		.loc 1 458 3 is_stmt 1 view .LVU205
 458:Core/Src/main.c ****   hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
 727              		.loc 1 458 37 is_stmt 0 view .LVU206
 728 0010 8361     		str	r3, [r0, #24]
 459:Core/Src/main.c ****   if (HAL_CRC_Init(&hcrc) != HAL_OK)
 729              		.loc 1 459 3 is_stmt 1 view .LVU207
 459:Core/Src/main.c ****   if (HAL_CRC_Init(&hcrc) != HAL_OK)
 730              		.loc 1 459 24 is_stmt 0 view .LVU208
 731 0012 0123     		movs	r3, #1
 732 0014 0362     		str	r3, [r0, #32]
 460:Core/Src/main.c ****   {
 733              		.loc 1 460 3 is_stmt 1 view .LVU209
 460:Core/Src/main.c ****   {
 734              		.loc 1 460 7 is_stmt 0 view .LVU210
 735 0016 FFF7FEFF 		bl	HAL_CRC_Init
 736              	.LVL27:
 460:Core/Src/main.c ****   {
 737              		.loc 1 460 6 discriminator 1 view .LVU211
 738 001a 00B9     		cbnz	r0, .L48
 468:Core/Src/main.c **** 
 739              		.loc 1 468 1 view .LVU212
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s 			page 36


 740 001c 08BD     		pop	{r3, pc}
 741              	.L48:
 462:Core/Src/main.c ****   }
 742              		.loc 1 462 5 is_stmt 1 view .LVU213
 743 001e FFF7FEFF 		bl	Error_Handler
 744              	.LVL28:
 745              	.L50:
 746 0022 00BF     		.align	2
 747              	.L49:
 748 0024 00000000 		.word	hcrc
 749 0028 00300240 		.word	1073885184
 750              		.cfi_endproc
 751              	.LFE296:
 753              		.section	.text.MX_I2C1_Init,"ax",%progbits
 754              		.align	1
 755              		.syntax unified
 756              		.thumb
 757              		.thumb_func
 759              	MX_I2C1_Init:
 760              	.LFB297:
 476:Core/Src/main.c **** 
 761              		.loc 1 476 1 view -0
 762              		.cfi_startproc
 763              		@ args = 0, pretend = 0, frame = 0
 764              		@ frame_needed = 0, uses_anonymous_args = 0
 765 0000 08B5     		push	{r3, lr}
 766              		.cfi_def_cfa_offset 8
 767              		.cfi_offset 3, -8
 768              		.cfi_offset 14, -4
 485:Core/Src/main.c ****   hi2c1.Init.Timing = 0x00503D58;
 769              		.loc 1 485 3 view .LVU215
 485:Core/Src/main.c ****   hi2c1.Init.Timing = 0x00503D58;
 770              		.loc 1 485 18 is_stmt 0 view .LVU216
 771 0002 1148     		ldr	r0, .L59
 772 0004 114B     		ldr	r3, .L59+4
 773 0006 0360     		str	r3, [r0]
 486:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 774              		.loc 1 486 3 is_stmt 1 view .LVU217
 486:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 775              		.loc 1 486 21 is_stmt 0 view .LVU218
 776 0008 114B     		ldr	r3, .L59+8
 777 000a 4360     		str	r3, [r0, #4]
 487:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 778              		.loc 1 487 3 is_stmt 1 view .LVU219
 487:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 779              		.loc 1 487 26 is_stmt 0 view .LVU220
 780 000c 0023     		movs	r3, #0
 781 000e 8360     		str	r3, [r0, #8]
 488:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 782              		.loc 1 488 3 is_stmt 1 view .LVU221
 488:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 783              		.loc 1 488 29 is_stmt 0 view .LVU222
 784 0010 0122     		movs	r2, #1
 785 0012 C260     		str	r2, [r0, #12]
 489:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 786              		.loc 1 489 3 is_stmt 1 view .LVU223
 489:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s 			page 37


 787              		.loc 1 489 30 is_stmt 0 view .LVU224
 788 0014 0361     		str	r3, [r0, #16]
 490:Core/Src/main.c ****   hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 789              		.loc 1 490 3 is_stmt 1 view .LVU225
 490:Core/Src/main.c ****   hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 790              		.loc 1 490 26 is_stmt 0 view .LVU226
 791 0016 4361     		str	r3, [r0, #20]
 491:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 792              		.loc 1 491 3 is_stmt 1 view .LVU227
 491:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 793              		.loc 1 491 31 is_stmt 0 view .LVU228
 794 0018 8361     		str	r3, [r0, #24]
 492:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 795              		.loc 1 492 3 is_stmt 1 view .LVU229
 492:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 796              		.loc 1 492 30 is_stmt 0 view .LVU230
 797 001a C361     		str	r3, [r0, #28]
 493:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 798              		.loc 1 493 3 is_stmt 1 view .LVU231
 493:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 799              		.loc 1 493 28 is_stmt 0 view .LVU232
 800 001c 0362     		str	r3, [r0, #32]
 494:Core/Src/main.c ****   {
 801              		.loc 1 494 3 is_stmt 1 view .LVU233
 494:Core/Src/main.c ****   {
 802              		.loc 1 494 7 is_stmt 0 view .LVU234
 803 001e FFF7FEFF 		bl	HAL_I2C_Init
 804              	.LVL29:
 494:Core/Src/main.c ****   {
 805              		.loc 1 494 6 discriminator 1 view .LVU235
 806 0022 50B9     		cbnz	r0, .L56
 501:Core/Src/main.c ****   {
 807              		.loc 1 501 3 is_stmt 1 view .LVU236
 501:Core/Src/main.c ****   {
 808              		.loc 1 501 7 is_stmt 0 view .LVU237
 809 0024 0021     		movs	r1, #0
 810 0026 0848     		ldr	r0, .L59
 811 0028 FFF7FEFF 		bl	HAL_I2CEx_ConfigAnalogFilter
 812              	.LVL30:
 501:Core/Src/main.c ****   {
 813              		.loc 1 501 6 discriminator 1 view .LVU238
 814 002c 38B9     		cbnz	r0, .L57
 508:Core/Src/main.c ****   {
 815              		.loc 1 508 3 is_stmt 1 view .LVU239
 508:Core/Src/main.c ****   {
 816              		.loc 1 508 7 is_stmt 0 view .LVU240
 817 002e 0021     		movs	r1, #0
 818 0030 0548     		ldr	r0, .L59
 819 0032 FFF7FEFF 		bl	HAL_I2CEx_ConfigDigitalFilter
 820              	.LVL31:
 508:Core/Src/main.c ****   {
 821              		.loc 1 508 6 discriminator 1 view .LVU241
 822 0036 20B9     		cbnz	r0, .L58
 516:Core/Src/main.c **** 
 823              		.loc 1 516 1 view .LVU242
 824 0038 08BD     		pop	{r3, pc}
 825              	.L56:
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s 			page 38


 496:Core/Src/main.c ****   }
 826              		.loc 1 496 5 is_stmt 1 view .LVU243
 827 003a FFF7FEFF 		bl	Error_Handler
 828              	.LVL32:
 829              	.L57:
 503:Core/Src/main.c ****   }
 830              		.loc 1 503 5 view .LVU244
 831 003e FFF7FEFF 		bl	Error_Handler
 832              	.LVL33:
 833              	.L58:
 510:Core/Src/main.c ****   }
 834              		.loc 1 510 5 view .LVU245
 835 0042 FFF7FEFF 		bl	Error_Handler
 836              	.LVL34:
 837              	.L60:
 838 0046 00BF     		.align	2
 839              	.L59:
 840 0048 00000000 		.word	hi2c1
 841 004c 00540040 		.word	1073763328
 842 0050 583D5000 		.word	5258584
 843              		.cfi_endproc
 844              	.LFE297:
 846              		.section	.text.MX_I2C3_Init,"ax",%progbits
 847              		.align	1
 848              		.syntax unified
 849              		.thumb
 850              		.thumb_func
 852              	MX_I2C3_Init:
 853              	.LFB298:
 524:Core/Src/main.c **** 
 854              		.loc 1 524 1 view -0
 855              		.cfi_startproc
 856              		@ args = 0, pretend = 0, frame = 0
 857              		@ frame_needed = 0, uses_anonymous_args = 0
 858 0000 08B5     		push	{r3, lr}
 859              		.cfi_def_cfa_offset 8
 860              		.cfi_offset 3, -8
 861              		.cfi_offset 14, -4
 533:Core/Src/main.c ****   hi2c3.Init.Timing = 0x00503D58;
 862              		.loc 1 533 3 view .LVU247
 533:Core/Src/main.c ****   hi2c3.Init.Timing = 0x00503D58;
 863              		.loc 1 533 18 is_stmt 0 view .LVU248
 864 0002 1148     		ldr	r0, .L69
 865 0004 114B     		ldr	r3, .L69+4
 866 0006 0360     		str	r3, [r0]
 534:Core/Src/main.c ****   hi2c3.Init.OwnAddress1 = 0;
 867              		.loc 1 534 3 is_stmt 1 view .LVU249
 534:Core/Src/main.c ****   hi2c3.Init.OwnAddress1 = 0;
 868              		.loc 1 534 21 is_stmt 0 view .LVU250
 869 0008 114B     		ldr	r3, .L69+8
 870 000a 4360     		str	r3, [r0, #4]
 535:Core/Src/main.c ****   hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 871              		.loc 1 535 3 is_stmt 1 view .LVU251
 535:Core/Src/main.c ****   hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 872              		.loc 1 535 26 is_stmt 0 view .LVU252
 873 000c 0023     		movs	r3, #0
 874 000e 8360     		str	r3, [r0, #8]
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s 			page 39


 536:Core/Src/main.c ****   hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 875              		.loc 1 536 3 is_stmt 1 view .LVU253
 536:Core/Src/main.c ****   hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 876              		.loc 1 536 29 is_stmt 0 view .LVU254
 877 0010 0122     		movs	r2, #1
 878 0012 C260     		str	r2, [r0, #12]
 537:Core/Src/main.c ****   hi2c3.Init.OwnAddress2 = 0;
 879              		.loc 1 537 3 is_stmt 1 view .LVU255
 537:Core/Src/main.c ****   hi2c3.Init.OwnAddress2 = 0;
 880              		.loc 1 537 30 is_stmt 0 view .LVU256
 881 0014 0361     		str	r3, [r0, #16]
 538:Core/Src/main.c ****   hi2c3.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 882              		.loc 1 538 3 is_stmt 1 view .LVU257
 538:Core/Src/main.c ****   hi2c3.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 883              		.loc 1 538 26 is_stmt 0 view .LVU258
 884 0016 4361     		str	r3, [r0, #20]
 539:Core/Src/main.c ****   hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 885              		.loc 1 539 3 is_stmt 1 view .LVU259
 539:Core/Src/main.c ****   hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 886              		.loc 1 539 31 is_stmt 0 view .LVU260
 887 0018 8361     		str	r3, [r0, #24]
 540:Core/Src/main.c ****   hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 888              		.loc 1 540 3 is_stmt 1 view .LVU261
 540:Core/Src/main.c ****   hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 889              		.loc 1 540 30 is_stmt 0 view .LVU262
 890 001a C361     		str	r3, [r0, #28]
 541:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 891              		.loc 1 541 3 is_stmt 1 view .LVU263
 541:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 892              		.loc 1 541 28 is_stmt 0 view .LVU264
 893 001c 0362     		str	r3, [r0, #32]
 542:Core/Src/main.c ****   {
 894              		.loc 1 542 3 is_stmt 1 view .LVU265
 542:Core/Src/main.c ****   {
 895              		.loc 1 542 7 is_stmt 0 view .LVU266
 896 001e FFF7FEFF 		bl	HAL_I2C_Init
 897              	.LVL35:
 542:Core/Src/main.c ****   {
 898              		.loc 1 542 6 discriminator 1 view .LVU267
 899 0022 50B9     		cbnz	r0, .L66
 549:Core/Src/main.c ****   {
 900              		.loc 1 549 3 is_stmt 1 view .LVU268
 549:Core/Src/main.c ****   {
 901              		.loc 1 549 7 is_stmt 0 view .LVU269
 902 0024 0021     		movs	r1, #0
 903 0026 0848     		ldr	r0, .L69
 904 0028 FFF7FEFF 		bl	HAL_I2CEx_ConfigAnalogFilter
 905              	.LVL36:
 549:Core/Src/main.c ****   {
 906              		.loc 1 549 6 discriminator 1 view .LVU270
 907 002c 38B9     		cbnz	r0, .L67
 556:Core/Src/main.c ****   {
 908              		.loc 1 556 3 is_stmt 1 view .LVU271
 556:Core/Src/main.c ****   {
 909              		.loc 1 556 7 is_stmt 0 view .LVU272
 910 002e 0021     		movs	r1, #0
 911 0030 0548     		ldr	r0, .L69
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s 			page 40


 912 0032 FFF7FEFF 		bl	HAL_I2CEx_ConfigDigitalFilter
 913              	.LVL37:
 556:Core/Src/main.c ****   {
 914              		.loc 1 556 6 discriminator 1 view .LVU273
 915 0036 20B9     		cbnz	r0, .L68
 564:Core/Src/main.c **** 
 916              		.loc 1 564 1 view .LVU274
 917 0038 08BD     		pop	{r3, pc}
 918              	.L66:
 544:Core/Src/main.c ****   }
 919              		.loc 1 544 5 is_stmt 1 view .LVU275
 920 003a FFF7FEFF 		bl	Error_Handler
 921              	.LVL38:
 922              	.L67:
 551:Core/Src/main.c ****   }
 923              		.loc 1 551 5 view .LVU276
 924 003e FFF7FEFF 		bl	Error_Handler
 925              	.LVL39:
 926              	.L68:
 558:Core/Src/main.c ****   }
 927              		.loc 1 558 5 view .LVU277
 928 0042 FFF7FEFF 		bl	Error_Handler
 929              	.LVL40:
 930              	.L70:
 931 0046 00BF     		.align	2
 932              	.L69:
 933 0048 00000000 		.word	hi2c3
 934 004c 005C0040 		.word	1073765376
 935 0050 583D5000 		.word	5258584
 936              		.cfi_endproc
 937              	.LFE298:
 939              		.section	.text.SystemClock_Config,"ax",%progbits
 940              		.align	1
 941              		.global	SystemClock_Config
 942              		.syntax unified
 943              		.thumb
 944              		.thumb_func
 946              	SystemClock_Config:
 947              	.LFB293:
 278:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 948              		.loc 1 278 1 view -0
 949              		.cfi_startproc
 950              		@ args = 0, pretend = 0, frame = 88
 951              		@ frame_needed = 0, uses_anonymous_args = 0
 952 0000 00B5     		push	{lr}
 953              		.cfi_def_cfa_offset 4
 954              		.cfi_offset 14, -4
 955 0002 97B0     		sub	sp, sp, #92
 956              		.cfi_def_cfa_offset 96
 279:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 957              		.loc 1 279 3 view .LVU279
 279:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 958              		.loc 1 279 22 is_stmt 0 view .LVU280
 959 0004 4422     		movs	r2, #68
 960 0006 0021     		movs	r1, #0
 961 0008 05A8     		add	r0, sp, #20
 962 000a FFF7FEFF 		bl	memset
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s 			page 41


 963              	.LVL41:
 280:Core/Src/main.c **** 
 964              		.loc 1 280 3 is_stmt 1 view .LVU281
 280:Core/Src/main.c **** 
 965              		.loc 1 280 22 is_stmt 0 view .LVU282
 966 000e 0023     		movs	r3, #0
 967 0010 0093     		str	r3, [sp]
 968 0012 0193     		str	r3, [sp, #4]
 969 0014 0293     		str	r3, [sp, #8]
 970 0016 0393     		str	r3, [sp, #12]
 971 0018 0493     		str	r3, [sp, #16]
 284:Core/Src/main.c ****   {
 972              		.loc 1 284 3 is_stmt 1 view .LVU283
 284:Core/Src/main.c ****   {
 973              		.loc 1 284 7 is_stmt 0 view .LVU284
 974 001a 4FF40070 		mov	r0, #512
 975 001e FFF7FEFF 		bl	HAL_PWREx_ControlVoltageScaling
 976              	.LVL42:
 284:Core/Src/main.c ****   {
 977              		.loc 1 284 6 discriminator 1 view .LVU285
 978 0022 18BB     		cbnz	r0, .L76
 292:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 979              		.loc 1 292 3 is_stmt 1 view .LVU286
 292:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 980              		.loc 1 292 36 is_stmt 0 view .LVU287
 981 0024 0223     		movs	r3, #2
 982 0026 0593     		str	r3, [sp, #20]
 293:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 983              		.loc 1 293 3 is_stmt 1 view .LVU288
 293:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 984              		.loc 1 293 30 is_stmt 0 view .LVU289
 985 0028 4FF48072 		mov	r2, #256
 986 002c 0892     		str	r2, [sp, #32]
 294:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 987              		.loc 1 294 3 is_stmt 1 view .LVU290
 294:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 988              		.loc 1 294 41 is_stmt 0 view .LVU291
 989 002e 1022     		movs	r2, #16
 990 0030 0992     		str	r2, [sp, #36]
 295:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 991              		.loc 1 295 3 is_stmt 1 view .LVU292
 295:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 992              		.loc 1 295 34 is_stmt 0 view .LVU293
 993 0032 0F93     		str	r3, [sp, #60]
 296:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 2;
 994              		.loc 1 296 3 is_stmt 1 view .LVU294
 296:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 2;
 995              		.loc 1 296 35 is_stmt 0 view .LVU295
 996 0034 1093     		str	r3, [sp, #64]
 297:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 20;
 997              		.loc 1 297 3 is_stmt 1 view .LVU296
 297:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 20;
 998              		.loc 1 297 30 is_stmt 0 view .LVU297
 999 0036 1193     		str	r3, [sp, #68]
 298:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
 1000              		.loc 1 298 3 is_stmt 1 view .LVU298
 298:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s 			page 42


 1001              		.loc 1 298 30 is_stmt 0 view .LVU299
 1002 0038 1422     		movs	r2, #20
 1003 003a 1292     		str	r2, [sp, #72]
 299:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 1004              		.loc 1 299 3 is_stmt 1 view .LVU300
 299:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 1005              		.loc 1 299 30 is_stmt 0 view .LVU301
 1006 003c 0722     		movs	r2, #7
 1007 003e 1392     		str	r2, [sp, #76]
 300:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 1008              		.loc 1 300 3 is_stmt 1 view .LVU302
 300:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 1009              		.loc 1 300 30 is_stmt 0 view .LVU303
 1010 0040 1493     		str	r3, [sp, #80]
 301:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1011              		.loc 1 301 3 is_stmt 1 view .LVU304
 301:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1012              		.loc 1 301 30 is_stmt 0 view .LVU305
 1013 0042 1593     		str	r3, [sp, #84]
 302:Core/Src/main.c ****   {
 1014              		.loc 1 302 3 is_stmt 1 view .LVU306
 302:Core/Src/main.c ****   {
 1015              		.loc 1 302 7 is_stmt 0 view .LVU307
 1016 0044 05A8     		add	r0, sp, #20
 1017 0046 FFF7FEFF 		bl	HAL_RCC_OscConfig
 1018              	.LVL43:
 302:Core/Src/main.c ****   {
 1019              		.loc 1 302 6 discriminator 1 view .LVU308
 1020 004a 88B9     		cbnz	r0, .L77
 309:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1021              		.loc 1 309 3 is_stmt 1 view .LVU309
 309:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1022              		.loc 1 309 31 is_stmt 0 view .LVU310
 1023 004c 0F23     		movs	r3, #15
 1024 004e 0093     		str	r3, [sp]
 311:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1025              		.loc 1 311 3 is_stmt 1 view .LVU311
 311:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1026              		.loc 1 311 34 is_stmt 0 view .LVU312
 1027 0050 0323     		movs	r3, #3
 1028 0052 0193     		str	r3, [sp, #4]
 312:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1029              		.loc 1 312 3 is_stmt 1 view .LVU313
 312:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1030              		.loc 1 312 35 is_stmt 0 view .LVU314
 1031 0054 0023     		movs	r3, #0
 1032 0056 0293     		str	r3, [sp, #8]
 313:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1033              		.loc 1 313 3 is_stmt 1 view .LVU315
 313:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1034              		.loc 1 313 36 is_stmt 0 view .LVU316
 1035 0058 0393     		str	r3, [sp, #12]
 314:Core/Src/main.c **** 
 1036              		.loc 1 314 3 is_stmt 1 view .LVU317
 314:Core/Src/main.c **** 
 1037              		.loc 1 314 36 is_stmt 0 view .LVU318
 1038 005a 0493     		str	r3, [sp, #16]
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s 			page 43


 316:Core/Src/main.c ****   {
 1039              		.loc 1 316 3 is_stmt 1 view .LVU319
 316:Core/Src/main.c ****   {
 1040              		.loc 1 316 7 is_stmt 0 view .LVU320
 1041 005c 0421     		movs	r1, #4
 1042 005e 6846     		mov	r0, sp
 1043 0060 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1044              	.LVL44:
 316:Core/Src/main.c ****   {
 1045              		.loc 1 316 6 discriminator 1 view .LVU321
 1046 0064 30B9     		cbnz	r0, .L78
 320:Core/Src/main.c **** 
 1047              		.loc 1 320 1 view .LVU322
 1048 0066 17B0     		add	sp, sp, #92
 1049              		.cfi_remember_state
 1050              		.cfi_def_cfa_offset 4
 1051              		@ sp needed
 1052 0068 5DF804FB 		ldr	pc, [sp], #4
 1053              	.L76:
 1054              		.cfi_restore_state
 286:Core/Src/main.c ****   }
 1055              		.loc 1 286 5 is_stmt 1 view .LVU323
 1056 006c FFF7FEFF 		bl	Error_Handler
 1057              	.LVL45:
 1058              	.L77:
 304:Core/Src/main.c ****   }
 1059              		.loc 1 304 5 view .LVU324
 1060 0070 FFF7FEFF 		bl	Error_Handler
 1061              	.LVL46:
 1062              	.L78:
 318:Core/Src/main.c ****   }
 1063              		.loc 1 318 5 view .LVU325
 1064 0074 FFF7FEFF 		bl	Error_Handler
 1065              	.LVL47:
 1066              		.cfi_endproc
 1067              	.LFE293:
 1069              		.section	.text.main,"ax",%progbits
 1070              		.align	1
 1071              		.global	main
 1072              		.syntax unified
 1073              		.thumb
 1074              		.thumb_func
 1076              	main:
 1077              	.LFB292:
 139:Core/Src/main.c **** 
 1078              		.loc 1 139 1 view -0
 1079              		.cfi_startproc
 1080              		@ Volatile: function does not return.
 1081              		@ args = 0, pretend = 0, frame = 0
 1082              		@ frame_needed = 0, uses_anonymous_args = 0
 1083 0000 08B5     		push	{r3, lr}
 1084              		.cfi_def_cfa_offset 8
 1085              		.cfi_offset 3, -8
 1086              		.cfi_offset 14, -4
 143:Core/Src/main.c **** 
 1087              		.loc 1 143 3 view .LVU327
 1088              	.LBB16:
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s 			page 44


 1089              	.LBI16:
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1090              		.loc 3 207 27 view .LVU328
 1091              	.LBB17:
 1092              		.loc 3 209 3 view .LVU329
 1093              		.syntax unified
 1094              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1095 0002 72B6     		cpsid i
 1096              	@ 0 "" 2
 1097              		.thumb
 1098              		.syntax unified
 1099              	.LBE17:
 1100              	.LBE16:
 146:Core/Src/main.c ****   SysTick->LOAD = 0;
 1101              		.loc 1 146 3 view .LVU330
 146:Core/Src/main.c ****   SysTick->LOAD = 0;
 1102              		.loc 1 146 17 is_stmt 0 view .LVU331
 1103 0004 4FF0E023 		mov	r3, #-536813568
 1104 0008 0022     		movs	r2, #0
 1105 000a 1A61     		str	r2, [r3, #16]
 147:Core/Src/main.c ****   SysTick->VAL = 0;
 1106              		.loc 1 147 3 is_stmt 1 view .LVU332
 147:Core/Src/main.c ****   SysTick->VAL = 0;
 1107              		.loc 1 147 17 is_stmt 0 view .LVU333
 1108 000c 5A61     		str	r2, [r3, #20]
 148:Core/Src/main.c **** 
 1109              		.loc 1 148 3 is_stmt 1 view .LVU334
 148:Core/Src/main.c **** 
 1110              		.loc 1 148 16 is_stmt 0 view .LVU335
 1111 000e 9A61     		str	r2, [r3, #24]
 155:Core/Src/main.c **** 
 1112              		.loc 1 155 3 is_stmt 1 view .LVU336
 1113 0010 FFF7FEFF 		bl	HAL_Init
 1114              	.LVL48:
 162:Core/Src/main.c **** 
 1115              		.loc 1 162 3 view .LVU337
 1116 0014 FFF7FEFF 		bl	SystemClock_Config
 1117              	.LVL49:
 169:Core/Src/main.c ****   MX_ADC1_Init();
 1118              		.loc 1 169 3 view .LVU338
 1119 0018 FFF7FEFF 		bl	MX_GPIO_Init
 1120              	.LVL50:
 170:Core/Src/main.c ****   MX_CAN1_Init();
 1121              		.loc 1 170 3 view .LVU339
 1122 001c FFF7FEFF 		bl	MX_ADC1_Init
 1123              	.LVL51:
 171:Core/Src/main.c ****   MX_CRC_Init();
 1124              		.loc 1 171 3 view .LVU340
 1125 0020 FFF7FEFF 		bl	MX_CAN1_Init
 1126              	.LVL52:
 172:Core/Src/main.c ****   MX_I2C1_Init();
 1127              		.loc 1 172 3 view .LVU341
 1128 0024 FFF7FEFF 		bl	MX_CRC_Init
 1129              	.LVL53:
 173:Core/Src/main.c ****   MX_I2C3_Init();
 1130              		.loc 1 173 3 view .LVU342
 1131 0028 FFF7FEFF 		bl	MX_I2C1_Init
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s 			page 45


 1132              	.LVL54:
 174:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1133              		.loc 1 174 3 view .LVU343
 1134 002c FFF7FEFF 		bl	MX_I2C3_Init
 1135              	.LVL55:
 178:Core/Src/main.c ****   {
 1136              		.loc 1 178 3 view .LVU344
 178:Core/Src/main.c ****   {
 1137              		.loc 1 178 7 is_stmt 0 view .LVU345
 1138 0030 7F21     		movs	r1, #127
 1139 0032 2948     		ldr	r0, .L86
 1140 0034 FFF7FEFF 		bl	HAL_ADCEx_Calibration_Start
 1141              	.LVL56:
 178:Core/Src/main.c ****   {
 1142              		.loc 1 178 6 discriminator 1 view .LVU346
 1143 0038 08B1     		cbz	r0, .L80
 180:Core/Src/main.c ****   }
 1144              		.loc 1 180 5 is_stmt 1 view .LVU347
 1145 003a FFF7FEFF 		bl	Error_Handler
 1146              	.LVL57:
 1147              	.L80:
 184:Core/Src/main.c ****   {
 1148              		.loc 1 184 3 view .LVU348
 184:Core/Src/main.c ****   {
 1149              		.loc 1 184 7 is_stmt 0 view .LVU349
 1150 003e 2748     		ldr	r0, .L86+4
 1151 0040 FFF7FEFF 		bl	HAL_CAN_Start
 1152              	.LVL58:
 184:Core/Src/main.c ****   {
 1153              		.loc 1 184 6 discriminator 1 view .LVU350
 1154 0044 08B1     		cbz	r0, .L81
 186:Core/Src/main.c ****   }
 1155              		.loc 1 186 5 is_stmt 1 view .LVU351
 1156 0046 FFF7FEFF 		bl	Error_Handler
 1157              	.LVL59:
 1158              	.L81:
 192:Core/Src/main.c ****   /* Create the mutex(es) */
 1159              		.loc 1 192 3 view .LVU352
 1160 004a FFF7FEFF 		bl	osKernelInitialize
 1161              	.LVL60:
 195:Core/Src/main.c **** 
 1162              		.loc 1 195 3 view .LVU353
 195:Core/Src/main.c **** 
 1163              		.loc 1 195 16 is_stmt 0 view .LVU354
 1164 004e 2448     		ldr	r0, .L86+8
 1165 0050 FFF7FEFF 		bl	osMutexNew
 1166              	.LVL61:
 195:Core/Src/main.c **** 
 1167              		.loc 1 195 14 discriminator 1 view .LVU355
 1168 0054 234B     		ldr	r3, .L86+12
 1169 0056 1860     		str	r0, [r3]
 198:Core/Src/main.c **** 
 1170              		.loc 1 198 3 is_stmt 1 view .LVU356
 198:Core/Src/main.c **** 
 1171              		.loc 1 198 16 is_stmt 0 view .LVU357
 1172 0058 2348     		ldr	r0, .L86+16
 1173 005a FFF7FEFF 		bl	osMutexNew
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s 			page 46


 1174              	.LVL62:
 198:Core/Src/main.c **** 
 1175              		.loc 1 198 14 discriminator 1 view .LVU358
 1176 005e 234B     		ldr	r3, .L86+20
 1177 0060 1860     		str	r0, [r3]
 201:Core/Src/main.c **** 
 1178              		.loc 1 201 3 is_stmt 1 view .LVU359
 201:Core/Src/main.c **** 
 1179              		.loc 1 201 15 is_stmt 0 view .LVU360
 1180 0062 2348     		ldr	r0, .L86+24
 1181 0064 FFF7FEFF 		bl	osMutexNew
 1182              	.LVL63:
 201:Core/Src/main.c **** 
 1183              		.loc 1 201 13 discriminator 1 view .LVU361
 1184 0068 224B     		ldr	r3, .L86+28
 1185 006a 1860     		str	r0, [r3]
 217:Core/Src/main.c ****   
 1186              		.loc 1 217 3 is_stmt 1 view .LVU362
 1187 006c FFF7FEFF 		bl	Config_Init
 1188              	.LVL64:
 220:Core/Src/main.c ****   {
 1189              		.loc 1 220 3 view .LVU363
 220:Core/Src/main.c ****   {
 1190              		.loc 1 220 7 is_stmt 0 view .LVU364
 1191 0070 FFF7FEFF 		bl	ErrorMgr_Init
 1192              	.LVL65:
 220:Core/Src/main.c ****   {
 1193              		.loc 1 220 6 discriminator 1 view .LVU365
 1194 0074 08B1     		cbz	r0, .L82
 222:Core/Src/main.c ****   }
 1195              		.loc 1 222 5 is_stmt 1 view .LVU366
 1196 0076 FFF7FEFF 		bl	Error_Handler
 1197              	.LVL66:
 1198              	.L82:
 226:Core/Src/main.c ****   {
 1199              		.loc 1 226 3 view .LVU367
 226:Core/Src/main.c ****   {
 1200              		.loc 1 226 7 is_stmt 0 view .LVU368
 1201 007a FFF7FEFF 		bl	CAN_Manager_Init
 1202              	.LVL67:
 226:Core/Src/main.c ****   {
 1203              		.loc 1 226 6 discriminator 1 view .LVU369
 1204 007e 08B1     		cbz	r0, .L83
 228:Core/Src/main.c ****   }
 1205              		.loc 1 228 5 is_stmt 1 view .LVU370
 1206 0080 FFF7FEFF 		bl	Error_Handler
 1207              	.LVL68:
 1208              	.L83:
 232:Core/Src/main.c ****   /* USER CODE END RTOS_QUEUES */
 1209              		.loc 1 232 3 view .LVU371
 1210 0084 0120     		movs	r0, #1
 1211 0086 FFF7FEFF 		bl	ErrorMgr_SetState
 1212              	.LVL69:
 237:Core/Src/main.c **** 
 1213              		.loc 1 237 3 view .LVU372
 237:Core/Src/main.c **** 
 1214              		.loc 1 237 23 is_stmt 0 view .LVU373
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s 			page 47


 1215 008a 1B4A     		ldr	r2, .L86+32
 1216 008c 0021     		movs	r1, #0
 1217 008e 1B48     		ldr	r0, .L86+36
 1218 0090 FFF7FEFF 		bl	osThreadNew
 1219              	.LVL70:
 237:Core/Src/main.c **** 
 1220              		.loc 1 237 21 discriminator 1 view .LVU374
 1221 0094 1A4B     		ldr	r3, .L86+40
 1222 0096 1860     		str	r0, [r3]
 241:Core/Src/main.c **** 
 1223              		.loc 1 241 3 is_stmt 1 view .LVU375
 241:Core/Src/main.c **** 
 1224              		.loc 1 241 27 is_stmt 0 view .LVU376
 1225 0098 1A4A     		ldr	r2, .L86+44
 1226 009a 0021     		movs	r1, #0
 1227 009c 1A48     		ldr	r0, .L86+48
 1228 009e FFF7FEFF 		bl	osThreadNew
 1229              	.LVL71:
 241:Core/Src/main.c **** 
 1230              		.loc 1 241 25 discriminator 1 view .LVU377
 1231 00a2 1A4B     		ldr	r3, .L86+52
 1232 00a4 1860     		str	r0, [r3]
 244:Core/Src/main.c **** 
 1233              		.loc 1 244 3 is_stmt 1 view .LVU378
 244:Core/Src/main.c **** 
 1234              		.loc 1 244 27 is_stmt 0 view .LVU379
 1235 00a6 1A4A     		ldr	r2, .L86+56
 1236 00a8 0021     		movs	r1, #0
 1237 00aa 1A48     		ldr	r0, .L86+60
 1238 00ac FFF7FEFF 		bl	osThreadNew
 1239              	.LVL72:
 244:Core/Src/main.c **** 
 1240              		.loc 1 244 25 discriminator 1 view .LVU380
 1241 00b0 194B     		ldr	r3, .L86+64
 1242 00b2 1860     		str	r0, [r3]
 247:Core/Src/main.c **** 
 1243              		.loc 1 247 3 is_stmt 1 view .LVU381
 247:Core/Src/main.c **** 
 1244              		.loc 1 247 27 is_stmt 0 view .LVU382
 1245 00b4 194A     		ldr	r2, .L86+68
 1246 00b6 0021     		movs	r1, #0
 1247 00b8 1948     		ldr	r0, .L86+72
 1248 00ba FFF7FEFF 		bl	osThreadNew
 1249              	.LVL73:
 247:Core/Src/main.c **** 
 1250              		.loc 1 247 25 discriminator 1 view .LVU383
 1251 00be 194B     		ldr	r3, .L86+76
 1252 00c0 1860     		str	r0, [r3]
 250:Core/Src/main.c ****   /* USER CODE END RTOS_THREADS */
 1253              		.loc 1 250 3 is_stmt 1 view .LVU384
 250:Core/Src/main.c ****   /* USER CODE END RTOS_THREADS */
 1254              		.loc 1 250 22 is_stmt 0 view .LVU385
 1255 00c2 194A     		ldr	r2, .L86+80
 1256 00c4 0021     		movs	r1, #0
 1257 00c6 1948     		ldr	r0, .L86+84
 1258 00c8 FFF7FEFF 		bl	osThreadNew
 1259              	.LVL74:
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s 			page 48


 250:Core/Src/main.c ****   /* USER CODE END RTOS_THREADS */
 1260              		.loc 1 250 20 discriminator 1 view .LVU386
 1261 00cc 184B     		ldr	r3, .L86+88
 1262 00ce 1860     		str	r0, [r3]
 258:Core/Src/main.c **** 
 1263              		.loc 1 258 3 is_stmt 1 view .LVU387
 1264 00d0 FFF7FEFF 		bl	osKernelStart
 1265              	.LVL75:
 1266              	.L84:
 264:Core/Src/main.c ****   {
 1267              		.loc 1 264 3 view .LVU388
 269:Core/Src/main.c ****   /* USER CODE END 3 */
 1268              		.loc 1 269 3 view .LVU389
 264:Core/Src/main.c ****   {
 1269              		.loc 1 264 9 view .LVU390
 1270 00d4 FEE7     		b	.L84
 1271              	.L87:
 1272 00d6 00BF     		.align	2
 1273              	.L86:
 1274 00d8 00000000 		.word	hadc1
 1275 00dc 00000000 		.word	hcan1
 1276 00e0 00000000 		.word	I2C1_attributes
 1277 00e4 00000000 		.word	I2C1Handle
 1278 00e8 00000000 		.word	I2C3_attributes
 1279 00ec 00000000 		.word	I2C3Handle
 1280 00f0 00000000 		.word	CAN_attributes
 1281 00f4 00000000 		.word	CANHandle
 1282 00f8 00000000 		.word	defaultTask_attributes
 1283 00fc 00000000 		.word	StartDefaultTask
 1284 0100 00000000 		.word	defaultTaskHandle
 1285 0104 00000000 		.word	CellVoltageBMS1_attributes
 1286 0108 00000000 		.word	ReadCellVoltageBMS1
 1287 010c 00000000 		.word	CellVoltageBMS1Handle
 1288 0110 00000000 		.word	CellVoltageBMS2_attributes
 1289 0114 00000000 		.word	ReadCellVoltageBMS2
 1290 0118 00000000 		.word	CellVoltageBMS2Handle
 1291 011c 00000000 		.word	CellTemperature_attributes
 1292 0120 00000000 		.word	ReadCellTemps
 1293 0124 00000000 		.word	CellTemperatureHandle
 1294 0128 00000000 		.word	CANManager_attributes
 1295 012c 00000000 		.word	CAN_ManagerTask
 1296 0130 00000000 		.word	CANManagerHandle
 1297              		.cfi_endproc
 1298              	.LFE292:
 1300              		.global	CAN_attributes
 1301              		.section	.rodata.str1.4,"aMS",%progbits,1
 1302              		.align	2
 1303              	.LC0:
 1304 0000 43414E00 		.ascii	"CAN\000"
 1305              		.section	.rodata.CAN_attributes,"a"
 1306              		.align	2
 1309              	CAN_attributes:
 1310 0000 00000000 		.word	.LC0
 1311 0004 00000000 		.space	12
 1311      00000000 
 1311      00000000 
 1312              		.global	CANHandle
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s 			page 49


 1313              		.section	.bss.CANHandle,"aw",%nobits
 1314              		.align	2
 1317              	CANHandle:
 1318 0000 00000000 		.space	4
 1319              		.global	I2C3_attributes
 1320              		.section	.rodata.str1.4
 1321              		.align	2
 1322              	.LC1:
 1323 0004 49324333 		.ascii	"I2C3\000"
 1323      00
 1324              		.section	.rodata.I2C3_attributes,"a"
 1325              		.align	2
 1328              	I2C3_attributes:
 1329 0000 04000000 		.word	.LC1
 1330 0004 00000000 		.space	12
 1330      00000000 
 1330      00000000 
 1331              		.global	I2C3Handle
 1332              		.section	.bss.I2C3Handle,"aw",%nobits
 1333              		.align	2
 1336              	I2C3Handle:
 1337 0000 00000000 		.space	4
 1338              		.global	I2C1_attributes
 1339              		.section	.rodata.str1.4
 1340 0009 000000   		.align	2
 1341              	.LC2:
 1342 000c 49324331 		.ascii	"I2C1\000"
 1342      00
 1343              		.section	.rodata.I2C1_attributes,"a"
 1344              		.align	2
 1347              	I2C1_attributes:
 1348 0000 0C000000 		.word	.LC2
 1349 0004 00000000 		.space	12
 1349      00000000 
 1349      00000000 
 1350              		.global	I2C1Handle
 1351              		.section	.bss.I2C1Handle,"aw",%nobits
 1352              		.align	2
 1355              	I2C1Handle:
 1356 0000 00000000 		.space	4
 1357              		.global	CANManager_attributes
 1358              		.section	.rodata.str1.4
 1359 0011 000000   		.align	2
 1360              	.LC3:
 1361 0014 43414E4D 		.ascii	"CANManager\000"
 1361      616E6167 
 1361      657200
 1362              		.section	.rodata.CANManager_attributes,"a"
 1363              		.align	2
 1366              	CANManager_attributes:
 1367 0000 14000000 		.word	.LC3
 1368 0004 00000000 		.space	16
 1368      00000000 
 1368      00000000 
 1368      00000000 
 1369 0014 00040000 		.word	1024
 1370 0018 30000000 		.word	48
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s 			page 50


 1371 001c 00000000 		.space	8
 1371      00000000 
 1372              		.global	CANManagerHandle
 1373              		.section	.bss.CANManagerHandle,"aw",%nobits
 1374              		.align	2
 1377              	CANManagerHandle:
 1378 0000 00000000 		.space	4
 1379              		.global	CellTemperature_attributes
 1380              		.section	.rodata.str1.4
 1381 001f 00       		.align	2
 1382              	.LC4:
 1383 0020 43656C6C 		.ascii	"CellTemperature\000"
 1383      54656D70 
 1383      65726174 
 1383      75726500 
 1384              		.section	.rodata.CellTemperature_attributes,"a"
 1385              		.align	2
 1388              	CellTemperature_attributes:
 1389 0000 20000000 		.word	.LC4
 1390 0004 00000000 		.space	16
 1390      00000000 
 1390      00000000 
 1390      00000000 
 1391 0014 00020000 		.word	512
 1392 0018 28000000 		.word	40
 1393 001c 00000000 		.space	8
 1393      00000000 
 1394              		.global	CellTemperatureHandle
 1395              		.section	.bss.CellTemperatureHandle,"aw",%nobits
 1396              		.align	2
 1399              	CellTemperatureHandle:
 1400 0000 00000000 		.space	4
 1401              		.global	CellVoltageBMS2_attributes
 1402              		.section	.rodata.str1.4
 1403              		.align	2
 1404              	.LC5:
 1405 0030 43656C6C 		.ascii	"CellVoltageBMS2\000"
 1405      566F6C74 
 1405      61676542 
 1405      4D533200 
 1406              		.section	.rodata.CellVoltageBMS2_attributes,"a"
 1407              		.align	2
 1410              	CellVoltageBMS2_attributes:
 1411 0000 30000000 		.word	.LC5
 1412 0004 00000000 		.space	16
 1412      00000000 
 1412      00000000 
 1412      00000000 
 1413 0014 00020000 		.word	512
 1414 0018 28000000 		.word	40
 1415 001c 00000000 		.space	8
 1415      00000000 
 1416              		.global	CellVoltageBMS2Handle
 1417              		.section	.bss.CellVoltageBMS2Handle,"aw",%nobits
 1418              		.align	2
 1421              	CellVoltageBMS2Handle:
 1422 0000 00000000 		.space	4
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s 			page 51


 1423              		.global	CellVoltageBMS1_attributes
 1424              		.section	.rodata.str1.4
 1425              		.align	2
 1426              	.LC6:
 1427 0040 43656C6C 		.ascii	"CellVoltageBMS1\000"
 1427      566F6C74 
 1427      61676542 
 1427      4D533100 
 1428              		.section	.rodata.CellVoltageBMS1_attributes,"a"
 1429              		.align	2
 1432              	CellVoltageBMS1_attributes:
 1433 0000 40000000 		.word	.LC6
 1434 0004 00000000 		.space	16
 1434      00000000 
 1434      00000000 
 1434      00000000 
 1435 0014 00020000 		.word	512
 1436 0018 28000000 		.word	40
 1437 001c 00000000 		.space	8
 1437      00000000 
 1438              		.global	CellVoltageBMS1Handle
 1439              		.section	.bss.CellVoltageBMS1Handle,"aw",%nobits
 1440              		.align	2
 1443              	CellVoltageBMS1Handle:
 1444 0000 00000000 		.space	4
 1445              		.global	defaultTask_attributes
 1446              		.section	.rodata.str1.4
 1447              		.align	2
 1448              	.LC7:
 1449 0050 64656661 		.ascii	"defaultTask\000"
 1449      756C7454 
 1449      61736B00 
 1450              		.section	.rodata.defaultTask_attributes,"a"
 1451              		.align	2
 1454              	defaultTask_attributes:
 1455 0000 50000000 		.word	.LC7
 1456 0004 00000000 		.space	16
 1456      00000000 
 1456      00000000 
 1456      00000000 
 1457 0014 00020000 		.word	512
 1458 0018 18000000 		.word	24
 1459 001c 00000000 		.space	8
 1459      00000000 
 1460              		.global	defaultTaskHandle
 1461              		.section	.bss.defaultTaskHandle,"aw",%nobits
 1462              		.align	2
 1465              	defaultTaskHandle:
 1466 0000 00000000 		.space	4
 1467              		.global	hi2c3
 1468              		.section	.bss.hi2c3,"aw",%nobits
 1469              		.align	2
 1472              	hi2c3:
 1473 0000 00000000 		.space	84
 1473      00000000 
 1473      00000000 
 1473      00000000 
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s 			page 52


 1473      00000000 
 1474              		.global	hi2c1
 1475              		.section	.bss.hi2c1,"aw",%nobits
 1476              		.align	2
 1479              	hi2c1:
 1480 0000 00000000 		.space	84
 1480      00000000 
 1480      00000000 
 1480      00000000 
 1480      00000000 
 1481              		.global	hcrc
 1482              		.section	.bss.hcrc,"aw",%nobits
 1483              		.align	2
 1486              	hcrc:
 1487 0000 00000000 		.space	36
 1487      00000000 
 1487      00000000 
 1487      00000000 
 1487      00000000 
 1488              		.global	hcan1
 1489              		.section	.bss.hcan1,"aw",%nobits
 1490              		.align	2
 1493              	hcan1:
 1494 0000 00000000 		.space	40
 1494      00000000 
 1494      00000000 
 1494      00000000 
 1494      00000000 
 1495              		.global	hadc1
 1496              		.section	.bss.hadc1,"aw",%nobits
 1497              		.align	2
 1500              	hadc1:
 1501 0000 00000000 		.space	100
 1501      00000000 
 1501      00000000 
 1501      00000000 
 1501      00000000 
 1502              		.text
 1503              	.Letext0:
 1504              		.file 4 "C:/Users/Ali/AppData/Roaming/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tool
 1505              		.file 5 "C:/Users/Ali/AppData/Roaming/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tool
 1506              		.file 6 "Drivers/CMSIS/Include/core_cm4.h"
 1507              		.file 7 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l432xx.h"
 1508              		.file 8 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l4xx.h"
 1509              		.file 9 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 1510              		.file 10 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rcc.h"
 1511              		.file 11 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_gpio.h"
 1512              		.file 12 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 1513              		.file 13 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_adc.h"
 1514              		.file 14 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_can.h"
 1515              		.file 15 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_crc.h"
 1516              		.file 16 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_i2c.h"
 1517              		.file 17 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_tim.h"
 1518              		.file 18 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h"
 1519              		.file 19 "Core/Inc/cell_temp_handler.h"
 1520              		.file 20 "Core/Inc/cell_voltage_handler.h"
 1521              		.file 21 "Core/Inc/error_manager.h"
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s 			page 53


 1522              		.file 22 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_pwr_ex.h"
 1523              		.file 23 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_i2c_ex.h"
 1524              		.file 24 "Core/Inc/can_manager.h"
 1525              		.file 25 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
 1526              		.file 26 "Core/Inc/config_manager.h"
 1527              		.file 27 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_adc_ex.h"
 1528              		.file 28 "<built-in>"
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s 			page 54


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s:21     .text.MX_GPIO_Init:00000000 $t
C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s:26     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s:155    .text.MX_GPIO_Init:00000094 $d
C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s:161    .text.StartDefaultTask:00000000 $t
C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s:167    .text.StartDefaultTask:00000000 StartDefaultTask
C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s:193    .text.ReadCellVoltageBMS1:00000000 $t
C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s:199    .text.ReadCellVoltageBMS1:00000000 ReadCellVoltageBMS1
C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s:220    .text.ReadCellVoltageBMS2:00000000 $t
C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s:226    .text.ReadCellVoltageBMS2:00000000 ReadCellVoltageBMS2
C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s:247    .text.ReadCellTemps:00000000 $t
C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s:253    .text.ReadCellTemps:00000000 ReadCellTemps
C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s:274    .text.vApplicationMallocFailedHook:00000000 $t
C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s:280    .text.vApplicationMallocFailedHook:00000000 vApplicationMallocFailedHook
C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s:339    .text.vApplicationMallocFailedHook:00000030 $d
C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s:346    .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s:352    .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s:385    .text.HAL_TIM_PeriodElapsedCallback:00000014 $d
C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s:390    .text.Error_Handler:00000000 $t
C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s:396    .text.Error_Handler:00000000 Error_Handler
C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s:428    .text.MX_ADC1_Init:00000000 $t
C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s:433    .text.MX_ADC1_Init:00000000 MX_ADC1_Init
C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s:558    .text.MX_ADC1_Init:00000074 $d
C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s:1500   .bss.hadc1:00000000 hadc1
C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s:565    .text.MX_CAN1_Init:00000000 $t
C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s:570    .text.MX_CAN1_Init:00000000 MX_CAN1_Init
C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s:690    .text.MX_CAN1_Init:00000068 $d
C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s:1493   .bss.hcan1:00000000 hcan1
C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s:696    .text.MX_CRC_Init:00000000 $t
C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s:701    .text.MX_CRC_Init:00000000 MX_CRC_Init
C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s:748    .text.MX_CRC_Init:00000024 $d
C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s:1486   .bss.hcrc:00000000 hcrc
C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s:754    .text.MX_I2C1_Init:00000000 $t
C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s:759    .text.MX_I2C1_Init:00000000 MX_I2C1_Init
C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s:840    .text.MX_I2C1_Init:00000048 $d
C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s:1479   .bss.hi2c1:00000000 hi2c1
C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s:847    .text.MX_I2C3_Init:00000000 $t
C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s:852    .text.MX_I2C3_Init:00000000 MX_I2C3_Init
C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s:933    .text.MX_I2C3_Init:00000048 $d
C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s:1472   .bss.hi2c3:00000000 hi2c3
C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s:940    .text.SystemClock_Config:00000000 $t
C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s:946    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s:1070   .text.main:00000000 $t
C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s:1076   .text.main:00000000 main
C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s:1274   .text.main:000000d8 $d
C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s:1347   .rodata.I2C1_attributes:00000000 I2C1_attributes
C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s:1355   .bss.I2C1Handle:00000000 I2C1Handle
C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s:1328   .rodata.I2C3_attributes:00000000 I2C3_attributes
C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s:1336   .bss.I2C3Handle:00000000 I2C3Handle
C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s:1309   .rodata.CAN_attributes:00000000 CAN_attributes
C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s:1317   .bss.CANHandle:00000000 CANHandle
C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s:1454   .rodata.defaultTask_attributes:00000000 defaultTask_attributes
C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s:1465   .bss.defaultTaskHandle:00000000 defaultTaskHandle
C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s:1432   .rodata.CellVoltageBMS1_attributes:00000000 CellVoltageBMS1_attributes
C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s:1443   .bss.CellVoltageBMS1Handle:00000000 CellVoltageBMS1Handle
C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s:1410   .rodata.CellVoltageBMS2_attributes:00000000 CellVoltageBMS2_attributes
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s 			page 55


C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s:1421   .bss.CellVoltageBMS2Handle:00000000 CellVoltageBMS2Handle
C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s:1388   .rodata.CellTemperature_attributes:00000000 CellTemperature_attributes
C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s:1399   .bss.CellTemperatureHandle:00000000 CellTemperatureHandle
C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s:1366   .rodata.CANManager_attributes:00000000 CANManager_attributes
C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s:1377   .bss.CANManagerHandle:00000000 CANManagerHandle
C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s:1302   .rodata.str1.4:00000000 $d
C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s:1306   .rodata.CAN_attributes:00000000 $d
C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s:1314   .bss.CANHandle:00000000 $d
C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s:1325   .rodata.I2C3_attributes:00000000 $d
C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s:1333   .bss.I2C3Handle:00000000 $d
C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s:1344   .rodata.I2C1_attributes:00000000 $d
C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s:1352   .bss.I2C1Handle:00000000 $d
C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s:1363   .rodata.CANManager_attributes:00000000 $d
C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s:1374   .bss.CANManagerHandle:00000000 $d
C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s:1385   .rodata.CellTemperature_attributes:00000000 $d
C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s:1396   .bss.CellTemperatureHandle:00000000 $d
C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s:1407   .rodata.CellVoltageBMS2_attributes:00000000 $d
C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s:1418   .bss.CellVoltageBMS2Handle:00000000 $d
C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s:1429   .rodata.CellVoltageBMS1_attributes:00000000 $d
C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s:1440   .bss.CellVoltageBMS1Handle:00000000 $d
C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s:1451   .rodata.defaultTask_attributes:00000000 $d
C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s:1462   .bss.defaultTaskHandle:00000000 $d
C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s:1469   .bss.hi2c3:00000000 $d
C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s:1476   .bss.hi2c1:00000000 $d
C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s:1483   .bss.hcrc:00000000 $d
C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s:1490   .bss.hcan1:00000000 $d
C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s:1497   .bss.hadc1:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
osDelay
CellVoltage_MonitorTask
CellVoltage_MonitorTask_BMS2
CellTemp_MonitorTask
HAL_GPIO_TogglePin
HAL_IncTick
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_CAN_Init
HAL_CAN_ConfigFilter
HAL_CRC_Init
HAL_I2C_Init
HAL_I2CEx_ConfigAnalogFilter
HAL_I2CEx_ConfigDigitalFilter
memset
HAL_PWREx_ControlVoltageScaling
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_ADCEx_Calibration_Start
HAL_CAN_Start
osKernelInitialize
osMutexNew
Config_Init
ErrorMgr_Init
CAN_Manager_Init
ARM GAS  C:\Users\Ali\AppData\Local\Temp\ccMe0h0A.s 			page 56


ErrorMgr_SetState
osThreadNew
osKernelStart
CAN_ManagerTask
